From 4a02524aef7f78af52cc7c7beedfa1eb83f8ccb5 Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Fri, 12 Oct 2007 23:36:12 +0000
Subject: [PATCH] IO-128 - currently file name "normalization" errors in the
 equals method causes a mis-leading NullPointerException. Adding a check for
 this and throwing an IllegalArgumentException with a better message should
 improve the user experience.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584325 13f79535-47bb-0310-9956-ffa450edef68
---
 .../org/apache/commons/io/FilenameUtils.java  |  4 ++++
 .../commons/io/FilenameUtilsTestCase.java     | 24 +++++++++++++++++++
 2 files changed, 28 insertions(+)

diff --git a/src/java/org/apache/commons/io/FilenameUtils.java b/src/java/org/apache/commons/io/FilenameUtils.java
index 006859f10a7..2c6c62fd975 100644
--- a/src/java/org/apache/commons/io/FilenameUtils.java
+++ b/src/java/org/apache/commons/io/FilenameUtils.java
@@ -977,6 +977,10 @@ public static boolean equals(
         if (normalized) {
             filename1 = normalize(filename1);
             filename2 = normalize(filename2);
+            if (filename1 == null || filename2 == null) {
+                throw new IllegalArgumentException(
+                    "Error normalizing one or both of the file names");
+            }
         }
         if (caseSensitivity == null) {
             caseSensitivity = IOCase.SENSITIVE;
diff --git a/src/test/org/apache/commons/io/FilenameUtilsTestCase.java b/src/test/org/apache/commons/io/FilenameUtilsTestCase.java
index 99638f0ca9e..637f8acfe60 100644
--- a/src/test/org/apache/commons/io/FilenameUtilsTestCase.java
+++ b/src/test/org/apache/commons/io/FilenameUtilsTestCase.java
@@ -784,6 +784,30 @@ public void testEqualsNormalizedOnSystem() {
         assertEquals(false, FilenameUtils.equalsNormalizedOnSystem("a/b/", "a/b"));
     }
 
+    /**
+     * Test for https://issues.apache.org/jira/browse/IO-128
+     */
+    public void testEqualsNormalizedError_IO_128() {
+        try {
+            FilenameUtils.equalsNormalizedOnSystem("//file.txt", "file.txt");
+            fail("Invalid normalized first file");
+        } catch(IllegalArgumentException e) {
+            // expected result
+        }
+        try {
+            FilenameUtils.equalsNormalizedOnSystem("file.txt", "//file.txt");
+            fail("Invalid normalized second file");
+        } catch(IllegalArgumentException e) {
+            // expected result
+        }
+        try {
+            FilenameUtils.equalsNormalizedOnSystem("//file.txt", "//file.txt");
+            fail("Invalid normalized both filse");
+        } catch(IllegalArgumentException e) {
+            // expected result
+        }
+    }
+
     public void testEquals_fullControl() {
         assertEquals(false, FilenameUtils.equals("file.txt", "FILE.TXT", true, IOCase.SENSITIVE));
         assertEquals(true, FilenameUtils.equals("file.txt", "FILE.TXT", true, IOCase.INSENSITIVE));
