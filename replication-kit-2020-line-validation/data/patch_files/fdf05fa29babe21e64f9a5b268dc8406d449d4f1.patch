From fdf05fa29babe21e64f9a5b268dc8406d449d4f1 Mon Sep 17 00:00:00 2001
From: pascalschumacher <pascalschumacher@gmx.net>
Date: Fri, 8 Sep 2017 18:43:16 +0200
Subject: [PATCH] LANG-1349: EqualsBuilder#isRegistered: swappedPair
 construction bug

Modify test to clean-up registry at the end.
---
 .../lang3/builder/EqualsBuilderTest.java       | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java b/src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java
index 8dad5e8eb17..d516dcafe92 100644
--- a/src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java
@@ -1346,12 +1346,18 @@ public void testIsRegistered() throws Exception {
         Object firstObject = new Object();
         Object secondObject = new Object();
 
-        Method registerMethod = MethodUtils.getMatchingMethod(EqualsBuilder.class, "register", Object.class, Object.class);
-        registerMethod.setAccessible(true);
-        registerMethod.invoke(null, firstObject, secondObject);
-
-        assertTrue(EqualsBuilder.isRegistered(firstObject, secondObject));
-        assertTrue(EqualsBuilder.isRegistered(secondObject, firstObject)); // LANG-1349
+        try {
+            Method registerMethod = MethodUtils.getMatchingMethod(EqualsBuilder.class, "register", Object.class, Object.class);
+            registerMethod.setAccessible(true);
+            registerMethod.invoke(null, firstObject, secondObject);
+
+            assertTrue(EqualsBuilder.isRegistered(firstObject, secondObject));
+            assertTrue(EqualsBuilder.isRegistered(secondObject, firstObject)); // LANG-1349
+        } finally {
+            Method unregisterMethod = MethodUtils.getMatchingMethod(EqualsBuilder.class, "unregister", Object.class, Object.class);
+            unregisterMethod.setAccessible(true);
+            unregisterMethod.invoke(null, firstObject, secondObject);
+        }
     }
 }
 
