From 1804ef88b289afbef3809c91c44fdc7b97a463f3 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Thu, 23 Oct 2008 23:16:10 +0000
Subject: [PATCH] Attempt to fix: "Latest Compatible Conflict Manager + Extra
 Attributes in Dependencies' IVY files == inifinite loop" (IVY-956)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@707496 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/ivy/core/resolve/VisitNode.java | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/src/java/org/apache/ivy/core/resolve/VisitNode.java b/src/java/org/apache/ivy/core/resolve/VisitNode.java
index 421972f14..6e2d11d53 100644
--- a/src/java/org/apache/ivy/core/resolve/VisitNode.java
+++ b/src/java/org/apache/ivy/core/resolve/VisitNode.java
@@ -34,6 +34,7 @@
 import org.apache.ivy.core.resolve.IvyNodeEviction.EvictionData;
 import org.apache.ivy.plugins.conflict.ConflictManager;
 import org.apache.ivy.util.Checks;
+import org.apache.ivy.util.Message;
 
 /**
  * A visit node is an object used to represent one visit from one parent on an {@link IvyNode} of
@@ -272,7 +273,13 @@ public boolean loadData(String conf, boolean shouldBePublic) {
             rootModuleConf, getParentNode(), parentConf, conf, shouldBePublic, getUsage());
         if (loaded) {
             useRealNode();
-
+            
+            // check if the real node is blacklisted -> if so, skip further loading
+            if (getRealNode().isBlacklisted(rootModuleConf)) {
+                Message.debug(rootModuleConf + " is blacklisted. Skip loading");
+                return false;
+            }
+            
             // if the loaded revision is different from original one
             // we now register this node on the new resolved id
             // this includes two cases:
@@ -385,7 +392,7 @@ public String[] getRealConfs(String conf) {
     public boolean hasProblem() {
         return node.hasProblem();
     }
-
+    
     public Configuration getConfiguration(String conf) {
         return node.getConfiguration(conf);
     }
