From 63a48705a496bf2506121dcddbd8cac2a78f877c Mon Sep 17 00:00:00 2001
From: Gilles Sadowski <erans@apache.org>
Date: Tue, 31 Jul 2012 14:58:01 +0000
Subject: [PATCH] MATH-835 Avoid overflow.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1367593 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                               |  3 +++
 .../org/apache/commons/math3/fraction/Fraction.java   |  2 +-
 .../apache/commons/math3/fraction/FractionTest.java   | 11 +++++++++++
 3 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 2ae0029dfe..9bc1c78573 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -52,6 +52,9 @@ If the output is not quite correct, check for invisible trailing spaces!
   <body>
     <release version="3.1" date="TBD" description="
 ">
+      <action dev="erans" type="fix" issue="MATH-835" due-to="Baste Nesse Buanes">
+        Fixed overflow in method "percentageValue" in class "Fraction".
+      </action>
       <action dev="erans" type="fix" issue="MATH-622">
         Raised (to 10) the default number of fractional digits to print out.
       </action>
diff --git a/src/main/java/org/apache/commons/math3/fraction/Fraction.java b/src/main/java/org/apache/commons/math3/fraction/Fraction.java
index f84218ebd3..f81ff0a949 100644
--- a/src/main/java/org/apache/commons/math3/fraction/Fraction.java
+++ b/src/main/java/org/apache/commons/math3/fraction/Fraction.java
@@ -594,7 +594,7 @@ public Fraction divide(final int i) {
      * @return the fraction percentage as a <tt>double</tt>.
      */
     public double percentageValue() {
-        return multiply(100).doubleValue();
+        return 100 * doubleValue();
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/math3/fraction/FractionTest.java b/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
index c5071cc27d..c112ab752d 100644
--- a/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
+++ b/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
@@ -242,6 +242,17 @@ public void testPercentage() {
         Assert.assertEquals(50.0, new Fraction(1, 2).percentageValue(), 1.0e-15);
     }
 
+    @Test
+    public void testMath835() {
+        final int numer = Integer.MAX_VALUE / 99;
+        final int denom = 1;
+        final double percentage = 100 * ((double) numer) / denom;
+        final Fraction frac = new Fraction(numer, denom);
+        // With the implementation that preceded the fix suggested in MATH-835,
+        // this test was failing, due to overflow.
+        Assert.assertEquals(percentage, frac.percentageValue(), Math.ulp(percentage));
+    }
+
     @Test
     public void testReciprocal() {
         Fraction f = null;
