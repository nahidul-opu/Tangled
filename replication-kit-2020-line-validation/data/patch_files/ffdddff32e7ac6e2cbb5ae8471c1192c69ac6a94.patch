From ffdddff32e7ac6e2cbb5ae8471c1192c69ac6a94 Mon Sep 17 00:00:00 2001
From: Pavan Kumar <pavanka@fb.com>
Date: Tue, 10 Jun 2014 16:12:23 -0700
Subject: [PATCH] GIRAPH-918: GIRAPH-908 has a small bug reg counting entries
 (pavanka)

---
 CHANGELOG                                             |  2 ++
 .../org/apache/giraph/worker/BspServiceWorker.java    | 11 ++++++-----
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/CHANGELOG b/CHANGELOG
index ec1f79810..f35d4ba0a 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -1,6 +1,8 @@
 Giraph Change Log
 
 Release 1.1.0 - unreleased
+  GIRAPH-918: GIRAPH-908 has a small bug reg counting entries (pavanka)
+
   GIRAPH-842: option to dump histogram of memory usage when heap is low on memory (pavanka)
 
   GIRAPH-904: Giraph can hang when hostnames include uppercase letters (netj via pavanka)
diff --git a/giraph-core/src/main/java/org/apache/giraph/worker/BspServiceWorker.java b/giraph-core/src/main/java/org/apache/giraph/worker/BspServiceWorker.java
index a89da24aa..8dcf19a60 100644
--- a/giraph-core/src/main/java/org/apache/giraph/worker/BspServiceWorker.java
+++ b/giraph-core/src/main/java/org/apache/giraph/worker/BspServiceWorker.java
@@ -320,7 +320,7 @@ private VertexEdgeCount loadInputSplits(
    *
    * @return Count of mapping entries loaded
    */
-  private Integer loadMapping() throws KeeperException,
+  private long loadMapping() throws KeeperException,
     InterruptedException {
     List<String> inputSplitPathList =
         getZkExt().getChildrenExt(mappingInputSplitsPaths.getPath(),
@@ -341,7 +341,7 @@ inputSplitPathList, getWorkerInfo().getHostname(),
             this,
             getZkExt());
 
-    int entriesLoaded = 0;
+    long entriesLoaded = 0;
     // Determine how many threads to use based on the number of input splits
     int maxInputSplitThreads = inputSplitPathList.size();
     int numThreads = Math.min(getConfiguration().getNumInputSplitsThreads(),
@@ -577,7 +577,7 @@ public FinishedSuperstepStats setup() {
     aggregatorHandler.prepareSuperstep(workerAggregatorRequestProcessor);
 
     VertexEdgeCount vertexEdgeCount;
-    int entriesLoaded = 0;
+    long entriesLoaded;
 
     if (getConfiguration().hasMappingInputFormat()) {
       // Ensure the mapping InputSplits are ready for processing
@@ -673,13 +673,14 @@ public FinishedSuperstepStats setup() {
       }
     }
 
+    // remove mapping store if possible
+    localData.removeMappingStoreIfPossible();
+
     if (getConfiguration().hasEdgeInputFormat()) {
       // Move edges from temporary storage to their source vertices.
       getServerData().getEdgeStore().moveEdgesToVertices();
     }
 
-    localData.removeMappingStoreIfPossible();
-
     // Generate the partition stats for the input superstep and process
     // if necessary
     List<PartitionStats> partitionStatsList =
