From 161aa07d8b2312d9143c7156fa529a4a1e1e9909 Mon Sep 17 00:00:00 2001
From: Thomas Neidhart <tn@apache.org>
Date: Fri, 2 Jan 2015 13:02:46 +0000
Subject: [PATCH] [COLLECTIONS-512] Added note to javadoc of
 AbstractCollectionDecorator.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1649014 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                |  4 +++-
 .../collection/AbstractCollectionDecorator.java        | 10 ++++++++++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 2f4f59eb6c..deb08c46fd 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -84,7 +84,9 @@
     </action>
     <action issue="COLLECTIONS-512" dev="tn" type="fix" due-to="Cyrille Artho">
       "TransformingComparator" and "FixedOrderComparator" did not comply with
-      the contract of "Object#equals".
+      the contract of "Object#equals". Added note to javadoc of
+      "AbstractCollectionDecorator#equals(Object)" that the implementation might
+      break symmetry requirement of the "Collection#equals" contract.
     </action>
     <action issue="COLLECTIONS-510" dev="tn" type="fix" due-to="Hollis Waite">
       Fix compilation errors when using source level 1.8 and a recent java 8 compiler.
diff --git a/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java b/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java
index de1d484c2e..c350b12936 100644
--- a/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java
+++ b/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java
@@ -144,6 +144,16 @@ public boolean retainAll(final Collection<?> coll) {
         return decorated().retainAll(coll);
     }
 
+    /**
+     * <b>Note</b>: depending on the decorated collection, this implementation
+     * might break the general contract of {@link Collection#equals(Object)} as
+     * symmetry, i.e. {@code a.equals(b) == b.equals(a)}, can not be guaranteed.
+     * As a consequence, <b>do not use</b> this method for value comparisons of
+     * arbitrary collections or decorators, use
+     * {@link CollectionUtils#isEqualCollection(Collection, Collection)} instead.
+     * <p>
+     * {@inheritDoc}
+     */
     @Override
     public boolean equals(final Object object) {
         return object == this || decorated().equals(object);
