From 1fcebc4fff908896147783c0e2de063694fe464a Mon Sep 17 00:00:00 2001
From: Mark Thomas <markt@apache.org>
Date: Thu, 19 Feb 2009 13:40:35 +0000
Subject: [PATCH] Add a DelegatingDatabaseMetaData to address DBCP-265. Still
 need to add the compile time switches. These will follwo shortly.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/dbcp/trunk@745857 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/dbcp/DelegatingConnection.java    | 11 +++++--
 .../commons/dbcp/DelegatingResultSet.java     | 33 +++++++++++++++++++
 2 files changed, 42 insertions(+), 2 deletions(-)

diff --git a/src/java/org/apache/commons/dbcp/DelegatingConnection.java b/src/java/org/apache/commons/dbcp/DelegatingConnection.java
index 68d1c4387f..ab20580a2c 100644
--- a/src/java/org/apache/commons/dbcp/DelegatingConnection.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingConnection.java
@@ -326,8 +326,15 @@ public boolean getAutoCommit() throws SQLException
     public String getCatalog() throws SQLException
     { checkOpen(); try { return _conn.getCatalog(); } catch (SQLException e) { handleException(e); return null; } }
     
-    public DatabaseMetaData getMetaData() throws SQLException
-    { checkOpen(); try { return _conn.getMetaData(); } catch (SQLException e) { handleException(e); return null; } }
+    public DatabaseMetaData getMetaData() throws SQLException {
+        checkOpen();
+        try {
+            return new DelegatingDatabaseMetaData(this, _conn.getMetaData());
+        } catch (SQLException e) {
+            handleException(e);
+            return null;
+        }
+    }
     
     public int getTransactionIsolation() throws SQLException
     { checkOpen(); try { return _conn.getTransactionIsolation(); } catch (SQLException e) { handleException(e); return -1; } }
diff --git a/src/java/org/apache/commons/dbcp/DelegatingResultSet.java b/src/java/org/apache/commons/dbcp/DelegatingResultSet.java
index fb48e4cbaa..48124b7cd7 100644
--- a/src/java/org/apache/commons/dbcp/DelegatingResultSet.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingResultSet.java
@@ -29,6 +29,7 @@
 import java.io.Reader;
 import java.sql.Statement;
 import java.util.Map;
+import java.sql.Connection;
 import java.sql.Ref;
 import java.sql.Blob;
 import java.sql.Clob;
@@ -65,6 +66,9 @@ public class DelegatingResultSet extends AbandonedTrace implements ResultSet {
     /** The Statement that created me, if any. **/
     private Statement _stmt;
 
+    /** The Connection that created me, if any. **/
+    private Connection _conn;
+
     /**
      * Create a wrapper for the ResultSet which traces this
      * ResultSet to the Statement which created it and the
@@ -79,6 +83,20 @@ public DelegatingResultSet(Statement stmt, ResultSet res) {
         this._res = res;
     }
     
+    /**
+     * Create a wrapper for the ResultSet which traces this
+     * ResultSet to the Connection which created it (via, for
+     * example DatabaseMetadata, and the code which created it.
+     *
+     * @param conn Connection which created this ResultSet
+     * @param res ResultSet to wrap
+     */
+    public DelegatingResultSet(Connection conn, ResultSet res) {
+        super((AbandonedTrace)conn);
+        this._conn = conn;
+        this._res = res;
+    }
+    
     public static ResultSet wrapResultSet(Statement stmt, ResultSet rset) {
         if(null == rset) {
             return null;
@@ -87,6 +105,14 @@ public static ResultSet wrapResultSet(Statement stmt, ResultSet rset) {
         }
     }
 
+    public static ResultSet wrapResultSet(Connection conn, ResultSet rset) {
+        if(null == rset) {
+            return null;
+        } else {
+            return new DelegatingResultSet(conn,rset);
+        }
+    }
+
     public ResultSet getDelegate() {
         return _res;
     }
@@ -154,6 +180,10 @@ public void close() throws SQLException {
                 ((AbandonedTrace)_stmt).removeTrace(this);
                 _stmt = null;
             }
+            if(_conn != null) {
+                ((AbandonedTrace)_conn).removeTrace(this);
+                _conn = null;
+            }
             _res.close();
         }
         catch (SQLException e) {
@@ -165,6 +195,9 @@ protected void handleException(SQLException e) throws SQLException {
         if ((_stmt != null) && (_stmt instanceof DelegatingStatement)) {
             ((DelegatingStatement)_stmt).handleException(e);
         }
+        else if ((_conn != null) && (_conn instanceof DelegatingConnection)) {
+            ((DelegatingConnection)_conn).handleException(e);
+        }
         else {
             throw e;
         }
