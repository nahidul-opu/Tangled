From c1d889840c0ca3caf107c0c23c97848be4ee783f Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Wed, 19 Jan 2011 20:26:55 +0000
Subject: [PATCH] MATH-486 FastMath toRadian and toDegree don't handle large
 double numbers well

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1060967 13f79535-47bb-0310-9956-ffa450edef68
---
 .../java/org/apache/commons/math/util/FastMath.java    | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/apache/commons/math/util/FastMath.java b/src/main/java/org/apache/commons/math/util/FastMath.java
index f404b0c414..123be4a967 100644
--- a/src/main/java/org/apache/commons/math/util/FastMath.java
+++ b/src/main/java/org/apache/commons/math/util/FastMath.java
@@ -3239,7 +3239,10 @@ public static double toRadians(double x)
         final double facta = 0.01745329052209854;
         final double factb = 1.997844754509471E-9;
 
-        double temp = x * 1073741824.0;
+        double temp = 0;
+        if (abs(x) < Double.MAX_VALUE/1073741824.0) { // prevent overflow to infinity
+            temp = x * 1073741824.0;
+        }
         double xa = x + temp - temp;
         double xb = x - xa;
 
@@ -3264,7 +3267,10 @@ public static double toDegrees(double x)
         final double facta = 57.2957763671875;
         final double factb = 3.145894820876798E-6;
 
-        double temp = x * 1073741824.0;
+        double temp = 0;
+        if (abs(x) < Double.MAX_VALUE/1073741824.0) { // prevent overflow to infinity
+            temp = x * 1073741824.0;
+        }
         double xa = x + temp - temp;
         double xb = x - xa;
 
