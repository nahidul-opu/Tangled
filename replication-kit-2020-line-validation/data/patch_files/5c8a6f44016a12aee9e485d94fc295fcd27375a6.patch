From 5c8a6f44016a12aee9e485d94fc295fcd27375a6 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 22 Mar 2012 20:58:01 +0000
Subject: [PATCH] IO-312 CharSequenceInputStream(CharSequence s, Charset
 charset, int bufferSize) ignores bufferSize

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304055 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                |  5 ++++-
 .../commons/io/input/CharSequenceInputStream.java      | 10 +++++++---
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 5d22153ee25..ee8482cbd7f 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -39,7 +39,10 @@ The <action> type attribute can be add,update,fix,remove.
   </properties>
 
   <body>
-    <release version="2.2" date="2012-03-18" description="">
+    <release version="2.2" date="TBA" description="">
+      <action issue="IO-312" dev="sebb" type="fix">
+        CharSequenceInputStream(CharSequence s, Charset charset, int bufferSize) ignores bufferSize
+      </action>        
       <action issue="IO-305" dev="sebb" type="add" due-to="Manoj Mokashi">
         New copyLarge() method in IOUtils that takes additional offset, length arguments
       </action>        
diff --git a/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java b/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java
index 8095970a096..e2955326bdd 100644
--- a/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java
+++ b/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java
@@ -55,7 +55,7 @@ public CharSequenceInputStream(final CharSequence s, final Charset charset, int
         this.encoder = charset.newEncoder()
             .onMalformedInput(CodingErrorAction.REPLACE)
             .onUnmappableCharacter(CodingErrorAction.REPLACE);
-        this.bbuf = ByteBuffer.allocate(124);
+        this.bbuf = ByteBuffer.allocate(bufferSize);
         this.bbuf.flip();
         this.cbuf = CharBuffer.wrap(s);
         this.mark = -1;
@@ -181,13 +181,17 @@ public int available() throws IOException {
     public void close() throws IOException {
     }
 
+    /**
+     * {@inheritDoc}
+     * @param readlimit max read limit (ignored)
+     */
     @Override
-    public void mark(int readlimit) {
+    public synchronized void mark(@SuppressWarnings("unused") int readlimit) {
         this.mark = this.cbuf.position();
     }
 
     @Override
-    public void reset() throws IOException {
+    public synchronized void reset() throws IOException {
         if (this.mark != -1) {
             this.cbuf.position(this.mark);
             this.mark = -1;
