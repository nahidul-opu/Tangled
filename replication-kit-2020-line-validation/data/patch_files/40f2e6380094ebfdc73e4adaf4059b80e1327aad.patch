From 40f2e6380094ebfdc73e4adaf4059b80e1327aad Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Fri, 2 Mar 2012 19:59:50 +0000
Subject: [PATCH] workaround for tar implementations that insert a NUL byte
 into header fields.  COMPRESS-181

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1296420 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |   4 +++
 .../compress/archivers/tar/TarUtils.java      |  22 +++++++--------
 .../tar/TarArchiveInputStreamTest.java        |  25 ++++++++++++++++++
 .../compress/archivers/tar/TarUtilsTest.java  |   6 -----
 src/test/resources/simple-aix-native-tar.tar  | Bin 0 -> 10240 bytes
 5 files changed, 39 insertions(+), 18 deletions(-)
 create mode 100644 src/test/resources/simple-aix-native-tar.tar

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 4cd4f99a1e4..33244e6962c 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -46,6 +46,10 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
     <release version="1.4" date="unreleased"
              description="Release 1.4">
+      <action issue="COMPRESS-181" type="update" date="2012-03-02">
+        Added a workaround for a Bug some tar implementations that add
+        a NUL byte as first byte in numeric header fields.
+      </action> 
       <action issue="COMPRESS-176" type="update" date="2012-02-28">
         Added a workaround for a Bug in WinZIP which uses backslashes
         as path separators in Unicode Extra Fields.
diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 7afe0d34fea..d989b8a7e37 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -34,13 +34,18 @@ private TarUtils(){
 
     /**
      * Parse an octal string from a buffer.
-     * Leading spaces are ignored.
+     *
+     * <p>Leading spaces are ignored.
      * The buffer must contain a trailing space or NUL,
-     * and may contain an additional trailing space or NUL.
+     * and may contain an additional trailing space or NUL.</p>
      *
-     * The input buffer is allowed to contain all NULs,
+     * <p>The input buffer is allowed to contain all NULs,
      * in which case the method returns 0L
-     * (this allows for missing fields).
+     * (this allows for missing fields).</p>
+     *
+     * <p>To work-around some tar implementations that insert a
+     * leading NUL this method returns 0 if it detects a leading NUL
+     * since Commons Compress 1.4.</p>
      *
      * @param buffer The buffer from which to parse.
      * @param offset The offset into the buffer from which to parse.
@@ -57,14 +62,7 @@ public static long parseOctal(final byte[] buffer, final int offset, final int l
             throw new IllegalArgumentException("Length "+length+" must be at least 2");
         }
 
-        boolean allNUL = true;
-        for (int i = start; i < end; i++){
-            if (buffer[i] != 0){
-                allNUL = false;
-                break;
-            }
-        }
-        if (allNUL) {
+        if (buffer[start] == 0) {
             return 0L;
         }
 
diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
index eb8b549fe32..6ddb5262c32 100644
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
@@ -18,10 +18,16 @@
 
 package org.apache.commons.compress.archivers.tar;
 
+import java.io.File;
+import java.io.FileInputStream;
 import java.io.StringReader;
+import java.net.URI;
+import java.net.URL;
+import java.util.Date;
 import java.util.Map;
 import org.junit.Test;
 import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 public class TarArchiveInputStreamTest {
 
@@ -40,4 +46,23 @@ public void readPaxHeaderWithEmbeddedNewline() throws Exception {
         assertEquals(1, headers.size());
         assertEquals("line1\nline2\nand3", headers.get("comment"));
     }
+
+    @Test
+    public void workaroundForBrokenTimeHeader() throws Exception {
+        URL tar = getClass().getResource("/simple-aix-native-tar.tar");
+        TarArchiveInputStream in = null;
+        try {
+            in = new TarArchiveInputStream(new FileInputStream(new File(new URI(tar.toString()))));
+            TarArchiveEntry tae = in.getNextTarEntry();
+            tae = in.getNextTarEntry();
+            assertEquals("sample/link-to-txt-file.lnk", tae.getName());
+            assertEquals(new Date(0), tae.getLastModifiedDate());
+            assertTrue(tae.isSymbolicLink());
+        } finally {
+            if (in != null) {
+                in.close();
+            }
+        }
+    }        
+
 }
\ No newline at end of file
diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
index 93977675be8..28f11e09e3f 100644
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
@@ -72,12 +72,6 @@ public void testParseOctalInvalid() throws Exception{
             fail("Expected IllegalArgumentException - should be at least 2 bytes long");
         } catch (IllegalArgumentException expected) {
         }
-        buffer=new byte[]{0,0,' '}; // not all NULs
-        try {
-            TarUtils.parseOctal(buffer,0, buffer.length);
-            fail("Expected IllegalArgumentException - not all NULs");
-        } catch (IllegalArgumentException expected) {
-        }
         buffer=new byte[]{' ',0,0,0}; // not all NULs
         try {
             TarUtils.parseOctal(buffer,0, buffer.length);
diff --git a/src/test/resources/simple-aix-native-tar.tar b/src/test/resources/simple-aix-native-tar.tar
new file mode 100644
index 0000000000000000000000000000000000000000..d8b1d11f98faf97e337d91b5ef6588cc2ac4d567
GIT binary patch
literal 10240
zcmeIxQ4WGI3<lsHzz2`83!v?g?K%?0gfP*-NW8W;aA=nJU=%_~jQ)G+QU<hNvo=4T
zU9qM)7jM{FtB6@kDt%-Y{fPZOEG1&K4jZeD3J){Oq_R1Sir?;9pEseToy(glCSSz7
z+n4@DKBn$%aBND&^tZ?MF@IOqRpL*Hzxd=(x?<((cNpWk68(Ap^gRD?J~O1WFJd{N
zu5teyd>Zrb@BggQ!fcEgc>g60_dnAjq<HWUCmj6q`A?9;s}O(y1Rwwb2tWV=KP13(
sT@o#}KhzRhfdB*`009U<00Izz00bZa0SG_<0uX=z1Rwwb2>gw}4bI<GdH?_b

literal 0
HcmV?d00001

