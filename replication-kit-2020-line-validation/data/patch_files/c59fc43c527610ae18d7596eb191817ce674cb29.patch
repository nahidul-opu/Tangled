From c59fc43c527610ae18d7596eb191817ce674cb29 Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Sun, 15 Jan 2017 22:07:19 +0100
Subject: [PATCH] COMPRESS-379 fix symlink logic

---
 src/changes/changes.xml                           |   5 +++++
 .../commons/compress/archivers/zip/UnixStat.java  |   5 +++++
 .../compress/archivers/zip/ZipArchiveEntry.java   |   2 +-
 .../archivers/zip/ZipArchiveEntryTest.java        |  12 ++++++++++++
 src/test/resources/COMPRESS-379.jar               | Bin 0 -> 222 bytes
 5 files changed, 23 insertions(+), 1 deletion(-)
 create mode 100644 src/test/resources/COMPRESS-379.jar

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 6b55698e2d2..5ec0569c2d3 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -56,6 +56,11 @@ The <action> type attribute can be add,update,fix,remove.
         configured as some IWA files seem to be using blocks larger
         than the default 32k.
       </action>
+      <action issue="COMPRESS-379" type="fix" date="2017-01-15"
+              due-to="Guillaume BouÃ©">
+        ZipArchiveEntry#isUnixSymlink now only returns true if the
+        corresponding link flag is the only file-type flag set.
+      </action>
     </release>
     <release version="1.13" date="2016-12-29"
              description="Release 1.13 - API compatible to 1.12 but requires Java 7 at runtime.">
diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java b/src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java
index b8afc6bc853..a1b20be3917 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java
@@ -28,6 +28,11 @@ public interface UnixStat {
      * Bits used for permissions (and sticky bit)
      */
     int PERM_MASK = 07777;
+    /**
+     * Bits used to indicate the filesystem object type.
+     * @since 1.14
+     */
+    int FILE_TYPE_FLAG = 0170000;
     /**
      * Indicates symbolic links.
      */
diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
index 5030da57c30..2abd22b50ef 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
@@ -294,7 +294,7 @@ public int getUnixMode() {
      * @return true if the entry represents a unix symlink, false otherwise.
      */
     public boolean isUnixSymlink() {
-        return (getUnixMode() & UnixStat.LINK_FLAG) == UnixStat.LINK_FLAG;
+        return (getUnixMode() & UnixStat.FILE_TYPE_FLAG) == UnixStat.LINK_FLAG;
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java
index 320b2ffdd6c..be003df1cdd 100644
--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java
@@ -18,6 +18,7 @@
 
 package org.apache.commons.compress.archivers.zip;
 
+import static org.apache.commons.compress.AbstractTestCase.getFile;
 import static org.junit.Assert.*;
 
 import java.io.ByteArrayOutputStream;
@@ -268,4 +269,15 @@ public void testCopyConstructor() throws Exception {
         final ZipArchiveEntry copy = new ZipArchiveEntry(archiveEntry);
         assertEquals(archiveEntry, copy);
     }
+
+    /**
+     * @see "https://issues.apache.org/jira/browse/COMPRESS-379"
+     */
+    @Test
+    public void isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet() throws Exception {
+        try (ZipFile zf = new ZipFile(getFile("COMPRESS-379.jar"))) {
+            ZipArchiveEntry ze = zf.getEntry("META-INF/maven/");
+            assertFalse(ze.isUnixSymlink());
+        }
+    }
 }
diff --git a/src/test/resources/COMPRESS-379.jar b/src/test/resources/COMPRESS-379.jar
new file mode 100644
index 0000000000000000000000000000000000000000..8211f322e1cd4d85001dc9a90054784bc1c9e6b9
GIT binary patch
literal 222
zcmWIWW@h1HVBlb2xZa@e#ef9(foxyb5Jz24KR5l{#In>p{Q#VbIgu3ycr!AIFyl5A
sVu=95|NkHsh8?&ygKU8S0fx7Zx<DpebAUH18%T-?2upx;2#CV~0AV^EUH||9

literal 0
HcmV?d00001

