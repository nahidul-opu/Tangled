From a9d0cc42fe5ef7fe35256bff4844b9f1b6d347e1 Mon Sep 17 00:00:00 2001
From: Luc Maisonobe <luc@apache.org>
Date: Thu, 20 Feb 2014 16:16:19 +0000
Subject: [PATCH] Relaxed specification for function mapping on vectors.

JIRA: MATH-821

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1570254 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  8 ++-
 .../math3/linear/OpenMapRealVector.java       |  3 +-
 .../math3/linear/SparseRealVector.java        |  3 +-
 .../math3/linear/RealVectorAbstractTest.java  |  2 +-
 .../math3/linear/SparseRealVectorTest.java    | 51 +++++++++++--------
 5 files changed, 42 insertions(+), 25 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 54c4286a0c..ba585d82d2 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -51,9 +51,13 @@ If the output is not quite correct, check for invisible trailing spaces!
   </properties>
   <body>
     <release version="3.3" date="TBD" description="TBD">
+      <action dev="luc" type="fix" issue="MATH-821">
+        Relaxed specification for function mapping on vectors, thus allowing straightforward
+        implementation for sparse vectors.
+      </action>
       <action dev="luc" type="update" issue="MATH-1099" due-to="Evan Ward">
-	    Make QR the default in GaussNewtonOptimizer.
-	  </action>
+        Make QR the default in GaussNewtonOptimizer.
+      </action>
       <action dev="luc" type="update" issue="MATH-1099" due-to="Evan Ward">
 	    Add Cholesky option to GaussNewtonOptimizer.
 	  </action>
diff --git a/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
index 9430ab34bc..a283a51ed0 100644
--- a/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
+++ b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
@@ -35,7 +35,8 @@
  *  the equality {@code x * 0d == 0d} holds. But it is is not true for
  *  {@code NaN}. Moreover, zero entries will lose their sign.
  *  Some operations (that involve {@code NaN} and/or infinities) may
- *  thus give incorrect results.
+ *  thus give incorrect results, like multiplications, divisions or
+ *  functions mapping.
  * </p>
  * @version $Id$
  * @since 2.0
diff --git a/src/main/java/org/apache/commons/math3/linear/SparseRealVector.java b/src/main/java/org/apache/commons/math3/linear/SparseRealVector.java
index 08df6be60f..7dde51dbc9 100644
--- a/src/main/java/org/apache/commons/math3/linear/SparseRealVector.java
+++ b/src/main/java/org/apache/commons/math3/linear/SparseRealVector.java
@@ -23,7 +23,8 @@
  *  the equality {@code x * 0d == 0d} holds. But it is is not true for
  *  {@code NaN}. Moreover, zero entries will lose their sign.
  *  Some operations (that involve {@code NaN} and/or infinities) may
- *  thus give incorrect results.
+ *  thus give incorrect results, like multiplications, divisions or
+ *  functions mapping.
  * </p>
  * @version $Id$
  * @since 2.0
diff --git a/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java b/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
index 3e7ded00aa..ac8cb8c731 100644
--- a/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
@@ -871,7 +871,7 @@ private void doTestMapFunction(final UnivariateFunction f,
         TestUtils.assertEquals(f.getClass().getSimpleName(), expected, actual, 1E-16);
     }
 
-    private UnivariateFunction[] createFunctions() {
+    protected UnivariateFunction[] createFunctions() {
         return new UnivariateFunction[] {
             new Power(2.0), new Exp(), new Expm1(), new Log(), new Log10(),
             new Log1p(), new Cosh(), new Sinh(), new Tanh(), new Cos(),
diff --git a/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java b/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
index 61d4f3b45f..911dc57565 100644
--- a/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
+++ b/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
@@ -16,9 +16,28 @@
  */
 package org.apache.commons.math3.linear;
 
-import org.apache.commons.math3.linear.RealVectorAbstractTest.BinaryOperation;
+import org.apache.commons.math3.analysis.UnivariateFunction;
+import org.apache.commons.math3.analysis.function.Abs;
+import org.apache.commons.math3.analysis.function.Acos;
+import org.apache.commons.math3.analysis.function.Asin;
+import org.apache.commons.math3.analysis.function.Atan;
+import org.apache.commons.math3.analysis.function.Cbrt;
+import org.apache.commons.math3.analysis.function.Ceil;
+import org.apache.commons.math3.analysis.function.Cos;
+import org.apache.commons.math3.analysis.function.Cosh;
+import org.apache.commons.math3.analysis.function.Exp;
+import org.apache.commons.math3.analysis.function.Expm1;
+import org.apache.commons.math3.analysis.function.Floor;
+import org.apache.commons.math3.analysis.function.Log1p;
+import org.apache.commons.math3.analysis.function.Power;
+import org.apache.commons.math3.analysis.function.Rint;
+import org.apache.commons.math3.analysis.function.Signum;
+import org.apache.commons.math3.analysis.function.Sin;
+import org.apache.commons.math3.analysis.function.Sinh;
+import org.apache.commons.math3.analysis.function.Sqrt;
+import org.apache.commons.math3.analysis.function.Tan;
+import org.apache.commons.math3.analysis.function.Tanh;
 import org.junit.Assert;
-import org.junit.Ignore;
 import org.junit.Test;
 
 /**
@@ -118,23 +137,15 @@ public void testEbeDivideSameType() {
         doTestEbeBinaryOperation(BinaryOperation.DIV, false, true);
     }
 
-    /**
-     * XXX This test is disabled because it currently fails.
-     * The bug must still be fixed in the sparse vector implementation.
-     * When this is done, this override should be deleted.
-     */
-    @Test
-    @Override
-    @Ignore("This test is skipped until MATH-821 is fixed")
-    public void testMap() {}
-
-    /**
-     * XXX This test is disabled because it currently fails.
-     * The bug must still be fixed in the sparse vector implementation.
-     * When this is done, this override should be deleted.
-     */
-    @Test
     @Override
-    @Ignore("This test is skipped until MATH-821 is fixed")
-    public void testMapToSelf() {}
+    protected UnivariateFunction[] createFunctions() {
+        return new UnivariateFunction[] {
+            new Power(2.0), new Exp(), new Expm1(),
+            new Log1p(), new Cosh(), new Sinh(), new Tanh(), new Cos(),
+            new Sin(), new Tan(), new Acos(), new Asin(), new Atan(),
+            new Abs(), new Sqrt(), new Cbrt(), new Ceil(),
+            new Floor(), new Rint(), new Signum()
+        };
+    }
+
 }
