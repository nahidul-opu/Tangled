From a918c493296c88da94b36600213c7c188f2589b4 Mon Sep 17 00:00:00 2001
From: nandorKollar <nandorKollar@users.noreply.github.com>
Date: Mon, 4 Jun 2018 18:49:17 +0200
Subject: [PATCH] PARQUET-1317: Fix ParquetMetadataConverter throw NPE (#491)

New test case in TestParquetMetadataConverter to reproduce NPE and ensure backward compatibility
---
 .../converter/TestParquetMetadataConverter.java  | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/parquet-hadoop/src/test/java/org/apache/parquet/format/converter/TestParquetMetadataConverter.java b/parquet-hadoop/src/test/java/org/apache/parquet/format/converter/TestParquetMetadataConverter.java
index 4fc4035f70..b3eebd6aee 100644
--- a/parquet-hadoop/src/test/java/org/apache/parquet/format/converter/TestParquetMetadataConverter.java
+++ b/parquet-hadoop/src/test/java/org/apache/parquet/format/converter/TestParquetMetadataConverter.java
@@ -146,6 +146,22 @@ public void testSchemaConverterDecimal() {
     Assert.assertEquals(expected, schemaElements);
   }
 
+  @Test
+  public void testLogicalTypesBackwardCompatibleWithConvertedTypes() {
+    ParquetMetadataConverter parquetMetadataConverter = new ParquetMetadataConverter();
+    MessageType expected = Types.buildMessage()
+      .required(PrimitiveTypeName.BINARY)
+      .as(OriginalType.DECIMAL).precision(9).scale(2)
+      .named("aBinaryDecimal")
+      .named("Message");
+    List<SchemaElement> parquetSchema = parquetMetadataConverter.toParquetSchema(expected);
+    // Set logical type field to null to test backward compatibility with files written by older API,
+    // where converted_types are written to the metadata, but logicalType is missing
+    parquetSchema.get(1).setLogicalType(null);
+    MessageType schema = parquetMetadataConverter.fromParquetSchema(parquetSchema, null);
+    assertEquals(expected, schema);
+  }
+
   @Test
   public void testEnumEquivalence() {
     ParquetMetadataConverter parquetMetadataConverter = new ParquetMetadataConverter();
