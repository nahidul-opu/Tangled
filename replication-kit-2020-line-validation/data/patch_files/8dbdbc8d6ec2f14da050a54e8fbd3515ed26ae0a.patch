From 8dbdbc8d6ec2f14da050a54e8fbd3515ed26ae0a Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Wed, 20 Apr 2011 20:14:30 +0000
Subject: [PATCH] [CONFIGURATION-446] Attributes whose value is an empty string
 are no more removed on saving the configuration. Ported fix to configuration2
 branch.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/branches/configuration2_experimental@1095501 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                         |  4 ++++
 .../configuration2/XMLConfiguration.java        |  4 +++-
 .../configuration2/TestXMLConfiguration.java    | 17 +++++++++++++++++
 3 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 7cbde6895e..0f673845c9 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -79,6 +79,10 @@
     </release>
 
     <release version="1.7" date="in SVN" description="">
+      <action dev="oheger" type="update" issue="CONFIGURATION-446">
+        XMLConfiguration now handles attributes correctly whose value is an
+        empty string.
+      </action>
       <action dev="oheger" type="update" issue="CONFIGURATION-439">
         Child configuration builders created for a &lt;configuration&gt; element
         in a configuration definition file now inherit the configuration and
diff --git a/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java b/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
index 81a5dd3f58..07d180a246 100644
--- a/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
@@ -1494,6 +1494,7 @@ private static void updateAttribute(ConfigurationNode node, Element elem, String
         {
             if (node != null && elem != null)
             {
+                boolean hasAttribute = false;
                 List<ConfigurationNode> attributes = node.getAttributes(name);
                 StringBuilder buf = new StringBuilder();
                 char delimiter = (listDelimiter != 0) ? listDelimiter : ATTR_VALUE_DELIMITER;
@@ -1501,6 +1502,7 @@ private static void updateAttribute(ConfigurationNode node, Element elem, String
                 {
                     if (attribute.getValue() != null)
                     {
+                        hasAttribute = true;
                         if (buf.length() > 0)
                         {
                             buf.append(delimiter);
@@ -1513,7 +1515,7 @@ private static void updateAttribute(ConfigurationNode node, Element elem, String
                     attribute.setReference(elem);
                 }
 
-                if (buf.length() < 1)
+                if (!hasAttribute)
                 {
                     elem.removeAttribute(name);
                 }
diff --git a/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java b/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
index da40ccd407..d071885e8d 100644
--- a/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
@@ -1630,6 +1630,23 @@ public void run()
         }
     } */
 
+    /**
+     * Tests whether an attribute can be set to an empty string. This test is
+     * related to CONFIGURATION-446.
+     */
+    public void testEmptyAttribute() throws ConfigurationException
+    {
+        String key = "element3[@value]";
+        conf.setProperty(key, "");
+        assertTrue("Key not found", conf.containsKey(key));
+        assertEquals("Wrong value", "", conf.getString(key));
+        conf.save(testSaveConf);
+        conf = new XMLConfiguration();
+        conf.load(testSaveConf);
+        assertTrue("Key not found after save", conf.containsKey(key));
+        assertEquals("Wrong value after save", "", conf.getString(key));
+    }
+
     /**
      * Prepares a configuration object for testing a reload operation.
      *
