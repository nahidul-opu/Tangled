From 21a0e874cf3d14cfcef60d20b97e4c81da581788 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Sat, 17 Mar 2018 20:49:17 +0000
Subject: [PATCH] CONFIGURATION-690: ExprLookup.getVariables() no longer
 returns null.

The method now returns a copy of the variables managed by this lookup
object.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@1827106 13f79535-47bb-0310-9956-ffa450edef68
---
 .../configuration2/interpol/ExprLookup.java   |  5 +++-
 .../interpol/TestExprLookup.java              | 26 +++++++++++++++++++
 2 files changed, 30 insertions(+), 1 deletion(-)

diff --git a/src/main/java/org/apache/commons/configuration2/interpol/ExprLookup.java b/src/main/java/org/apache/commons/configuration2/interpol/ExprLookup.java
index dc9a1f5ca7..440dd9e144 100644
--- a/src/main/java/org/apache/commons/configuration2/interpol/ExprLookup.java
+++ b/src/main/java/org/apache/commons/configuration2/interpol/ExprLookup.java
@@ -157,11 +157,14 @@ public void setVariables(Variables list)
 
     /**
      * Returns the list of Variables that are accessible within expressions.
+     * This method returns a copy of the variables managed by this lookup; so
+     * modifying this object has no impact on this lookup.
+     *
      * @return the List of Variables that are accessible within expressions.
      */
     public Variables getVariables()
     {
-        return null;
+        return new Variables(variables);
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/configuration2/interpol/TestExprLookup.java b/src/test/java/org/apache/commons/configuration2/interpol/TestExprLookup.java
index d417046d51..b43cff9711 100644
--- a/src/test/java/org/apache/commons/configuration2/interpol/TestExprLookup.java
+++ b/src/test/java/org/apache/commons/configuration2/interpol/TestExprLookup.java
@@ -89,6 +89,32 @@ public void testLookupNoConfigurationInterpolator()
         assertEquals("Wrong result", value, lookup.lookup(value));
     }
 
+    /**
+     * Tests whether variables can be queried.
+     */
+    @Test
+    public void testGetVariables()
+    {
+        ExprLookup.Variables vars = new ExprLookup.Variables();
+        vars.add(new ExprLookup.Variable("String", org.apache.commons.lang3.StringUtils.class));
+        ExprLookup lookup = new ExprLookup(vars);
+        assertEquals("Wrong variables", vars, lookup.getVariables());
+    }
+
+    /**
+     * Tests that getVariables() returns a copy of the original variables.
+     */
+    @Test
+    public void testGetVariablesDefensiveCopy()
+    {
+        ExprLookup.Variables vars = new ExprLookup.Variables();
+        vars.add(new ExprLookup.Variable("String", org.apache.commons.lang3.StringUtils.class));
+        ExprLookup lookup = new ExprLookup(vars);
+        ExprLookup.Variables vars2 = lookup.getVariables();
+        vars2.add(new ExprLookup.Variable("System", "Class:java.lang.System"));
+        assertEquals("Modified variables", vars, lookup.getVariables());
+    }
+
     public static class Utility
     {
         String message;
