From 127e6e338f088b82eea1967d31c1abf8d51a364f Mon Sep 17 00:00:00 2001
From: Henri Yandell <bayard@apache.org>
Date: Wed, 31 Oct 2007 03:58:52 +0000
Subject: [PATCH] Applying Sebb's test and fix from LANG-368 - fixing it so
 that FastDateFormat getDateInstance and getDateTimeInstance continue to work
 if Locale.getDefault() changes

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@590551 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/lang/time/FastDateFormat.java     | 20 ++++------
 .../commons/lang/time/FastDateFormatTest.java | 40 +++++++++++++++++++
 2 files changed, 48 insertions(+), 12 deletions(-)

diff --git a/src/java/org/apache/commons/lang/time/FastDateFormat.java b/src/java/org/apache/commons/lang/time/FastDateFormat.java
index 0be752ba745..d1caaa8973c 100644
--- a/src/java/org/apache/commons/lang/time/FastDateFormat.java
+++ b/src/java/org/apache/commons/lang/time/FastDateFormat.java
@@ -281,16 +281,15 @@ public static synchronized FastDateFormat getDateInstance(int style, TimeZone ti
         if (timeZone != null) {
             key = new Pair(key, timeZone);
         }
-        if (locale != null) {
-            key = new Pair(key, locale);
+
+        if (locale == null) {
+            locale = Locale.getDefault();
         }
 
+        key = new Pair(key, locale);
+
         FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
-                locale = Locale.getDefault();
-            }
-
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
                 String pattern = formatter.toPattern();
@@ -461,16 +460,13 @@ public static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int
         if (timeZone != null) {
             key = new Pair(key, timeZone);
         }
-        if (locale != null) {
-            key = new Pair(key, locale);
+        if (locale == null) {
+            locale = Locale.getDefault();
         }
+        key = new Pair(key, locale);
 
         FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
-                locale = Locale.getDefault();
-            }
-
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,
                         locale);
diff --git a/src/test/org/apache/commons/lang/time/FastDateFormatTest.java b/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
index e7394f0d94f..878dd343f14 100644
--- a/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
+++ b/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
@@ -132,6 +132,46 @@ public void test_getInstance_String_Locale() {
         }
     }
 
+    public void test_changeDefault_Locale_DateInstance() {
+        Locale realDefaultLocale = Locale.getDefault();
+        try {
+            Locale.setDefault(Locale.US);
+            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);
+            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);
+            Locale.setDefault(Locale.GERMANY);
+            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);
+
+            assertSame(Locale.GERMANY, format1.getLocale());
+            assertSame(Locale.US, format2.getLocale());
+            assertSame(Locale.GERMANY, format3.getLocale());
+            assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);
+            assertTrue(format2 != format3);
+
+        } finally {
+            Locale.setDefault(realDefaultLocale);
+        }
+    }
+
+    public void test_changeDefault_Locale_DateTimeInstance() {
+        Locale realDefaultLocale = Locale.getDefault();
+        try {
+            Locale.setDefault(Locale.US);
+            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);
+            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);
+            Locale.setDefault(Locale.GERMANY);
+            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);
+
+            assertSame(Locale.GERMANY, format1.getLocale());
+            assertSame(Locale.US, format2.getLocale());
+            assertSame(Locale.GERMANY, format3.getLocale());
+            assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);
+            assertTrue(format2 != format3);
+
+        } finally {
+            Locale.setDefault(realDefaultLocale);
+        }
+    }
+
     public void test_getInstance_String_TimeZone_Locale() {
         Locale realDefaultLocale = Locale.getDefault();
         TimeZone realDefaultZone = TimeZone.getDefault();
