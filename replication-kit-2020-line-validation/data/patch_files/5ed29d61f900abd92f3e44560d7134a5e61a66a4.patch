From 5ed29d61f900abd92f3e44560d7134a5e61a66a4 Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Sun, 9 Jan 2011 01:07:04 +0000
Subject: [PATCH] Port LANG-638 to LANG 2.x Branch - NumberUtils createNumber()
 throws a StringIndexOutOfBoundsException when argument containing "e" and "E"
 is passed in

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/branches/LANG_2_X@1056853 13f79535-47bb-0310-9956-ffa450edef68
---
 src/main/java/org/apache/commons/lang/math/NumberUtils.java  | 5 ++++-
 .../java/org/apache/commons/lang/math/NumberUtilsTest.java   | 3 +++
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/main/java/org/apache/commons/lang/math/NumberUtils.java b/src/main/java/org/apache/commons/lang/math/NumberUtils.java
index 1b7fca3454b..a1c25e74547 100644
--- a/src/main/java/org/apache/commons/lang/math/NumberUtils.java
+++ b/src/main/java/org/apache/commons/lang/math/NumberUtils.java
@@ -520,7 +520,7 @@ public static Number createNumber(String str) throws NumberFormatException {
         if (decPos > -1) {
 
             if (expPos > -1) {
-                if (expPos < decPos) {
+                if (expPos < decPos || expPos > str.length()) {
                     throw new NumberFormatException(str + " is not a valid number.");
                 }
                 dec = str.substring(decPos + 1, expPos);
@@ -530,6 +530,9 @@ public static Number createNumber(String str) throws NumberFormatException {
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
+                if (expPos > str.length()) {
+                    throw new NumberFormatException(str + " is not a valid number.");
+                }
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;
diff --git a/src/test/java/org/apache/commons/lang/math/NumberUtilsTest.java b/src/test/java/org/apache/commons/lang/math/NumberUtilsTest.java
index 5a5f18633de..e71367a334e 100644
--- a/src/test/java/org/apache/commons/lang/math/NumberUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang/math/NumberUtilsTest.java
@@ -229,6 +229,9 @@ public void testCreateNumber() {
 
         // LANG-521
         assertEquals("createNumber(String) LANG-521 failed", new Float("2."), NumberUtils.createNumber("2."));
+
+        // LANG-638
+        assertFalse("createNumber(String) succeeded", checkCreateNumber("1eE"));
     }
 
     public void testCreateFloat() {
