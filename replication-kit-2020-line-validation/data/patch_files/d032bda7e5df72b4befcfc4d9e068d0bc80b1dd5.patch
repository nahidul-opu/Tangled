From d032bda7e5df72b4befcfc4d9e068d0bc80b1dd5 Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Tue, 19 Sep 2006 20:20:06 +0000
Subject: [PATCH] https://issues.apache.org/jira/browse/LANG-279
 HashCodeBuilder throws java.lang.StackOverflowError when an object contains a
 cycle.

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@447947 13f79535-47bb-0310-9956-ffa450edef68
---
 .../lang/builder/HashCodeBuilderTest.java     | 55 +++++++++++++++++++
 1 file changed, 55 insertions(+)

diff --git a/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java b/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java
index 11e55d22ff9..87e19abd015 100644
--- a/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java
+++ b/src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java
@@ -16,6 +16,9 @@
  */
 package org.apache.commons.lang.builder;
 
+import org.apache.commons.lang.builder.ToStringBuilderTest.ReflectionTestCycleA;
+import org.apache.commons.lang.builder.ToStringBuilderTest.ReflectionTestCycleB;
+
 import junit.framework.Test;
 import junit.framework.TestCase;
 import junit.framework.TestSuite;
@@ -29,6 +32,28 @@
  */
 public class HashCodeBuilderTest extends TestCase {
 
+    /**
+     * A reflection test fixture.
+     */
+    static class ReflectionTestCycleA {
+        ReflectionTestCycleB b;
+
+        public int hashCode() {
+            return HashCodeBuilder.reflectionHashCode(this);
+        }
+    }
+
+    /**
+     * A reflection test fixture.
+     */
+    static class ReflectionTestCycleB {
+        ReflectionTestCycleA a;
+
+        public int hashCode() {
+            return HashCodeBuilder.reflectionHashCode(this);
+        }
+    }
+    
     public HashCodeBuilderTest(String name) {
         super(name);
     }
@@ -467,4 +492,34 @@ public TestObjectWithMultipleFields(int one, int two, int three) {
             this.three = three;
         }
     }
+    
+    /**
+     * Test Objects pointing to each other.
+     */
+    public void testReflectionObjectCycle() {
+        ReflectionTestCycleA a = new ReflectionTestCycleA();
+        ReflectionTestCycleB b = new ReflectionTestCycleB();
+        a.b = b;
+        b.a = a;
+        // Causes:
+        // java.lang.StackOverflowError
+        // at java.lang.ClassLoader.getCallerClassLoader(Native Method)
+        // at java.lang.Class.getDeclaredFields(Class.java:992)
+        // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionAppend(HashCodeBuilder.java:373)
+        // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionHashCode(HashCodeBuilder.java:349)
+        // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionHashCode(HashCodeBuilder.java:155)
+        // at
+        // org.apache.commons.lang.builder.HashCodeBuilderTest$ReflectionTestCycleB.hashCode(HashCodeBuilderTest.java:53)
+        // at org.apache.commons.lang.builder.HashCodeBuilder.append(HashCodeBuilder.java:422)
+        // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionAppend(HashCodeBuilder.java:383)
+        // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionHashCode(HashCodeBuilder.java:349)
+        // at org.apache.commons.lang.builder.HashCodeBuilder.reflectionHashCode(HashCodeBuilder.java:155)
+        // at
+        // org.apache.commons.lang.builder.HashCodeBuilderTest$ReflectionTestCycleA.hashCode(HashCodeBuilderTest.java:42)
+        // at org.apache.commons.lang.builder.HashCodeBuilder.append(HashCodeBuilder.java:422)
+
+        // a.hashCode();
+        // b.hashCode();
+    }
+
 }
