From c824f482a584f177a0314bd69fc46cd2762cfd88 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Sat, 23 Jan 2010 16:28:14 +0000
Subject: [PATCH] [CONFIGURATION-403] Fixed XMLConfiguration.load() so that an
 empty configuration that was saved and reloaded is still considered empty.
 Ported patch from trunk to configuration2 branch.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/branches/configuration2_experimental@902437 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/configuration2/XMLConfiguration.java     | 12 +++++++++---
 .../commons/configuration2/TestXMLConfiguration.java | 12 ++++++++++++
 xdocs/changes.xml                                    |  5 +++++
 3 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java b/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
index e981edc1e1..81a5dd3f58 100644
--- a/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
@@ -32,6 +32,7 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.ParserConfigurationException;
@@ -164,7 +165,7 @@
  *
  * @author J&ouml;rg Schaible
  * @author Oliver Heger
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class XMLConfiguration extends AbstractHierarchicalFileConfiguration
     implements EntityResolver, EntityRegistry
@@ -569,6 +570,7 @@ public Document getDocument()
      * Removes all properties from this configuration. If this configuration
      * was loaded from a file, the associated DOM document is also cleared.
      */
+    @Override
     public void clear()
     {
         super.clear();
@@ -637,7 +639,7 @@ else if (w3cNode instanceof Text)
         {
             text = text.trim();
         }
-        if (text.length() > 0 || !hasChildren(node))
+        if (text.length() > 0 || (!hasChildren(node) && node != getRootNode()))
         {
             node.setValue(text);
         }
@@ -814,6 +816,7 @@ protected DocumentBuilder createDocumentBuilder()
                 // register an error handler which detects validation errors
                 result.setErrorHandler(new DefaultHandler()
                 {
+                    @Override
                     public void error(SAXParseException ex) throws SAXException
                     {
                         throw ex;
@@ -913,6 +916,7 @@ protected ConfigurationNode createNode(ConfigurationNode parent, String name)
      * @param in the input stream
      * @throws ConfigurationException if an error occurs
      */
+    @Override
     public void load(InputStream in) throws ConfigurationException
     {
         load(new InputSource(in));
@@ -962,7 +966,7 @@ private void load(InputSource source) throws ConfigurationException
         }
         catch (Exception e)
         {
-            this.getLogger().debug("Unable to load the configuraton", e);           
+            this.getLogger().debug("Unable to load the configuraton", e);
             throw new ConfigurationException("Unable to load the configuration", e);
         }
     }
@@ -1070,6 +1074,7 @@ protected Transformer createTransformer() throws TransformerException
      *
      * @return the copy
      */
+    @Override
     public Object clone()
     {
         XMLConfiguration copy = (XMLConfiguration) super.clone();
@@ -1199,6 +1204,7 @@ public void registerEntityId(String publicId, URL entityURL)
      * @since 1.5
      * @deprecated Use getEntityResolver().resolveEntity()
      */
+    @Deprecated
     public InputSource resolveEntity(String publicId, String systemId)
             throws SAXException
     {
diff --git a/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java b/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
index 6e14232ea2..da40ccd407 100644
--- a/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
@@ -935,6 +935,18 @@ public void testEmptyElements() throws ConfigurationException
         assertEquals("", conf.getProperty("empty2"));
     }
 
+    /**
+     * Tests the isEmpty() method for an empty configuration that was reloaded.
+     */
+    public void testEmptyReload() throws ConfigurationException
+    {
+        XMLConfiguration config = new XMLConfiguration();
+        assertTrue("Newly created configuration not empty", config.isEmpty());
+        config.save(testSaveConf);
+        config.load(testSaveConf);
+        assertTrue("Reloaded configuration not empty", config.isEmpty());
+    }
+
     /**
      * Tests whether the encoding is correctly detected by the XML parser. This
      * is done by loading an XML file with the encoding "UTF-16". If this
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index a4d9b2a8ad..574aa4a8e9 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -79,6 +79,11 @@
     </release>
 
     <release version="1.7" date="in SVN" description="">
+      <action dev="oheger" type="fix" issue="CONFIGURATION-403">
+        When an empty XMLConfiguration was saved and reloaded the root element
+        was assigned an empty text value. Because of this isEmpty() returned
+        false for this configuration. This has been fixed.
+      </action>
       <action dev="oheger" type="add" issue="CONFIGURATION-399">
         Default variable interpolation now supports the env: prefix for
         referencing environment variables.
