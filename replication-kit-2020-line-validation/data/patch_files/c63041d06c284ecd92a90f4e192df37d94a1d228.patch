From c63041d06c284ecd92a90f4e192df37d94a1d228 Mon Sep 17 00:00:00 2001
From: Matthew Jason Benson <mbenson@apache.org>
Date: Fri, 3 Aug 2012 17:43:33 +0000
Subject: [PATCH] [LANG-814] ConstructorUtils.invoke*(*, Object... args)
 variants cannot handle null values

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1369116 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/lang3/reflect/ConstructorUtils.java       | 11 ++---------
 .../commons/lang3/reflect/ConstructorUtilsTest.java   |  6 ++++++
 2 files changed, 8 insertions(+), 9 deletions(-)

diff --git a/src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java b/src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java
index 115af71be65..5adbfd867ce 100644
--- a/src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java
+++ b/src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java
@@ -81,10 +81,7 @@ public static <T> T invokeConstructor(Class<T> cls, Object... args)
         if (args == null) {
             args = ArrayUtils.EMPTY_OBJECT_ARRAY;
         }
-        Class<?> parameterTypes[] = new Class[args.length];
-        for (int i = 0; i < args.length; i++) {
-            parameterTypes[i] = args[i].getClass();
-        }
+        Class<?> parameterTypes[] = ClassUtils.toClass(args);
         return invokeConstructor(cls, args, parameterTypes);
     }
 
@@ -148,11 +145,7 @@ public static <T> T invokeExactConstructor(Class<T> cls, Object... args)
         if (args == null) {
             args = ArrayUtils.EMPTY_OBJECT_ARRAY;
         }
-        int arguments = args.length;
-        Class<?> parameterTypes[] = new Class[arguments];
-        for (int i = 0; i < arguments; i++) {
-            parameterTypes[i] = args[i].getClass();
-        }
+        Class<?> parameterTypes[] = ClassUtils.toClass(args);
         return invokeExactConstructor(cls, args, parameterTypes);
     }
 
diff --git a/src/test/java/org/apache/commons/lang3/reflect/ConstructorUtilsTest.java b/src/test/java/org/apache/commons/lang3/reflect/ConstructorUtilsTest.java
index b923e2f1759..583c8c073d8 100644
--- a/src/test/java/org/apache/commons/lang3/reflect/ConstructorUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/reflect/ConstructorUtilsTest.java
@@ -25,6 +25,7 @@
 
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.math.NumberUtils;
+import org.apache.commons.lang3.mutable.MutableObject;
 
 /**
  * Unit tests ConstructorUtils
@@ -199,6 +200,11 @@ public void testGetMatchingAccessibleMethod() throws Exception {
                 singletonArray(Double.TYPE), singletonArray(Double.TYPE));
     }
 
+    public void testNullArgument() {
+        expectMatchingAccessibleConstructorParameterTypes(MutableObject.class,
+                singletonArray(null), singletonArray(Object.class));
+    }
+
     private void expectMatchingAccessibleConstructorParameterTypes(Class<?> cls,
             Class<?>[] requestTypes, Class<?>[] actualTypes) {
         Constructor<?> c = ConstructorUtils.getMatchingAccessibleConstructor(cls,
