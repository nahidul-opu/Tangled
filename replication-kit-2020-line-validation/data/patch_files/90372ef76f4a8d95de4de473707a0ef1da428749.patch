From 90372ef76f4a8d95de4de473707a0ef1da428749 Mon Sep 17 00:00:00 2001
From: James Kosin <jkosin@apache.org>
Date: Wed, 21 Dec 2011 04:45:17 +0000
Subject: [PATCH] OPENNLP-415: Refactored the DictionaryNameFinder to not use
 the mMetaDictionary, I also simplified the arraycopy() to use original arrays
 in the copy... more fun.  Thanks to Loic Descotte for finding the bug.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1221611 13f79535-47bb-0310-9956-ffa450edef68
---
 .../tools/namefind/DictionaryNameFinder.java  | 27 +++++--------------
 1 file changed, 7 insertions(+), 20 deletions(-)

diff --git a/opennlp-tools/src/main/java/opennlp/tools/namefind/DictionaryNameFinder.java b/opennlp-tools/src/main/java/opennlp/tools/namefind/DictionaryNameFinder.java
index a643f6229..6b87a91c4 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/namefind/DictionaryNameFinder.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/namefind/DictionaryNameFinder.java
@@ -22,7 +22,6 @@
 import java.util.List;
 
 import opennlp.tools.dictionary.Dictionary;
-import opennlp.tools.dictionary.Index;
 import opennlp.tools.util.Span;
 import opennlp.tools.util.StringList;
 
@@ -34,8 +33,6 @@ public class DictionaryNameFinder implements TokenNameFinder {
 
   private Dictionary mDictionary;
 
-  private Index mMetaDictionary;
-
   /**
    * Initializes the current instance.
    *
@@ -43,35 +40,25 @@ public class DictionaryNameFinder implements TokenNameFinder {
    */
   public DictionaryNameFinder(Dictionary dictionary) {
     mDictionary = dictionary;
-    mMetaDictionary = new Index(dictionary.iterator());
   }
 
   public Span[] find(String[] tokenStrings) {
-    List<Span> foundNames = new LinkedList<Span>();
+    List<Span> foundNames = new LinkedList<>();
 
     for (int startToken = 0; startToken < tokenStrings.length; startToken++) {
 
       Span foundName = null;
-
       String  tokens[] = new String[]{};
 
       for (int endToken = startToken; endToken < tokenStrings.length; endToken++) {
 
-        String token = tokenStrings[endToken];
-
-        // TODO: improve performance here
-        String newTokens[] = new String[tokens.length + 1];
-        System.arraycopy(tokens, 0, newTokens, 0, tokens.length);
-        newTokens[newTokens.length - 1] = token;
-        tokens = newTokens;
+        tokens = new String[(endToken - startToken + 1)];
+        System.arraycopy(tokenStrings, startToken, tokens, 0, (endToken - startToken + 1));
 
-        if (mMetaDictionary.contains(token)) {
+        StringList tokenList = new StringList(tokens);
 
-          StringList tokenList = new StringList(tokens);
-
-          if (mDictionary.contains(tokenList)) {
-            foundName = new Span(startToken, endToken + 1);
-          }
+        if (mDictionary.contains(tokenList)) {
+          foundName = new Span(startToken, endToken + 1);
         }
         else {
           break;
@@ -85,7 +72,7 @@ public Span[] find(String[] tokenStrings) {
 
     return foundNames.toArray(new Span[foundNames.size()]);
   }
-  
+
   public void clearAdaptiveData() {
     // nothing to clear
   }
