From 7b59b611f7e37982267f94ca4fa77df553d94f78 Mon Sep 17 00:00:00 2001
From: Simone Tripodi <simonetripodi@apache.org>
Date: Sat, 5 Nov 2011 10:24:42 +0000
Subject: [PATCH] [DIGESTER-155] ClassLoader reference set to DigesterLoader
 not set in produced Digetser instances

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/digester/trunk@1197917 13f79535-47bb-0310-9956-ffa450edef68
---
 RELEASE-NOTES.txt                             |  2 +-
 src/changes/changes.xml                       |  3 +++
 .../digester3/binder/DigesterLoader.java      | 27 ++++++++++++-------
 .../binder/DigesterLoaderTestCase.java        | 21 +++++++++++++++
 4 files changed, 42 insertions(+), 11 deletions(-)

diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index 7be1cabd0..63242b5d7 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -55,7 +55,7 @@ NEW FEATURES
 BUGS FROM PREVIOUS RELEASE
 ===========================
 
- * NONE
+ * [DIGESTER-155] ClassLoader reference set to DigesterLoader not set in produced Digetser instances
 
 IMPROVEMENTS OVER PREVIOUS RELEASE
 ===================================
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 506f3db5d..15e340897 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -23,6 +23,9 @@
   </properties>
   <body>
   <release version="3.2" date="201?-??-??" description="Maintenance release.">
+    <action dev="simonetripodi" type="fix" issue="DIGESTER-155">
+      ClassLoader reference set to DigesterLoader not set in produced Digetser instances
+    </action>
     <action dev="simonetripodi" type="add" issue="DIGESTER-153">
       Add Constructor support to ObjectCreateRule
     </action>
diff --git a/src/main/java/org/apache/commons/digester3/binder/DigesterLoader.java b/src/main/java/org/apache/commons/digester3/binder/DigesterLoader.java
index 5e91f258a..c9017a7fe 100644
--- a/src/main/java/org/apache/commons/digester3/binder/DigesterLoader.java
+++ b/src/main/java/org/apache/commons/digester3/binder/DigesterLoader.java
@@ -107,8 +107,6 @@ public static DigesterLoader newLoader( Iterable<RulesModule> rulesModules )
 
     private final Iterable<RulesModule> rulesModules;
 
-    private boolean useContextClassLoader = true;
-
     /**
      * The class loader to use for instantiating application objects.
      * If not specified, the context class loader, or the class loader
@@ -159,6 +157,7 @@ public static DigesterLoader newLoader( Iterable<RulesModule> rulesModules )
     private DigesterLoader( Iterable<RulesModule> rulesModules )
     {
         this.rulesModules = rulesModules;
+        setUseContextClassLoader( true );
     }
 
     /**
@@ -173,7 +172,14 @@ private DigesterLoader( Iterable<RulesModule> rulesModules )
      */
     public DigesterLoader setUseContextClassLoader( boolean useContextClassLoader )
     {
-        this.useContextClassLoader = useContextClassLoader;
+        if ( useContextClassLoader )
+        {
+            setClassLoader( Thread.currentThread().getContextClassLoader() );
+        }
+        else
+        {
+            setClassLoader( getClass().getClassLoader() );
+        }
         return this;
     }
 
@@ -185,6 +191,11 @@ public DigesterLoader setUseContextClassLoader( boolean useContextClassLoader )
      */
     public DigesterLoader setClassLoader( ClassLoader classLoader )
     {
+        if ( classLoader == null )
+        {
+            throw new IllegalArgumentException( "Parameter 'classLoader' cannot be null" );
+        }
+
         this.classLoader = classLoader;
         return this;
     }
@@ -539,6 +550,7 @@ public Digester newDigester( XMLReader reader, Rules rules )
         }
 
         Digester digester = new Digester( reader );
+        digester.setClassLoader( classLoader );
         digester.setRules( rules );
         digester.setSubstitutor( substitutor );
         digester.registerAll( entityValidator );
@@ -572,14 +584,9 @@ public void addRules( final Digester digester )
      */
     public RuleSet createRuleSet()
     {
-        ClassLoader contextClassLoader =
-            classLoader != null ? classLoader
-                            : ( useContextClassLoader ? Thread.currentThread().getContextClassLoader()
-                                            : getClass().getClassLoader() );
-
-        if ( !contextClassLoader.equals( rulesBinder.getContextClassLoader() ) )
+        if ( !classLoader.equals( rulesBinder.getContextClassLoader() ) )
         {
-            rulesBinder.initialize( contextClassLoader );
+            rulesBinder.initialize( classLoader );
             for ( RulesModule rulesModule : rulesModules )
             {
                 rulesModule.configure( rulesBinder );
diff --git a/src/test/java/org/apache/commons/digester3/binder/DigesterLoaderTestCase.java b/src/test/java/org/apache/commons/digester3/binder/DigesterLoaderTestCase.java
index 86dea2756..e78ea1407 100644
--- a/src/test/java/org/apache/commons/digester3/binder/DigesterLoaderTestCase.java
+++ b/src/test/java/org/apache/commons/digester3/binder/DigesterLoaderTestCase.java
@@ -124,4 +124,25 @@ protected void configure()
         assertSame( expected, actual );
     }
 
+    @Test
+    public void digester155()
+    {
+        ClassLoader expected = getClass().getClassLoader();
+
+        Digester digester = newLoader( new AbstractRulesModule()
+        {
+
+            @Override
+            protected void configure()
+            {
+                // do nothing
+            }
+
+        } ).setClassLoader( expected ).newDigester();
+
+        ClassLoader actual = digester.getClassLoader();
+
+        assertSame( expected, actual );
+    }
+
 }
