From d61a1735e3fdaeff00c4ecad85905e335651bafa Mon Sep 17 00:00:00 2001
From: Renato Marroquin <rmarroquin@apache.org>
Date: Sun, 29 Jun 2014 18:59:56 +0200
Subject: [PATCH] GORA-350 fixed. NPE within CassandraClient.getFamilyMap.

---
 .../gora/cassandra/query/CassandraResult.java    |  2 --
 .../gora/cassandra/store/CassandraClient.java    |  4 ++--
 .../gora/cassandra/store/CassandraStore.java     | 16 +---------------
 3 files changed, 3 insertions(+), 19 deletions(-)

diff --git a/gora-cassandra/src/main/java/org/apache/gora/cassandra/query/CassandraResult.java b/gora-cassandra/src/main/java/org/apache/gora/cassandra/query/CassandraResult.java
index 61dd5bbdf..46dad1581 100644
--- a/gora-cassandra/src/main/java/org/apache/gora/cassandra/query/CassandraResult.java
+++ b/gora-cassandra/src/main/java/org/apache/gora/cassandra/query/CassandraResult.java
@@ -107,8 +107,6 @@ private void updatePersistent() throws IOException {
           int pos = this.persistent.getSchema().getField(fieldName).pos();
           Field field = fields.get(pos);
           Type fieldType = field.schema().getType();
-          // LOG.info(StringSerializer.get().fromByteBuffer(cassandraColumn.getName())
-          // + fieldName + " " + fieldType.name());
           if (fieldType.equals(Type.UNION)) {
             //getting UNION stored type
             CassandraColumn cc = getUnionTypeColumn(fieldName
diff --git a/gora-cassandra/src/main/java/org/apache/gora/cassandra/store/CassandraClient.java b/gora-cassandra/src/main/java/org/apache/gora/cassandra/store/CassandraClient.java
index 3df65177e..1d56e32be 100644
--- a/gora-cassandra/src/main/java/org/apache/gora/cassandra/store/CassandraClient.java
+++ b/gora-cassandra/src/main/java/org/apache/gora/cassandra/store/CassandraClient.java
@@ -478,7 +478,7 @@ public Map<String, List<String>> getFamilyMap(Query<K, T> query) {
         map.put(family, list);
       }
       if (persistentSchema.getField(field).schema().getType() == Type.UNION)
-        list.add(column + CassandraStore.UNION_COL_SUFIX);
+        list.add(field + CassandraStore.UNION_COL_SUFIX);
       if (column != null) {
         list.add(column);
       }
@@ -510,7 +510,7 @@ public Map<String, String> getReverseMap(Query<K, T> query) {
       String family = this.getMappingFamily(field);
       String column = this.getMappingColumn(field);
       if (persistentSchema.getField(field).schema().getType() == Type.UNION)
-        map.put(family + ":" + column + CassandraStore.UNION_COL_SUFIX, field + CassandraStore.UNION_COL_SUFIX);
+        map.put(family + ":" + field + CassandraStore.UNION_COL_SUFIX, field + CassandraStore.UNION_COL_SUFIX);
       map.put(family + ":" + column, field);
     }
     
diff --git a/gora-cassandra/src/main/java/org/apache/gora/cassandra/store/CassandraStore.java b/gora-cassandra/src/main/java/org/apache/gora/cassandra/store/CassandraStore.java
index 51138ca03..ffb4af0ee 100644
--- a/gora-cassandra/src/main/java/org/apache/gora/cassandra/store/CassandraStore.java
+++ b/gora-cassandra/src/main/java/org/apache/gora/cassandra/store/CassandraStore.java
@@ -47,7 +47,6 @@
 import org.apache.avro.specific.SpecificData;
 import org.apache.avro.specific.SpecificDatumWriter;
 import org.apache.avro.util.Utf8;
-import org.apache.commons.lang.ArrayUtils;
 import org.apache.gora.cassandra.query.CassandraQuery;
 import org.apache.gora.cassandra.query.CassandraResult;
 import org.apache.gora.cassandra.query.CassandraResultSet;
@@ -314,20 +313,7 @@ public T get(K key, String[] fields) {
     if (fields == null){
       fields = this.getFields();
     }
-    // Generating UnionFields
-    ArrayList<String> unionFields = new ArrayList<String>();
-    for (String field: fields){
-      Field schemaField =this.fieldMap.get(field);
-      Type type = schemaField.schema().getType();
-      if (type.getName().equals("UNION".toLowerCase())){
-        unionFields.add(field+UNION_COL_SUFIX);
-      }
-    }
-    
-    String[] arr = unionFields.toArray(new String[unionFields.size()]);
-    String[] both = (String[]) ArrayUtils.addAll(fields, arr);
-    
-    query.setFields(both);
+    query.setFields(fields);
 
     query.setLimit(1);
     Result<K,T> result = execute(query);
