From d5c724671fd72d49ec416e7fd086220ef7c8f4e2 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Tue, 7 Feb 2017 15:33:35 +0000
Subject: [PATCH] NET-610 FTPClient.mlistFile incorrectly handles MLST reply

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1782012 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                |  6 ++++++
 .../java/org/apache/commons/net/ftp/FTPClient.java     | 10 +++++++++-
 2 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index d74505276..6d642295f 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -79,11 +79,17 @@ This is mainly a bug-fix release. See further details below.
   Note also that if strict checking is disabled, some functions may unconditionally strip the next character after the code,
 without checking it if is a space.
 
+  The FTP client mlistFile() method now checks for a leading space before removing it.
+  If the space is missing, a MalformedServerReplyException is thrown.
+  This will only happen if the FTP server is not compliant with RFC 3659.
 
   Notable additions:
   The POP3Mail examples can now get password from console, stdin or an environment variable.
   
 ">
+            <action issue="NET-610" type="fix" dev="sebb" due-to="Sergey Yanzin">
+            FTPClient.mlistFile incorrectly handles MLST reply
+            </action>
             <action issue="NET-611" type="fix" dev="sebb">
             FTP does not validate command reply syntax fully
             </action>
diff --git a/src/main/java/org/apache/commons/net/ftp/FTPClient.java b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
index fc11e625d..dc22e37c0 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPClient.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
@@ -2507,7 +2507,15 @@ public FTPFile mlistFile(String pathname) throws IOException
     {
         boolean success = FTPReply.isPositiveCompletion(sendCommand(FTPCmd.MLST, pathname));
         if (success){
-            String entry = getReplyStrings()[1].substring(1); // skip leading space for parser
+            String reply = getReplyStrings()[1];
+            /* check the response makes sense. 
+             * Must have space before fact(s) and between fact(s) and filename
+             * Fact(s) can be absent, so at least 3 chars are needed.
+             */
+            if (reply.length() < 3 || reply.charAt(0) != ' ') {
+                throw new MalformedServerReplyException("Invalid server reply (MLST): '" + reply + "'");
+            }
+            String entry = reply.substring(1); // skip leading space for parser
             return MLSxEntryParser.parseEntry(entry);
         } else {
             return null;
