From e1f1aac436232d395fe8dc6444259c49fa585b55 Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Thu, 30 Mar 2006 11:01:09 +0000
Subject: [PATCH] FIX: artifactproperty does not set the [conf] token in the
 pattern to the correct value. It is always set to 'default'. (IVY-123)
 (thanks to Peter Oxenham)

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@484254 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                    |  1 +
 .../jayasoft/ivy/ant/IvyArtifactProperty.java  | 18 ++++++------------
 .../fr/jayasoft/ivy/util/IvyPatternHelper.java |  5 ++++-
 3 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index cded2104f..6de4dd18c 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -3,6 +3,7 @@
 - FIX: problem with conflict resolution in transitive dependencies (IVY-199)
 - FIX: pb with force when it comes after a conflict has already been solved (IVY-193)
 - FIX: POM files that reference to the parent artifact download fails (IVY-195) (thanks to Tat Leung)
+- FIX: artifactproperty does not set the [conf] token in the pattern to the correct value. It is always set to 'default'. (IVY-123) (thanks to Peter Oxenham)
 
    version 1.3 - 2006-03-17
 ===============================
diff --git a/src/java/fr/jayasoft/ivy/ant/IvyArtifactProperty.java b/src/java/fr/jayasoft/ivy/ant/IvyArtifactProperty.java
index 115dd6062..a6d6166a0 100644
--- a/src/java/fr/jayasoft/ivy/ant/IvyArtifactProperty.java
+++ b/src/java/fr/jayasoft/ivy/ant/IvyArtifactProperty.java
@@ -7,10 +7,6 @@
 package fr.jayasoft.ivy.ant;
 
 import java.io.File;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.HashSet;
-import java.util.Iterator;
 
 import org.apache.tools.ant.BuildException;
 
@@ -106,16 +102,14 @@ public void execute() throws BuildException {
         try {
             XmlReportParser parser = new XmlReportParser();
             String[] confs = splitConfs(_conf);
-            Collection all = new HashSet();
             for (int i = 0; i < confs.length; i++) {
                 Artifact[] artifacts = parser.getArtifacts(new ModuleId(_organisation, _module), confs[i], _cache);
-                all.addAll(Arrays.asList(artifacts));
-            }
-            for (Iterator iter = all.iterator(); iter.hasNext();) {
-                Artifact artifact = (Artifact)iter.next();
-                String name = IvyPatternHelper.substitute(ivy.substitute(getName()), artifact);
-                String value = IvyPatternHelper.substitute(ivy.substitute(getValue()), artifact);
-                getProject().setProperty(name, value);
+                for (int j = 0; j < artifacts.length; j++) {
+                    Artifact artifact = artifacts[j];
+                    String name = IvyPatternHelper.substitute(ivy.substitute(getName()), artifact, confs[i]);
+                    String value = IvyPatternHelper.substitute(ivy.substitute(getValue()), artifact, confs[i]);
+                    getProject().setProperty(name, value);
+                }
             }
         } catch (Exception ex) {
             throw new BuildException("impossible to add artifact properties: "+ex.getMessage(), ex);
diff --git a/src/java/fr/jayasoft/ivy/util/IvyPatternHelper.java b/src/java/fr/jayasoft/ivy/util/IvyPatternHelper.java
index 5ee4f5d98..368c08bdb 100644
--- a/src/java/fr/jayasoft/ivy/util/IvyPatternHelper.java
+++ b/src/java/fr/jayasoft/ivy/util/IvyPatternHelper.java
@@ -55,6 +55,9 @@ public static String substitute(String pattern, ModuleRevisionId moduleRevision,
                 null);
     }
     public static String substitute(String pattern, Artifact artifact) {
+        return substitute(pattern, artifact, null);
+    }
+    public static String substitute(String pattern, Artifact artifact, String conf) {
         return substitute(pattern, 
                 artifact.getModuleRevisionId().getOrganisation(),
                 artifact.getModuleRevisionId().getName(),
@@ -62,7 +65,7 @@ public static String substitute(String pattern, Artifact artifact) {
                 artifact.getName(),
                 artifact.getType(),
                 artifact.getExt(),
-                null);
+                conf);
     }
     
     public static String substitute(String pattern, String org, String module, String revision, String artifact, String type, String ext) {
