From bef749d13359d09d53deda86a7252c2b7c4d2970 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Sat, 22 Jan 2011 01:43:22 +0000
Subject: [PATCH] MATH-494 Allow for sufficiently close numbers but still
 detect +/- 0 difference

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_X@1062088 13f79535-47bb-0310-9956-ffa450edef68
---
 .../org/apache/commons/math/util/FastMathTest.java  | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/src/test/java/org/apache/commons/math/util/FastMathTest.java b/src/test/java/org/apache/commons/math/util/FastMathTest.java
index d92ac07285..734b0d9a52 100644
--- a/src/test/java/org/apache/commons/math/util/FastMathTest.java
+++ b/src/test/java/org/apache/commons/math/util/FastMathTest.java
@@ -987,6 +987,19 @@ private static void reportError(String message) {
     
     private static void check(Method mathMethod, Object[] params, Object expected, Object actual, int[] entries){
         if (!expected.equals(actual)){
+            if (expected instanceof Double) {
+                double exp = (Double) expected;
+                // Need to discount 0 otherwise +0.0 == -0.0
+                if (exp != 0 && MathUtils.equals(exp, (Double) actual, 1)) {
+                    return;
+                }
+            } else {
+                float exp = (Float) expected;
+                // Need to discount 0 otherwise +0.0 == -0.0
+                if (exp != 0 && MathUtils.equals(exp, ((Float) actual), 1)) {
+                    return;
+                }
+            }
             StringBuilder sb = new StringBuilder();
             sb.append(mathMethod.getName());
             sb.append("(");
