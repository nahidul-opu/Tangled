From a5dfe5cbc95d7f3ce0b4829756690c2cb8439f4c Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Sun, 2 Aug 2009 22:45:30 +0000
Subject: [PATCH] [CODEC-84] Double Metaphone bugs in alternative encoding.
 Apply patch. Thank you Niall.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@800153 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/codec/language/DoubleMetaphone.java | 17 +++++++++--------
 .../codec/language/DoubleMetaphone2Test.java    |  8 ++++----
 2 files changed, 13 insertions(+), 12 deletions(-)

diff --git a/src/java/org/apache/commons/codec/language/DoubleMetaphone.java b/src/java/org/apache/commons/codec/language/DoubleMetaphone.java
index 51868951ec..f7122d41f2 100644
--- a/src/java/org/apache/commons/codec/language/DoubleMetaphone.java
+++ b/src/java/org/apache/commons/codec/language/DoubleMetaphone.java
@@ -452,7 +452,7 @@ private int handleG(String value,
             if ((contains(value, 0 ,4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index + 1, 2, "ET")) {
                 //-- obvious germanic --//
                 result.append('K');
-            } else if (contains(value, index + 1, 4, "IER")) {
+            } else if (contains(value, index + 1, 3, "IER")) {
                 result.append('J');
             } else {
                 result.append('J', 'K');
@@ -561,14 +561,16 @@ private int handleJ(String value, DoubleMetaphoneResult result, int index,
     private int handleL(String value, 
                         DoubleMetaphoneResult result, 
                         int index) {
-        result.append('L');
         if (charAt(value, index + 1) == 'L') {
             if (conditionL0(value, index)) {
-                result.appendAlternate(' ');
+                result.appendPrimary('L');
+            } else {
+                result.append('L');
             }
             index += 2;
         } else {
             index++;
+            result.append('L');
         }
         return index;
     }
@@ -857,7 +859,7 @@ private boolean conditionL0(String value, int index) {
         if (index == value.length() - 3 && 
             contains(value, index - 1, 4, "ILLO", "ILLA", "ALLE")) {
             return true;
-        } else if ((contains(value, index - 1, 2, "AS", "OS") || 
+        } else if ((contains(value, value.length() - 2, 2, "AS", "OS") || 
                     contains(value, value.length() - 1, 1, "A", "O")) &&
                    contains(value, index - 1, 4, "ALLE")) {
             return true;
@@ -1002,10 +1004,9 @@ private static boolean contains(String value, int start, int length,
     }
     
     /**
-     * Determines whether <code>value</code> contains any of the criteria 
-     starting
-     * at index <code>start</code> and matching up to length <code>length</code>
-     */    
+     * Determines whether <code>value</code> contains any of the criteria starting at index <code>start</code> and
+     * matching up to length <code>length</code>
+     */
     protected static boolean contains(String value, int start, int length, 
                                       String[] criteria) {
         boolean result = false;
diff --git a/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java b/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java
index 55360dfa50..42ebb07548 100644
--- a/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java
+++ b/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java
@@ -106,7 +106,7 @@ public void testDoubleMetaphoneAlternate() {
         new String[] {"Andrews",     "ANTR", "ANTR"},
         new String[] {"Andreyco",    "ANTR", "ANTR"},
         new String[] {"Andriesse",   "ANTR", "ANTR"},
-//        new String[] {"Angier",      "ANJ",  "ANJR"}, /* Failing Secondary, result=ANKR */
+        new String[] {"Angier",      "ANJ",  "ANJR"},
         new String[] {"Annabel",     "ANPL", "ANPL"},
         new String[] {"Anne",        "AN",   "AN"},
         new String[] {"Anstye",      "ANST", "ANST"},
@@ -1232,7 +1232,7 @@ public void testDoubleMetaphoneAlternate() {
         new String[] {"bough",       "P",    "P"},
         new String[] {"breaux",      "PR",   "PR"},
         new String[] {"broughton",   "PRTN", "PRTN"},
-//        new String[] {"cabrillo",    "KPRL", "KPR"}, /* Failing Secondary, result=KPRL */
+        new String[] {"cabrillo",    "KPRL", "KPR"},
         new String[] {"caesar",      "SSR",  "SSR"},
         new String[] {"cagney",      "KKN",  "KKN"},
         new String[] {"campbell",    "KMPL", "KMPL"},
@@ -1249,7 +1249,7 @@ public void testDoubleMetaphoneAlternate() {
         new String[] {"edge",        "AJ",   "AJ"},
         new String[] {"filipowicz",  "FLPT", "FLPF"},
         new String[] {"focaccia",    "FKX",  "FKX"},
-//        new String[] {"gallegos",    "KLKS", "KKS"}, /* Failing Secondary, result=KLKS */
+        new String[] {"gallegos",    "KLKS", "KKS"},
         new String[] {"gambrelli",   "KMPR", "KMPR"},
         new String[] {"geithain",    "K0N",  "JTN"},
         new String[] {"ghiradelli",  "JRTL", "JRTL"},
@@ -1272,7 +1272,7 @@ public void testDoubleMetaphoneAlternate() {
         new String[] {"queen",       "KN",   "KN"},
         new String[] {"raspberry",   "RSPR", "RSPR"},
         new String[] {"resnais",     "RSN",  "RSNS"},
-//        new String[] {"rogier",      "RJ",   "RJR"}, /* Failing Secondary, result=RKR */
+        new String[] {"rogier",      "RJ",   "RJR"},
         new String[] {"rough",       "RF",   "RF"},
         new String[] {"san jacinto", "SNHS", "SNHS"},
         new String[] {"schenker",    "XNKR", "SKNK"},
