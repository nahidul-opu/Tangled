From 7f6d2217fe853ff3c0085395aa724b1e5bb8e9c5 Mon Sep 17 00:00:00 2001
From: Niall Kegan Pemberton <niallp@apache.org>
Date: Wed, 22 Nov 2006 23:51:09 +0000
Subject: [PATCH] VALIDATOR-195 - Fix loading of Digester rules for custom
 ValidatorResources implementations - thanks to Vijay Pandey

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/validator/trunk@478392 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/validator/ValidatorResources.java | 12 ++-
 .../CustomValidatorResourcesTest.java         | 93 +++++++++++++++++++
 .../custom/CustomValidatorResources.java      | 42 +++++++++
 xdocs/changes.xml                             |  3 +
 4 files changed, 149 insertions(+), 1 deletion(-)
 create mode 100644 src/test/org/apache/commons/validator/CustomValidatorResourcesTest.java
 create mode 100644 src/test/org/apache/commons/validator/custom/CustomValidatorResources.java

diff --git a/src/share/org/apache/commons/validator/ValidatorResources.java b/src/share/org/apache/commons/validator/ValidatorResources.java
index 2c1e5d5d2..7158337ac 100644
--- a/src/share/org/apache/commons/validator/ValidatorResources.java
+++ b/src/share/org/apache/commons/validator/ValidatorResources.java
@@ -54,6 +54,9 @@
  */
 public class ValidatorResources implements Serializable {
 
+    /** Name of the digester validator rules file */
+    private static final String VALIDATOR_RULES = "digester-rules.xml";
+
     /**
      * The set of public identifiers, and corresponding resource names, for
      * the versions of the configuration file DTDs that we know about.  There
@@ -199,7 +202,14 @@ public ValidatorResources(String[] uris)
      *  Initialize the digester.
      */
     private Digester initDigester() {
-        URL rulesUrl = this.getClass().getResource("digester-rules.xml");
+        URL rulesUrl = this.getClass().getResource(VALIDATOR_RULES);
+        if (rulesUrl == null) {
+            // Fix for Issue# VALIDATOR-195
+            rulesUrl = ValidatorResources.class.getResource(VALIDATOR_RULES);
+        }
+        if (getLog().isDebugEnabled()) {
+            getLog().debug("Loading rules from '" + rulesUrl + "'");
+        }
         Digester digester = DigesterLoader.createDigester(rulesUrl);
         digester.setNamespaceAware(true);
         digester.setValidating(true);
diff --git a/src/test/org/apache/commons/validator/CustomValidatorResourcesTest.java b/src/test/org/apache/commons/validator/CustomValidatorResourcesTest.java
new file mode 100644
index 000000000..0dc862e7c
--- /dev/null
+++ b/src/test/org/apache/commons/validator/CustomValidatorResourcesTest.java
@@ -0,0 +1,93 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.validator;
+
+import java.io.InputStream;
+import junit.framework.Test;
+import junit.framework.TestCase;
+import junit.framework.TestSuite;
+import org.apache.commons.validator.custom.CustomValidatorResources;
+
+/**
+ * Test custom ValidatorResources.
+ *
+ * @version $Revision$ $Date$
+ */
+public class CustomValidatorResourcesTest extends TestCase {
+    
+    /**
+     * Construct a test case with the specified name.
+     * @param name Name of the test
+     */
+    public CustomValidatorResourcesTest(String name) {
+        super(name);
+    }
+
+   /**
+    * Start the tests.
+    *
+    * @param theArgs the arguments. Not used
+    */
+   public static void main(String[] theArgs) {
+       junit.awtui.TestRunner.main(new String[] {ValidatorResultsTest.class.getName()});
+   }
+
+   /**
+    * Create a Test Suite
+    * @return a test suite (<code>TestSuite</code>) that includes all methods
+    *         starting with "test"
+    */
+   public static Test suite() {
+       return new TestSuite(CustomValidatorResourcesTest.class);
+   }
+
+    /**
+     * Set up.
+     */
+    protected void setUp() {
+    }
+
+    /**
+     * Tear Down
+     */
+    protected void tearDown() {
+    }
+
+    /**
+     * Test creating a custom validator resources.
+     */
+    public void testCustomResources() {
+        // Load resources
+        InputStream in = null;
+        ValidatorResources resources = null;
+
+        try {
+            in = this.getClass().getResourceAsStream("TestNumber-config.xml");
+            resources = new CustomValidatorResources(in);
+        } catch(Exception e) {
+            fail("Error loading resources: " + e);
+        } finally {
+            try {
+                if (in != null) {
+                    in.close();
+                }
+            } catch(Exception e) {
+            }
+        }
+    }
+
+}
diff --git a/src/test/org/apache/commons/validator/custom/CustomValidatorResources.java b/src/test/org/apache/commons/validator/custom/CustomValidatorResources.java
new file mode 100644
index 000000000..136bbbbf0
--- /dev/null
+++ b/src/test/org/apache/commons/validator/custom/CustomValidatorResources.java
@@ -0,0 +1,42 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.validator.custom;
+
+import java.io.InputStream;
+import java.io.IOException;
+import org.xml.sax.SAXException;
+import org.apache.commons.validator.ValidatorResources;
+
+/**                                                       
+ * Custom ValidatorResources implementation.
+ *
+ * @version $Revision$ $Date$
+ */
+public class CustomValidatorResources extends ValidatorResources {
+
+    /**
+     * Create a custom ValidatorResources object from an uri
+     *
+     * @param in InputStream for the validation.xml configuration file. 
+     * @throws SAXException if the validation XML files are not valid or well formed.
+     * @throws IOException  if an I/O error occurs processing the XML files
+     */
+    public CustomValidatorResources(InputStream in) throws IOException, SAXException {
+        super(in);
+    }
+
+}
\ No newline at end of file
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 2e6e7a93a..7e591412e 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -40,6 +40,9 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
 
     <release version="1.3.1" date="Pending">
+      <action dev="niallp" type="fix" issue="VALIDATOR-195" due-to="Vijay Pandey">
+        Fix loading of Digester rules for custom ValidatorResources implementations.
+      </action>
       <action dev="niallp" type="fix" issue="VALIDATOR-19" due-to="Masahiro Honda">
         Validator incorrectly storing itself under the FORM_PARAM key rather than
         the Form.
