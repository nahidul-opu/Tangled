From cc3c0a92368f8976ec3f611bd36184c37f14c15a Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Wed, 29 Oct 2014 20:19:37 +0000
Subject: [PATCH] [CONFIGURATION-427] Support saving of arrays.

Arrays added to a XMLPropertyListConfiguration are now handled in a special way
so that their storage format is adapted. Thanks to Ho-jin Lee for the solution
proposal.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@1635293 13f79535-47bb-0310-9956-ffa450edef68
---
 .../plist/XMLPropertyListConfiguration.java   |  7 ++-
 .../TestXMLPropertyListConfiguration.java     | 55 ++++++++++++++++++-
 2 files changed, 60 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java b/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java
index 45148f6162..4bfa038f46 100644
--- a/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java
@@ -28,6 +28,7 @@
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Calendar;
 import java.util.Collection;
 import java.util.Date;
@@ -190,10 +191,14 @@ protected void setPropertyInternal(String key, Object value)
     @Override
     protected void addPropertyInternal(String key, Object value)
     {
-        if (value instanceof byte[])
+        if (value instanceof byte[] || value instanceof List)
         {
             addPropertyDirect(key, value);
         }
+        else if (value instanceof Object[])
+        {
+            addPropertyDirect(key, Arrays.asList((Object[]) value));
+        }
         else
         {
             super.addPropertyInternal(key, value);
diff --git a/src/test/java/org/apache/commons/configuration2/plist/TestXMLPropertyListConfiguration.java b/src/test/java/org/apache/commons/configuration2/plist/TestXMLPropertyListConfiguration.java
index bbab12591e..3b35a663bf 100644
--- a/src/test/java/org/apache/commons/configuration2/plist/TestXMLPropertyListConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/plist/TestXMLPropertyListConfiguration.java
@@ -17,13 +17,16 @@
 
 package org.apache.commons.configuration2.plist;
 
+import static org.hamcrest.CoreMatchers.containsString;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertThat;
 import static org.junit.Assert.assertTrue;
 
 import java.io.File;
 import java.io.StringWriter;
+import java.util.Arrays;
 import java.util.Calendar;
 import java.util.Iterator;
 import java.util.List;
@@ -32,7 +35,6 @@
 import junitx.framework.ArrayAssert;
 import junitx.framework.ListAssert;
 import junitx.framework.ObjectAssert;
-
 import org.apache.commons.configuration2.Configuration;
 import org.apache.commons.configuration2.ConfigurationAssert;
 import org.apache.commons.configuration2.ConfigurationComparator;
@@ -455,4 +457,55 @@ public void testSaveWithEncoding() throws ConfigurationException
                                 "<?xml version=\"1.0\" encoding=\"" + encoding
                                         + "\"?>") >= 0);
     }
+
+    /**
+     * Checks whether the test configuration contains a key with an array value.
+     *
+     * @param expectedValues the expected values
+     */
+    private void checkArrayProperty(List<?> expectedValues)
+            throws ConfigurationException
+    {
+        StringWriter out = new StringWriter();
+        new FileHandler(config).save(out);
+        StringBuilder values = new StringBuilder();
+        for (Object v : expectedValues)
+        {
+            values.append("<string>").append(v).append("</string>");
+        }
+        String content = out.toString().replaceAll("[ \n\r]", "");
+        assertThat(content, containsString(String.format(
+                "<key>array</key><array>%s</array>", values)));
+    }
+
+    /**
+     * Tests whether a list can be saved correctly. This test is related to
+     * CONFIGURATION-427.
+     */
+    @Test
+    public void testSaveList() throws ConfigurationException
+    {
+        List<String> elems =
+                Arrays.asList("element1", "element2", "anotherElement");
+        config = new XMLPropertyListConfiguration();
+        config.addProperty("array", elems);
+
+        checkArrayProperty(elems);
+    }
+
+    /**
+     * Tests whether an array can be saved correctly. This test is related to
+     * CONFIGURATION-427.
+     */
+    @Test
+    public void testSaveArray() throws ConfigurationException
+    {
+        Object[] elems = {
+                "arrayElem1", "arrayElem2", "arrayElem3"
+        };
+        config = new XMLPropertyListConfiguration();
+        config.addProperty("array", elems);
+
+        checkArrayProperty(Arrays.asList(elems));
+    }
 }
