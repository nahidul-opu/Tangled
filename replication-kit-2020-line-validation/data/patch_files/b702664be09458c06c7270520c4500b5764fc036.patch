From b702664be09458c06c7270520c4500b5764fc036 Mon Sep 17 00:00:00 2001
From: "Bruno P. Kinoshita" <kinow@apache.org>
Date: Tue, 21 Nov 2017 09:48:03 +0000
Subject: [PATCH] VALIDATOR-434 synchronize when iterating a list created with
 Collections.synchronizedList, as per javadocs. Thanks to GitHub user
 @emopers!

This closes #4



git-svn-id: https://svn.apache.org/repos/asf/commons/proper/validator/trunk@1815895 13f79535-47bb-0310-9956-ffa450edef68
---
 .../org/apache/commons/validator/Field.java   | 32 ++++++++++---------
 1 file changed, 17 insertions(+), 15 deletions(-)

diff --git a/src/main/java/org/apache/commons/validator/Field.java b/src/main/java/org/apache/commons/validator/Field.java
index cc8a93431..d666ce8ea 100644
--- a/src/main/java/org/apache/commons/validator/Field.java
+++ b/src/main/java/org/apache/commons/validator/Field.java
@@ -907,22 +907,24 @@ public ValidatorResults validate(Map<String, Object> params, Map<String, Validat
 
         for (int fieldNumber = 0; fieldNumber < numberOfFieldsToValidate; fieldNumber++) {
 
-            Iterator<String> dependencies = this.dependencyList.iterator();
             ValidatorResults results = new ValidatorResults();
-            while (dependencies.hasNext()) {
-                String depend = dependencies.next();
-
-                ValidatorAction action = actions.get(depend);
-                if (action == null) {
-                    this.handleMissingAction(depend);
-                }
-
-                boolean good =
-                    validateForRule(action, results, actions, params, fieldNumber);
-
-                if (!good) {
-                    allResults.merge(results);
-                    return allResults;
+            synchronized(dependencyList) {
+                Iterator<String> dependencies = this.dependencyList.iterator();
+                while (dependencies.hasNext()) {
+                    String depend = dependencies.next();
+
+                    ValidatorAction action = actions.get(depend);
+                    if (action == null) {
+                        this.handleMissingAction(depend);
+                    }
+
+                    boolean good =
+                        validateForRule(action, results, actions, params, fieldNumber);
+
+                    if (!good) {
+                        allResults.merge(results);
+                        return allResults;
+                    }
                 }
             }
             allResults.merge(results);
