From 50c1fdecb4ed33ec1bb0d449f294c299d5369701 Mon Sep 17 00:00:00 2001
From: Henri Yandell <bayard@apache.org>
Date: Tue, 3 Aug 2010 04:41:04 +0000
Subject: [PATCH] Making it so that NumberUtils.createNumber throws a
 NumberFormatException instead of a StringIndexOutOfBoundsException when
 Strings such as 1eE are passed in. Thanks to Ingo Heinrich's report and patch
 in LANG-638

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@981736 13f79535-47bb-0310-9956-ffa450edef68
---
 src/main/java/org/apache/commons/lang3/math/NumberUtils.java | 5 ++++-
 .../java/org/apache/commons/lang3/math/NumberUtilsTest.java  | 3 +++
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
index fd03ab8f888..f1f36a8889c 100644
--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
@@ -476,7 +476,7 @@ public static Number createNumber(String str) throws NumberFormatException {
         if (decPos > -1) {
 
             if (expPos > -1) {
-                if (expPos < decPos) {
+                if (expPos < decPos || expPos > str.length()) {
                     throw new NumberFormatException(str + " is not a valid number.");
                 }
                 dec = str.substring(decPos + 1, expPos);
@@ -486,6 +486,9 @@ public static Number createNumber(String str) throws NumberFormatException {
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
+                if (expPos > str.length()) {
+                    throw new NumberFormatException(str + " is not a valid number.");
+                }
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;
diff --git a/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java b/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
index 80df5620712..779eb746be5 100644
--- a/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java
@@ -211,6 +211,9 @@ public void testCreateNumber() {
 
         // LANG-521
         assertEquals("createNumber(String) LANG-521 failed", new Float("2."), NumberUtils.createNumber("2."));
+
+        // LANG-638
+        assertFalse("createNumber(String) succeeded", checkCreateNumber("1eE"));
     }
 
     public void testCreateFloat() {
