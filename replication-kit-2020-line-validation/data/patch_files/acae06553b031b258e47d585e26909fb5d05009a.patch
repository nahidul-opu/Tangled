From acae06553b031b258e47d585e26909fb5d05009a Mon Sep 17 00:00:00 2001
From: Scokart Gilles <gscokart@apache.org>
Date: Sat, 22 Dec 2007 15:01:54 +0000
Subject: [PATCH] FIX: Maven test scope includes all runtime dependencies
 (IVY-682)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@606458 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                            |  2 +-
 .../plugins/parser/m2/PomModuleDescriptorParser.java   | 10 ++++++++--
 test/java/org/apache/ivy/core/resolve/ResolveTest.java |  4 ++--
 3 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index b01822c23..d12f06cc6 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -67,7 +67,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - FIX: latest compatible conflict manager fails with circular dependencies and dynamic revision (IVY-663)
 - FIX: Strict conflictmanager seems to not support dynamic revisions (IVY-474)
 - FIX: NPE in namespace transformation during the ivy:findrevision and ivy:resolve task execution (IVY-659) (thanks to Andrea Bernardo Ciddio)
-
+- FIX: Maven test scope includes all runtime dependencies (IVY-682)
 
    2.0.0-beta1
 =====================================
diff --git a/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java b/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java
index 43236a638..84650e5a3 100644
--- a/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java
+++ b/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java
@@ -109,7 +109,7 @@ public final class PomModuleDescriptorParser extends AbstractModuleDescriptorPar
                     "this scope indicates that the dependency is not required for normal use of "
                     + "the application, and is only available for the test compilation and "
                     + "execution phases.",
-                    new String[0], true, null),
+                    new String[] {"runtime"}, true, null),
             new Configuration(
                     "system",
                     Visibility.PUBLIC,
@@ -364,7 +364,13 @@ public void endElement(String uri, String localName, String qName) throws SAXExc
                     Message.verbose("Relocated module will be considered as a dependency");
                     dd = new DefaultDependencyDescriptor(md, relocationeModuleRev,
                         true, false, true);
-                    dd.addDependencyConfiguration("*", "@");
+                    /*Map all public dependencies */
+                    dd.addDependencyConfiguration("compile","compile");
+                    dd.addDependencyConfiguration("runtime","runtime");
+                    dd.addDependencyConfiguration("default","default");
+                    dd.addDependencyConfiguration("master","master");
+                    dd.addDependencyConfiguration("provided","provided");
+                    dd.addDependencyConfiguration("system","system");
                     md.addDependency(dd);
                     dd = null;
                 }
diff --git a/test/java/org/apache/ivy/core/resolve/ResolveTest.java b/test/java/org/apache/ivy/core/resolve/ResolveTest.java
index f45077c47..7d0fda34e 100644
--- a/test/java/org/apache/ivy/core/resolve/ResolveTest.java
+++ b/test/java/org/apache/ivy/core/resolve/ResolveTest.java
@@ -2953,7 +2953,7 @@ public void testResolveMaven2() throws Exception {
         ivy.configure(new File("test/repositories/m2/ivysettings.xml"));
         ResolveReport report = ivy.resolve(new File(
                 "test/repositories/m2/org/apache/test3/1.0/test3-1.0.pom").toURL(),
-            getResolveOptions(new String[] {"*"}));
+            getResolveOptions(new String[] {"test"}));
         assertNotNull(report);
         ModuleDescriptor md = report.getModuleDescriptor();
         assertNotNull(md);
@@ -2971,7 +2971,7 @@ public void testResolveMaven2() throws Exception {
         assertTrue(ivy.getCacheManager(cache).getIvyFileInCache(
             ModuleRevisionId.newInstance("org.apache", "test", "1.0")).exists());
         assertTrue(TestHelper.getArchiveFileInCache(ivy, cache, "org.apache", "test", "1.0",
-            "test", "jar", "jar").exists());
+            "test", "jar", "jar").exists());        
     }
 
     public void testResolveMaven2RelocationOfGroupId() throws Exception {
