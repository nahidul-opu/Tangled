From b7d3fd9e4d435eb155570f326e8c799ead6c1901 Mon Sep 17 00:00:00 2001
From: Henri Yandell <bayard@apache.org>
Date: Mon, 19 Jun 2006 12:48:08 +0000
Subject: [PATCH] Committing fix for LANG-140. By reversing the order of field
 calculation, Yu Peng's bug goes away

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@415317 13f79535-47bb-0310-9956-ffa450edef68
---
 .../lang/time/DurationFormatUtils.java        | 45 ++++++++++---------
 1 file changed, 23 insertions(+), 22 deletions(-)

diff --git a/src/java/org/apache/commons/lang/time/DurationFormatUtils.java b/src/java/org/apache/commons/lang/time/DurationFormatUtils.java
index fe0fe1c57cc..1a83a7f6946 100644
--- a/src/java/org/apache/commons/lang/time/DurationFormatUtils.java
+++ b/src/java/org/apache/commons/lang/time/DurationFormatUtils.java
@@ -276,37 +276,38 @@ public static String formatPeriod(long startMillis, long endMillis, String forma
         end.setTime(new Date(endMillis));
 
         // initial estimates
-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
+        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);
+        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);
+        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);
+        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);
+        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
+        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
+
         // each initial estimate is adjusted in case it is under 0
-        while (months < 0) {
-            months += 12;
-            years -= 1;
-        }
-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
-        while (days < 0) {
-            days += 31; // such overshooting is taken care of later on
-            months -= 1;
+        while (milliseconds < 0) {
+            milliseconds += 1000;
+            seconds -= 1;
         }
-        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);
-        while (hours < 0) {
-            hours += 24;
-            days -= 1;
+        while (seconds < 0) {
+            seconds += 60;
+            minutes -= 1;
         }
-        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);
         while (minutes < 0) {
             minutes += 60;
             hours -= 1;
         }
-        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);
-        while (seconds < 0) {
-            seconds += 60;
-            minutes -= 1;
+        while (hours < 0) {
+            hours += 24;
+            days -= 1;
         }
-        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);
-        while (milliseconds < 0) {
-            milliseconds += 1000;
-            seconds -= 1;
+        while (days < 0) {
+            days += 31; // such overshooting is taken care of later on
+            months -= 1;
+        }
+        while (months < 0) {
+            months += 12;
+            years -= 1;
         }
 
         // take estimates off of end to see if we can equal start, when it overshoots recalculate
