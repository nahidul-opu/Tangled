From 4286199ac5ad636d11f4428d1827b78d94217e06 Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Tue, 28 Sep 2010 23:54:26 +0000
Subject: [PATCH] IO-217 FileUtils.copyDirectoryToDirectory makes infinite
 loops - thanks to Roun Lee for the patch

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002424 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/commons/io/FileUtils.java         | 10 +++++-----
 src/test/org/apache/commons/io/FileUtilsTestCase.java |  8 ++++++++
 2 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/src/java/org/apache/commons/io/FileUtils.java b/src/java/org/apache/commons/io/FileUtils.java
index f39029873e8..ea9a7ae8644 100644
--- a/src/java/org/apache/commons/io/FileUtils.java
+++ b/src/java/org/apache/commons/io/FileUtils.java
@@ -1019,6 +1019,11 @@ public static void copyDirectory(File srcDir, File destDir,
      */
     private static void doCopyDirectory(File srcDir, File destDir, FileFilter filter,
             boolean preserveFileDate, List<String> exclusionList) throws IOException {
+        // recurse
+        File[] files = filter == null ? srcDir.listFiles() : srcDir.listFiles(filter);
+        if (files == null) {  // null if security restricted
+            throw new IOException("Failed to list contents of " + srcDir);
+        }
         if (destDir.exists()) {
             if (destDir.isDirectory() == false) {
                 throw new IOException("Destination '" + destDir + "' exists but is not a directory");
@@ -1034,11 +1039,6 @@ private static void doCopyDirectory(File srcDir, File destDir, FileFilter filter
         if (destDir.canWrite() == false) {
             throw new IOException("Destination '" + destDir + "' cannot be written to");
         }
-        // recurse
-        File[] files = filter == null ? srcDir.listFiles() : srcDir.listFiles(filter);
-        if (files == null) {  // null if security restricted
-            throw new IOException("Failed to list contents of " + srcDir);
-        }
         for (File file : files) {
             File copiedFile = new File(destDir, file.getName());
             if (exclusionList == null || !exclusionList.contains(file.getCanonicalPath())) {
diff --git a/src/test/org/apache/commons/io/FileUtilsTestCase.java b/src/test/org/apache/commons/io/FileUtilsTestCase.java
index bac4fe33c86..1385ed27423 100644
--- a/src/test/org/apache/commons/io/FileUtilsTestCase.java
+++ b/src/test/org/apache/commons/io/FileUtilsTestCase.java
@@ -905,6 +905,14 @@ public void testCopyDirectoryToGrandChild() throws Exception {
         assertEquals(expectedSize, FileUtils.sizeOfDirectory(grandParentDir));
     }
 
+    /** Test for IO-217 FileUtils.copyDirectoryToDirectory makes infinite loops */
+    public void testCopyDirectoryToItself() throws Exception {
+        File dir = new File(getTestDirectory(), "itself");
+        dir.mkdirs();
+        FileUtils.copyDirectoryToDirectory(dir, dir);
+        assertEquals(1, LIST_WALKER.list(dir).size());
+    }
+
     private void createFilesForTestCopyDirectory(File grandParentDir, File parentDir, File childDir) throws Exception {
         File childDir2 = new File(parentDir, "child2");
         File grandChildDir = new File(childDir, "grandChild");
