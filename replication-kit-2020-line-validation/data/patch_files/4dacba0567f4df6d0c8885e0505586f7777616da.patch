From 4dacba0567f4df6d0c8885e0505586f7777616da Mon Sep 17 00:00:00 2001
From: Colm O Heigeartaigh <coheigea@apache.org>
Date: Thu, 9 Feb 2012 12:17:12 +0000
Subject: [PATCH] [SANTUARIO-296] - XMLSignatureInput fails with an IOException
 if constructed on a BufferedInputStream

git-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1242292 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGELOG.txt                                  |  1 +
 .../security/signature/XMLSignatureInput.java  | 18 +++---------------
 2 files changed, 4 insertions(+), 15 deletions(-)

diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 74a03ef212..d8bddfa0ab 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,6 +1,7 @@
 Changelog for "Apache xml-security" <http://santuario.apache.org/>
 
 New in v1.5.1-SNAPSHOT:
+    Fixed SANTUARIO-296 - XMLSignatureInput fails with an IOException if constructed on a BufferedInputStream
     Fixed SANTUARIO-298 - Xalan is still a required dependency
     Fixed SANTUARIO-299 - StringIndexOutOfBoundsException is thrown during reference verification (if URI = "#")
     Fixed SANTUARIO-297 - Exceptions should use a JDK exception cause mechanism
diff --git a/src/main/java/org/apache/xml/security/signature/XMLSignatureInput.java b/src/main/java/org/apache/xml/security/signature/XMLSignatureInput.java
index c692bfb1ea..b46b3091d7 100644
--- a/src/main/java/org/apache/xml/security/signature/XMLSignatureInput.java
+++ b/src/main/java/org/apache/xml/security/signature/XMLSignatureInput.java
@@ -238,9 +238,6 @@ public Set<Node> getNodeSet(boolean circumvent) throws ParserConfigurationExcept
      */
     public InputStream getOctetStream() throws IOException  {
         if (inputOctetStreamProxy != null) {
-            if (inputOctetStreamProxy.markSupported()) {
-                inputOctetStreamProxy.reset();
-            }
             return inputOctetStreamProxy;
         }
 
@@ -488,9 +485,6 @@ public void updateOutputStream(OutputStream diOs, boolean c14n11)
             c14nizer.setWriter(diOs);
             c14nizer.engineCanonicalize(this); 
         } else {
-            if (inputOctetStreamProxy.markSupported()) {
-                inputOctetStreamProxy.reset();
-            }
             byte[] buffer = new byte[4 * 1024];
             int bytesread = 0;
             while ((bytesread = inputOctetStreamProxy.read(buffer)) != -1) {
@@ -513,15 +507,9 @@ private byte[] getBytesFromInputStream() throws IOException {
         if (inputOctetStreamProxy == null) {
             return null;
         }
-        if (inputOctetStreamProxy.markSupported()) {
-            inputOctetStreamProxy.reset();       
-            bytes = JavaUtils.getBytesFromStream(inputOctetStreamProxy);
-            return bytes;
-        } else {
-            bytes = JavaUtils.getBytesFromStream(inputOctetStreamProxy);
-            inputOctetStreamProxy.close();
-            return bytes;
-        }
+        bytes = JavaUtils.getBytesFromStream(inputOctetStreamProxy);
+        inputOctetStreamProxy.close();
+        return bytes;
     }
         
     /**
