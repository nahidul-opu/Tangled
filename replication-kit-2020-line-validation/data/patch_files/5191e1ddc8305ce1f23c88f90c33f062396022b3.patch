From 5191e1ddc8305ce1f23c88f90c33f062396022b3 Mon Sep 17 00:00:00 2001
From: Thomas Neidhart <tn@apache.org>
Date: Sun, 22 Jan 2012 11:19:26 +0000
Subject: [PATCH] Fixed faulty test for zero in TridiagonalTransformer

JIRA: MATH-652
Reported and patched by Greg Sterijevski

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1234486 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/math/linear/TriDiagonalTransformer.java    | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java b/src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java
index 89ca2eaa98..bf9b51376b 100644
--- a/src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java
+++ b/src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java
@@ -98,13 +98,13 @@ public RealMatrix getQT() {
         if (cachedQt == null) {
             final int m = householderVectors.length;
             double[][] qta = new double[m][m];
-          
+
             // build up first part of the matrix by applying Householder transforms
             for (int k = m - 1; k >= 1; --k) {
                 final double[] hK = householderVectors[k - 1];
-                final double inv = 1.0 / (secondary[k - 1] * hK[k]);
                 qta[k][k] = 1;
                 if (hK[k] != 0.0) {
+                    final double inv = 1.0 / (secondary[k - 1] * hK[k]);
                     double beta = 1.0 / secondary[k - 1];
                     qta[k][k] = 1 + beta * hK[k];
                     for (int i = k + 1; i < m; ++i) {
