From a6d51b8d2f124b71d420e2b1c5f901c503da65cd Mon Sep 17 00:00:00 2001
From: Matthew Jason Benson <mbenson@apache.org>
Date: Thu, 10 Feb 2011 23:50:23 +0000
Subject: [PATCH] [COLLECTIONS-330] remove unreasonable expectations from
 LRUMap synchronized iteration tests

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1069618 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/collections/map/TestLRUMap.java | 14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/src/test/org/apache/commons/collections/map/TestLRUMap.java b/src/test/org/apache/commons/collections/map/TestLRUMap.java
index da590b7c7d..7fe780e3fc 100644
--- a/src/test/org/apache/commons/collections/map/TestLRUMap.java
+++ b/src/test/org/apache/commons/collections/map/TestLRUMap.java
@@ -475,8 +475,7 @@ public void testInternalState_getEntry_int() {
         } catch (IndexOutOfBoundsException ex) {}
     }
     
-    // TODO: COLLECTIONS-330
-    public void todoTestSynchronizedRemoveFromMapIterator() throws InterruptedException {
+    public void testSynchronizedRemoveFromMapIterator() throws InterruptedException {
 
         final LRUMap<Object, Thread> map = new LRUMap<Object, Thread>(10000);
         
@@ -511,8 +510,8 @@ public void run() {
                         }
                         synchronized (map) {
                             for (MapIterator<Object, Thread> iter = map.mapIterator(); iter.hasNext();) {
-                                String name = (String)iter.next();
-                                if (map.get(name) == this) {
+                            	iter.next();
+                            	if (iter.getValue() == this) {
                                     iter.remove();
                                 }
                             }
@@ -642,8 +641,7 @@ public void run() {
                 + counter[0] + " did succeed", counter[0] >= threads.length);
     }
     
-    // TODO: COLLECTIONS-330
-    public void todoTestSynchronizedRemoveFromKeySet() throws InterruptedException {
+    public void testSynchronizedRemoveFromKeySet() throws InterruptedException {
 
         final Map<Object, Thread> map = new LRUMap<Object, Thread>(10000);
         
@@ -678,8 +676,8 @@ public void run() {
                         }
                         synchronized (map) {
                             for (Iterator<Object> iter = map.keySet().iterator(); iter.hasNext();) {
-                                String name = (String)iter.next();
-                                if (map.get(name) == this) {
+								String name = (String) iter.next();
+								if (name.substring(0, name.indexOf('[')).equals(getName())) {
                                     iter.remove();
                                 }
                             }
