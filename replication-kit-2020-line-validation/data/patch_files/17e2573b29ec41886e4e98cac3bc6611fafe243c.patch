From 17e2573b29ec41886e4e98cac3bc6611fafe243c Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Tue, 6 Jan 2015 11:26:31 +0000
Subject: [PATCH] VALIDATOR-235 UrlValidator rejects url with Unicode
 characters in domain label or TLD Check total length after conversion - URLs
 must be equally reachable in punycode and Unicode

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/validator/trunk@1649783 13f79535-47bb-0310-9956-ffa450edef68
---
 .../validator/routines/DomainValidator.java   | 22 +++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/commons/validator/routines/DomainValidator.java b/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
index 7b6940ecc..ceeb21cda 100644
--- a/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
+++ b/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
@@ -145,10 +145,17 @@ private DomainValidator(boolean allowLocal) {
      * @return true if the parameter is a valid domain name
      */
     public boolean isValid(String domain) {
-        if (domain == null || domain.length() > 253) {
+        if (domain == null) {
+            return false;
+        }
+        domain = unicodeToASCII(domain);
+        // hosts must be equally reachable via punycode and Unicode;
+        // Unicode is never shorter than punycode, so check punycode
+        // if domain did not convert, then it will be caught by ASCII
+        // checks in the regexes below
+        if (domain.length() > 253) {
             return false;
         }
-        domain = unicodeToASCII(domain); // TODO should this be before the length check?
         String[] groups = domainRegex.match(domain);
         if (groups != null && groups.length > 0) {
             return isValidTld(groups[0]);
@@ -159,10 +166,17 @@ public boolean isValid(String domain) {
     // package protected for unit test access
     // must agree with isValid() above
     final boolean isValidDomainSyntax(String domain) {
-        if (domain == null || domain.length() > 253) {
+        if (domain == null) {
+            return false;
+        }
+        domain = unicodeToASCII(domain);
+        // hosts must be equally reachable via punycode and Unicode;
+        // Unicode is never shorter than punycode, so check punycode
+        // if domain did not convert, then it will be caught by ASCII
+        // checks in the regexes below
+        if (domain.length() > 253) {
             return false;
         }
-        domain = unicodeToASCII(domain); // TODO should this be before the length check?
         String[] groups = domainRegex.match(domain);
         return (groups != null && groups.length > 0)
                 || hostnameRegex.isValid(domain);
