From 4564a17fb24a851771f83a614d0bde5bae05bcfa Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 9 Feb 2017 16:09:31 +0000
Subject: [PATCH] NET-414 Apache Commons TFTP does not reject request replies
 that originate from a control port.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1782356 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                            |  3 +++
 .../org/apache/commons/net/tftp/TFTPClient.java    | 14 ++++++++++++++
 2 files changed, 17 insertions(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 2a1aa2bba..09a76ad53 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -87,6 +87,9 @@ without checking it if is a space.
   The POP3Mail examples can now get password from console, stdin or an environment variable.
   
 ">
+            <action issue="NET-414" type="fix" dev="sebb" due-to="Chuck Wolber">
+            Apache Commons TFTP does not reject request replies that originate from a control port.
+            </action>
             <action issue="NET-477" type="fix" dev="sebb" due-to="John Walton">
             TFTP sendFile retry broken
             </action>
diff --git a/src/main/java/org/apache/commons/net/tftp/TFTPClient.java b/src/main/java/org/apache/commons/net/tftp/TFTPClient.java
index 53cc2433d..23ceb3e20 100644
--- a/src/main/java/org/apache/commons/net/tftp/TFTPClient.java
+++ b/src/main/java/org/apache/commons/net/tftp/TFTPClient.java
@@ -177,6 +177,13 @@ public int receiveFile(String filename, int mode, OutputStream output,
                         final InetAddress recdAddress = received.getAddress();
                         if (lastBlock == 0)
                         {
+                            if (recdPort == port) { // must not use the control port here
+                                TFTPErrorPacket error = new TFTPErrorPacket(recdAddress,
+                                        recdPort, TFTPErrorPacket.UNKNOWN_TID,
+                                        "INCORRECT SOURCE PORT");
+                                bufferedSend(error);
+                                throw new IOException("Incorrect source port ("+recdPort+") in request reply.");
+                            }
                             hostPort = recdPort;
                             ack.setPort(hostPort);
                             if(!host.equals(recdAddress))
@@ -377,6 +384,13 @@ public void sendFile(String filename, int mode, InputStream input,
                         // answering host address (for hosts with multiple IPs)
                         if (justStarted) {
                             justStarted = false;
+                            if (recdPort == port) { // must not use the control port here
+                                TFTPErrorPacket error = new TFTPErrorPacket(recdAddress,
+                                        recdPort, TFTPErrorPacket.UNKNOWN_TID,
+                                        "INCORRECT SOURCE PORT");
+                                bufferedSend(error);
+                                throw new IOException("Incorrect source port ("+recdPort+") in request reply.");
+                            }
                             hostPort = recdPort;
                             data.setPort(hostPort);
                             if (!host.equals(recdAddress)) {
