From 585511f7c0d1cdb0d515a979dcc00641df2a026f Mon Sep 17 00:00:00 2001
From: Eli Reisman <ereisman@apache.org>
Date: Thu, 30 Jan 2014 11:45:43 -0800
Subject: [PATCH] GIRAPH-819: Number of Containers required for a job (Rafal
 Wojdyla via ereisman)

---
 CHANGELOG                                            |  2 ++
 .../org/apache/giraph/yarn/GiraphYarnClient.java     | 12 +++---------
 2 files changed, 5 insertions(+), 9 deletions(-)

diff --git a/CHANGELOG b/CHANGELOG
index 1c1be0b7c..d88ed41c1 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -1,6 +1,8 @@
 Giraph Change Log
 
 Release 1.1.0 - unreleased
+  GIRAPH-819: Number of Containers Required for a Job (Rafal Wojdyla via ereisman)
+
   GIRAPH-832: Test don't finish after GIRAPH-792 (majakabiljo)
 
   GIRAPH-792: Print job progress to command line (majakabiljo)
diff --git a/giraph-core/src/main/java/org/apache/giraph/yarn/GiraphYarnClient.java b/giraph-core/src/main/java/org/apache/giraph/yarn/GiraphYarnClient.java
index e8926ebd4..70166b63d 100644
--- a/giraph-core/src/main/java/org/apache/giraph/yarn/GiraphYarnClient.java
+++ b/giraph-core/src/main/java/org/apache/giraph/yarn/GiraphYarnClient.java
@@ -206,7 +206,6 @@ private void checkPerNodeResourcesAvailable(
     final GetNewApplicationResponse cluster) throws YarnException, IOException {
     // are there enough containers to go around for our Giraph job?
     List<NodeReport> nodes = null;
-    int numContainers = 0;
     long totalAvailable = 0;
     try {
       nodes = yarnClient.getNodeReports(NodeState.RUNNING);
@@ -218,18 +217,13 @@ private void checkPerNodeResourcesAvailable(
     for (NodeReport node : nodes) {
       LOG.info("Got node report from ASM for" +
         ", nodeId=" + node.getNodeId() +
-        ", nodeAddress" + node.getHttpAddress() +
-        ", nodeRackName" + node.getRackName() +
-        ", nodeNumContainers" + node.getNumContainers());
-      numContainers += node.getNumContainers();
+        ", nodeAddress " + node.getHttpAddress() +
+        ", nodeRackName " + node.getRackName() +
+        ", nodeNumContainers " + node.getNumContainers());
       totalAvailable += node.getCapability().getMemory();
     }
     // 1 master + all workers in -w command line arg
     final int workers = giraphConf.getMaxWorkers() + 1;
-    if (workers < numContainers) {
-      throw new RuntimeException("Giraph job requires " + workers +
-        " containers to run; cluster only hosts " + numContainers);
-    }
     checkAndAdjustPerTaskHeapSize(cluster);
     final long totalAsk =
       giraphConf.getYarnTaskHeapMb() * workers;
