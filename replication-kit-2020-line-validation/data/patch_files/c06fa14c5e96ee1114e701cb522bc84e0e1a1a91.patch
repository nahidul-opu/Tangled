From c06fa14c5e96ee1114e701cb522bc84e0e1a1a91 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 27 Aug 2015 22:55:48 +0000
Subject: [PATCH] BCEL-261 Select constructor allows partially constructed
 instance to escape. Re-ordered code to delay the escape

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1698238 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                    | 1 +
 src/main/java/org/apache/commons/bcel6/generic/Select.java | 7 +++++--
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index efc24151a7..c46a2f7caa 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -63,6 +63,7 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="6.0" date="TBA" description="Major release with Java 7 and 8 support">
+      <action issue="BCEL-261" type="fix">Select constructor allows partially constructed instance to escape. Re-ordered code to delay the escape.</action>
       <action issue="BCEL-259" type="fix">Minor doc error in BranchInstruction.java</action>
       <action issue="BCEL-260" type="fix">ClassDumper example duplicates field attribute types</action>
       <action issue="BCEL-258" type="fix">No tests to check the output of dump methods</action>
diff --git a/src/main/java/org/apache/commons/bcel6/generic/Select.java b/src/main/java/org/apache/commons/bcel6/generic/Select.java
index 9ac482800c..0a1bfe20d4 100644
--- a/src/main/java/org/apache/commons/bcel6/generic/Select.java
+++ b/src/main/java/org/apache/commons/bcel6/generic/Select.java
@@ -89,12 +89,15 @@ public abstract class Select extends BranchInstruction implements VariableLength
      * @param defaultTarget default instruction target
      */
     Select(short opcode, int[] match, InstructionHandle[] targets, InstructionHandle defaultTarget) {
-        super(opcode, defaultTarget);
+        // don't set default target before instuction is built
+        super(opcode, null);
+        this.match = match;
         this.targets = targets;
+        // now it's safe to set default target
+        setTarget(defaultTarget);
         for (InstructionHandle target2 : targets) {
             notifyTarget(null, target2, this);
         }
-        this.match = match;
         if ((match_length = match.length) != targets.length) {
             throw new ClassGenException("Match and target array have not the same length: Match length: " +
                 match.length + " Target length: " + targets.length);
