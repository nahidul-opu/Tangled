From 9fabc724c8b86be6cba1b70098b9b1823434c33e Mon Sep 17 00:00:00 2001
From: Lewis John McGibbney <lewismc@apache.org>
Date: Fri, 18 May 2012 13:06:00 +0000
Subject: [PATCH] commit to address GORA-134 and update to CHANGES.txt

git-svn-id: https://svn.apache.org/repos/asf/gora/trunk@1340088 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  2 +
 .../gora/persistency/ListGenericArray.java    |  2 +-
 .../persistency/TestListGenericArray.java     | 45 +++++++++++++++++++
 3 files changed, 48 insertions(+), 1 deletion(-)
 create mode 100644 gora-core/src/test/java/org/apache/gora/persistency/TestListGenericArray.java

diff --git a/CHANGES.txt b/CHANGES.txt
index aa7403688..5d945883f 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -6,6 +6,8 @@ Gora Change Log
 
 0.3 (trunk) Current Development:
 
+* GORA-134 ListGenericArray's hashCode causes StackOverflowError (Kazuomi Kashii via lewismc)
+
 * GORA-95 Catch incorrect mapping configurations and implement sufficient logging in CassandraMapping. (lewismc)
 
 * GORA-** Commit to fix classloading for CLI execution (lewismc)
diff --git a/gora-core/src/main/java/org/apache/gora/persistency/ListGenericArray.java b/gora-core/src/main/java/org/apache/gora/persistency/ListGenericArray.java
index da92282cf..8b02e4a04 100644
--- a/gora-core/src/main/java/org/apache/gora/persistency/ListGenericArray.java
+++ b/gora-core/src/main/java/org/apache/gora/persistency/ListGenericArray.java
@@ -83,7 +83,7 @@ public Schema getSchema() {
 
   @Override
   public int hashCode() {
-    return GenericData.get().hashCode(this, schema);
+    return this.list.hashCode();
   }
 
   @SuppressWarnings({ "unchecked", "rawtypes" })
diff --git a/gora-core/src/test/java/org/apache/gora/persistency/TestListGenericArray.java b/gora-core/src/test/java/org/apache/gora/persistency/TestListGenericArray.java
new file mode 100644
index 000000000..256ca395f
--- /dev/null
+++ b/gora-core/src/test/java/org/apache/gora/persistency/TestListGenericArray.java
@@ -0,0 +1,45 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.gora.persistency;
+
+import org.apache.avro.Schema; 
+import org.apache.avro.util.Utf8;
+import org.apache.gora.persistency.ListGenericArray; 
+import org.junit.Assert;
+import org.junit.Test;
+
+/**
+ * Testcase for ListGenericArray class
+ */
+public class TestListGenericArray {
+  
+  @Test
+  public void testHashCode() {
+    ListGenericArray array = new ListGenericArray(Schema.create(Schema.Type.STRING)); 
+    boolean stackOverflowError = false;
+    array.add(new Utf8("array test")); 
+    try {
+      int hashCode = array.hashCode();
+    }
+    catch (StackOverflowError e) {
+      stackOverflowError = true;
+    }
+    Assert.assertFalse(stackOverflowError);
+  }
+}
