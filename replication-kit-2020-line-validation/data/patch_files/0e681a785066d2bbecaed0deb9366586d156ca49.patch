From 0e681a785066d2bbecaed0deb9366586d156ca49 Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Mon, 16 Jul 2012 20:18:57 +0000
Subject: [PATCH] [VFS-427][HTTP] NPE on
 HttpFileObject.getContent().getContentInfo().

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1362235 13f79535-47bb-0310-9956-ffa450edef68
---
 .../http/HttpFileContentInfoFactory.java      | 17 +++++++--
 .../vfs2/provider/http/HttpFileObject.java    | 16 +++++----
 .../test/GetContentInfoFunctionalTest.java    | 35 +++++++++++++++++++
 .../test/GetContentInfoFunctionalTest.java    | 35 +++++++++++++++++++
 src/changes/changes.xml                       |  5 ++-
 5 files changed, 98 insertions(+), 10 deletions(-)
 create mode 100644 core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java
 create mode 100644 core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java

diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java b/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java
index b19bb1fc9f..3c6cfcfdfc 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileContentInfoFactory.java
@@ -16,8 +16,11 @@
  */
 package org.apache.commons.vfs2.provider.http;
 
+import java.io.IOException;
+
 import org.apache.commons.httpclient.Header;
 import org.apache.commons.httpclient.HeaderElement;
+import org.apache.commons.httpclient.methods.HeadMethod;
 import org.apache.commons.vfs2.FileContent;
 import org.apache.commons.vfs2.FileContentInfo;
 import org.apache.commons.vfs2.FileContentInfoFactory;
@@ -26,7 +29,7 @@
 import org.apache.commons.vfs2.util.FileObjectUtils;
 
 /**
- * Creates the FileContentInfo.
+ * Creates FileContentInfo instances for HTTP.
  */
 public class HttpFileContentInfoFactory implements FileContentInfoFactory
 {
@@ -38,7 +41,15 @@ public FileContentInfo create(FileContent fileContent) throws FileSystemExceptio
         String contentType = null;
         String contentEncoding = null;
 
-        Header header = httpFile.getHeadMethod().getResponseHeader("content-type");
+        HeadMethod headMethod;
+        try
+        {
+            headMethod = httpFile.getHeadMethod();
+        } catch (IOException e)
+        {
+            throw new FileSystemException(e);
+        }
+        Header header = headMethod.getResponseHeader("content-type");
         if (header != null)
         {
             HeaderElement[] element = header.getElements();
@@ -48,7 +59,7 @@ public FileContentInfo create(FileContent fileContent) throws FileSystemExceptio
             }
         }
 
-        contentEncoding = httpFile.getHeadMethod().getResponseCharSet();
+        contentEncoding = headMethod.getResponseCharSet();
 
         return new DefaultFileContentInfo(contentType, contentEncoding);
     }
diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java b/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java
index 827b6a4dd4..c8b044bb5f 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/http/HttpFileObject.java
@@ -74,11 +74,7 @@ protected void doDetach() throws Exception
     protected FileType doGetType() throws Exception
     {
         // Use the HEAD method to probe the file.
-        method = new HeadMethod();
-        setupMethod(method);
-        final HttpClient client = fileSystem.getClient();
-        final int status = client.executeMethod(method);
-        method.releaseConnection();
+        final int status = this.getHeadMethod().getStatusCode();
         if (status == HttpURLConnection.HTTP_OK)
         {
             return FileType.FILE;
@@ -216,8 +212,16 @@ protected FileContentInfoFactory getFileContentInfoFactory()
         return new HttpFileContentInfoFactory();
     }
 
-    HeadMethod getHeadMethod()
+    HeadMethod getHeadMethod() throws IOException
     {
+        if (method != null) {
+            return method;
+        }
+        method = new HeadMethod();
+        setupMethod(method);
+        final HttpClient client = fileSystem.getClient();
+        client.executeMethod(method);
+        method.releaseConnection();
         return method;
     }
 
diff --git a/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java b/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java
new file mode 100644
index 0000000000..7c1c4c5d91
--- /dev/null
+++ b/core/src/test/java/org/apache/commons/vfs2/provider/http/test/GetContentInfoFunctionalTest.java
@@ -0,0 +1,35 @@
+package org.apache.commons.vfs2.provider.http.test;
+
+import org.apache.commons.vfs2.FileContent;
+import org.apache.commons.vfs2.FileObject;
+import org.apache.commons.vfs2.FileSystemException;
+import org.apache.commons.vfs2.FileSystemManager;
+import org.apache.commons.vfs2.VFS;
+import org.junit.Assert;
+import org.junit.Test;
+
+/**
+ * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo()
+ * 
+ * @since 2.1
+ */
+public class GetContentInfoFunctionalTest
+{
+
+    /**
+     * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo().
+     * 
+     * @throws FileSystemException
+     *             thrown when the getContentInfo API fails.
+     */
+    @Test
+    public void testGoogle() throws FileSystemException
+    {
+        final FileSystemManager fsManager = VFS.getManager();
+        final FileObject fo = fsManager.resolveFile("http://www.google.com/images/logos/ps_logo2.png");
+        final FileContent content = fo.getContent();
+        Assert.assertNotNull(content);
+        // Used to NPE before fix:
+        content.getContentInfo();
+    }
+}
diff --git a/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java b/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java
new file mode 100644
index 0000000000..5b9ca1388b
--- /dev/null
+++ b/core/src/test/java/org/apache/commons/vfs2/provider/https/test/GetContentInfoFunctionalTest.java
@@ -0,0 +1,35 @@
+package org.apache.commons.vfs2.provider.https.test;
+
+import org.apache.commons.vfs2.FileContent;
+import org.apache.commons.vfs2.FileObject;
+import org.apache.commons.vfs2.FileSystemException;
+import org.apache.commons.vfs2.FileSystemManager;
+import org.apache.commons.vfs2.VFS;
+import org.junit.Assert;
+import org.junit.Test;
+
+/**
+ * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo()
+ * 
+ * @since 2.1
+ */
+public class GetContentInfoFunctionalTest
+{
+
+    /**
+     * Tests VFS-427 NPE on HttpFileObject.getContent().getContentInfo().
+     * 
+     * @throws FileSystemException
+     *             thrown when the getContentInfo API fails.
+     */
+    @Test
+    public void testGoogle() throws FileSystemException
+    {
+        final FileSystemManager fsManager = VFS.getManager();
+        final FileObject fo = fsManager.resolveFile("https://www.google.com/images/logos/ps_logo2.png");
+        final FileContent content = fo.getContent();
+        Assert.assertNotNull(content);
+        // Used to NPE before fix:
+        content.getContentInfo();
+    }
+}
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 827b019624..4effa43c69 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -23,6 +23,9 @@
 
   <body>
     <release version="2.1" date="TBD" description="New features and bug fix release.">
+      <action issue="VFS-427" dev="ggregory" type="add" due-to="awelynant">
+        [HTTP] NPE on HttpFileObject.getContent().getContentInfo().
+      </action>
       <action issue="VFS-405" dev="ggregory" type="add" due-to="dwaszak">
         Get/set the file permissions.
       </action>
@@ -108,7 +111,7 @@
         [RAM] Reading a RAM FileSystem file fails because it never returns EOF -1.
       </action>
       <action issue="VFS-404" dev="ggregory" type="update">
-        [FTP][FTPS] Update Apache Commons Net to 3.1 from 3.0.1
+        [FTP][FTPS] Update Apache Commons Net to 3.1 from 3.0.1.
       </action>
       <action issue="VFS-402" dev="ggregory" type="update">
         [WebDAV] Update Apache Jackrabbit 1.5.2 to 1.6.5.
