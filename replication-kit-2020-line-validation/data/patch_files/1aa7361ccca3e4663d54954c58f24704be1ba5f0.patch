From 1aa7361ccca3e4663d54954c58f24704be1ba5f0 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Tue, 27 Mar 2007 20:44:23 +0000
Subject: [PATCH] FIX: IvyPostResolve Task doesn't use specified cache for the
 resolve (IVY-453)

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/core/trunk@523069 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 .../apache/ivy/ant/IvyArtifactProperty.java   |  9 +++---
 .../org/apache/ivy/ant/IvyArtifactReport.java |  8 ++---
 .../apache/ivy/ant/IvyPostResolveTask.java    |  9 +++---
 src/java/org/apache/ivy/ant/IvyTask.java      |  8 +++--
 .../apache/ivy/ant/IvyCacheFilesetTest.java   | 31 +++++++++++++++++++
 6 files changed, 51 insertions(+), 15 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index c1edd3052..a0e401efa 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -18,6 +18,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVE: New "modules in use" section in console report at the end of resolve (IVY-373) (thanks to John Wiliams)
 - IMPROVE: Generated XML reports now contains more information about the resolved module (IVY-446)
 
+- FIX: IvyPostResolve Task doesn't use specified cache for the resolve (IVY-453)
 - FIX: XmlModuleDescriptorWriterTest not working with Java 6 (IVY-374)
 - FIX: Conflict managers ignored, when assigned to modules in Ivy configuration (setting, ivyconf.xml) (IVY-448)
 - FIX: Ivy should fail if ';' has been used in publications/artifact/@conf of ivy.xml (IVY-441)
diff --git a/src/java/org/apache/ivy/ant/IvyArtifactProperty.java b/src/java/org/apache/ivy/ant/IvyArtifactProperty.java
index 5e76d8a56..b534acf97 100644
--- a/src/java/org/apache/ivy/ant/IvyArtifactProperty.java
+++ b/src/java/org/apache/ivy/ant/IvyArtifactProperty.java
@@ -100,7 +100,11 @@ public void execute() throws BuildException {
         _organisation = getProperty(_organisation, settings, "ivy.organisation", _resolveId);
         _module = getProperty(_module, settings, "ivy.module", _resolveId);
 
-        ensureResolved(isHaltonfailure(), false, getOrganisation(), getModule(), _resolveId);
+        if (_cache == null) {
+            _cache = settings.getDefaultCache();
+        }
+
+        ensureResolved(isHaltonfailure(), false, getOrganisation(), getModule(), _resolveId, _cache);
         
         _conf = getProperty(_conf, settings, "ivy.resolved.configurations", _resolveId);
         if ("*".equals(_conf)) {
@@ -113,9 +117,6 @@ public void execute() throws BuildException {
         _organisation = getProperty(_organisation, settings, "ivy.organisation", _resolveId);
         _module = getProperty(_module, settings, "ivy.module", _resolveId);
         
-        if (_cache == null) {
-            _cache = settings.getDefaultCache();
-        }
         
         if ((_organisation == null) && (_resolveId == null)) {
             throw new BuildException("no organisation provided for ivy artifactproperty: It can either be set explicitely via the attribute 'organisation' or via 'ivy.organisation' property or a prior call to <resolve/>");
diff --git a/src/java/org/apache/ivy/ant/IvyArtifactReport.java b/src/java/org/apache/ivy/ant/IvyArtifactReport.java
index 6589348d2..89f78bb68 100644
--- a/src/java/org/apache/ivy/ant/IvyArtifactReport.java
+++ b/src/java/org/apache/ivy/ant/IvyArtifactReport.java
@@ -105,16 +105,16 @@ public void execute() throws BuildException {
 
         Ivy ivy = getIvyInstance();
         IvySettings settings = ivy.getSettings();
+        if (_cache == null) {
+            _cache = settings.getDefaultCache();
+        }
 
-        ensureResolved(isHaltonfailure(), false, null, null, _resolveId);
+        ensureResolved(isHaltonfailure(), false, null, null, _resolveId, _cache);
 
         String organisation = getProperty(null, settings, "ivy.organisation", _resolveId);
         String module = getProperty(null, settings, "ivy.module", _resolveId);
         String revision = getProperty(Ivy.getWorkingRevision(), settings, "ivy.revision", _resolveId);
 
-        if (_cache == null) {
-            _cache = settings.getDefaultCache();
-        }
         _pattern = getProperty(_pattern, settings, "ivy.retrieve.pattern");
         _conf = getProperty(_conf, settings, "ivy.resolved.configurations", _resolveId);
         if ("*".equals(_conf)) {
diff --git a/src/java/org/apache/ivy/ant/IvyPostResolveTask.java b/src/java/org/apache/ivy/ant/IvyPostResolveTask.java
index 022fb2898..f02274743 100644
--- a/src/java/org/apache/ivy/ant/IvyPostResolveTask.java
+++ b/src/java/org/apache/ivy/ant/IvyPostResolveTask.java
@@ -74,6 +74,10 @@ protected void prepareAndCheck() {
         _organisation = getProperty(_organisation, settings, "ivy.organisation");
         _module = getProperty(_module, settings, "ivy.module");
         
+        if (_cache == null) {
+            _cache = settings.getDefaultCache();
+        }
+
         if (isInline()) {
         	_conf = _conf == null ? "*" : _conf;
             if (_organisation == null) {
@@ -110,7 +114,7 @@ protected void prepareAndCheck() {
         	// there (TODO: maybe we can check which reports exist and extract the configurations
         	// from these report names?)
         	if (!orgAndModSetManually) {
-        		ensureResolved(isHaltonfailure(), isUseOrigin(), isTransitive(), getOrganisation(), getModule(), getProperty(_conf, settings, "ivy.resolved.configurations"), _resolveId);
+        		ensureResolved(isHaltonfailure(), isUseOrigin(), isTransitive(), getOrganisation(), getModule(), getProperty(_conf, settings, "ivy.resolved.configurations"), _resolveId, _cache);
         	}
         	
 	        _conf = getProperty(_conf, settings, "ivy.resolved.configurations");
@@ -132,9 +136,6 @@ protected void prepareAndCheck() {
         if (_conf == null) {
             throw new BuildException("no conf provided for ivy cache task: It can either be set explicitely via the attribute 'conf' or via 'ivy.resolved.configurations' property or a prior call to <resolve/>");
         }
-        if (_cache == null) {
-            _cache = settings.getDefaultCache();
-        }
         if (_resolveId == null) {
         	_resolveId = ResolveOptions.getDefaultResolveId(getResolvedModuleId());
         }
diff --git a/src/java/org/apache/ivy/ant/IvyTask.java b/src/java/org/apache/ivy/ant/IvyTask.java
index 02bd8b721..d9fdc3017 100644
--- a/src/java/org/apache/ivy/ant/IvyTask.java
+++ b/src/java/org/apache/ivy/ant/IvyTask.java
@@ -17,6 +17,7 @@
  */
 package org.apache.ivy.ant;
 
+import java.io.File;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.Arrays;
@@ -135,10 +136,10 @@ protected void setResolved(ResolveReport report, String resolveId, boolean keep)
     	}
     }
     
-	protected void ensureResolved(boolean haltOnFailure, boolean useOrigin, String org, String module, String resolveId) {
-    	ensureResolved(haltOnFailure, useOrigin, true, org, module, null, resolveId);
+	protected void ensureResolved(boolean haltOnFailure, boolean useOrigin, String org, String module, String resolveId, File cache) {
+    	ensureResolved(haltOnFailure, useOrigin, true, org, module, null, resolveId, cache);
     }
-    protected void ensureResolved(boolean haltOnFailure, boolean useOrigin, boolean transitive, String org, String module, String conf, String resolveId) {
+    protected void ensureResolved(boolean haltOnFailure, boolean useOrigin, boolean transitive, String org, String module, String conf, String resolveId, File cache) {
         ensureMessageInitialised();
         
         String[] confs = null;
@@ -150,6 +151,7 @@ protected void ensureResolved(boolean haltOnFailure, boolean useOrigin, boolean
         
         if (confs.length > 0)  {
         	IvyResolve resolve = createResolve(haltOnFailure, useOrigin);
+        	resolve.setCache(cache);
         	resolve.setTransitive(transitive);
         	resolve.setConf(StringUtils.join(confs, ", "));
         	resolve.setResolveId(resolveId);
diff --git a/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java b/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java
index 361ef5080..29a17d855 100644
--- a/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java
+++ b/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java
@@ -78,6 +78,11 @@ private File getArchiveFileInCache(String organisation, String module, String re
 				organisation, module, revision, artifact, type, ext);
 	}
 
+    private File getArchiveFileInCache(String organisation, String module, String revision, String artifact, String type, String ext, File cache) {
+		return TestHelper.getArchiveFileInCache(_fileset.getIvyInstance(), cache, 
+				organisation, module, revision, artifact, type, ext);
+	}
+
 	public void testEmptyConf() throws Exception {
         _project.setProperty("ivy.dep.file", "test/java/org/apache/ivy/ant/ivy-108.xml");
         _fileset.setSetid("emptyconf-setid");
@@ -112,4 +117,30 @@ public void testHaltOnFailure() throws Exception {
             fail("failure raised an exception with haltonfailure set to false");
         }
     }
+    
+    public void testWithoutPreviousResolveAndNonDefaultCache() throws Exception {
+    	File cache2 = new File("build/cache2");
+    	cache2.mkdirs();
+    	
+    	try {
+	        _project.setProperty("ivy.dep.file", "test/java/org/apache/ivy/ant/ivy-simple.xml");
+	        _fileset.setSetid("simple-setid");
+	        _fileset.setCache(cache2);
+	        _fileset.execute();
+	        Object ref = _project.getReference("simple-setid");
+	        assertNotNull(ref);
+	        assertTrue(ref instanceof FileSet);
+	        FileSet fs = (FileSet)ref;
+	        DirectoryScanner directoryScanner = fs.getDirectoryScanner(_project);
+	        assertEquals(1, directoryScanner.getIncludedFiles().length);
+	        assertEquals(getArchiveFileInCache("org1", "mod1.2", "2.0", "mod1.2", "jar", "jar", cache2).getAbsolutePath(),
+	                new File("build/cache2/"+directoryScanner.getIncludedFiles()[0]).getAbsolutePath());
+    	} finally {
+            Delete del = new Delete();
+            del.setProject(new Project());
+            del.setDir(cache2);
+            del.execute();
+    	}
+    }
+    
 }
