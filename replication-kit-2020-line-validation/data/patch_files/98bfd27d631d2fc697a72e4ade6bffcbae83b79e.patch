From 98bfd27d631d2fc697a72e4ade6bffcbae83b79e Mon Sep 17 00:00:00 2001
From: Gilles Sadowski <erans@apache.org>
Date: Tue, 14 Feb 2012 14:34:11 +0000
Subject: [PATCH] MATH-744 "Double.MAX_EXPONENT" and "Float.MAX_EXPONENT" are
 not available in Java 5.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1243944 13f79535-47bb-0310-9956-ffa450edef68
---
 .../java/org/apache/commons/math/fraction/BigFraction.java    | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/apache/commons/math/fraction/BigFraction.java b/src/main/java/org/apache/commons/math/fraction/BigFraction.java
index a6672e426f..24cd7cf62a 100644
--- a/src/main/java/org/apache/commons/math/fraction/BigFraction.java
+++ b/src/main/java/org/apache/commons/math/fraction/BigFraction.java
@@ -687,7 +687,7 @@ public double doubleValue() {
             // Numerator and/or denominator must be out of range:
             // Calculate how far to shift them to put them in range.
             int shift = Math.max(numerator.bitLength(),
-                                 denominator.bitLength()) - Double.MAX_EXPONENT;
+                                 denominator.bitLength()) - FastMath.getExponent(Double.MAX_VALUE);
             result = numerator.shiftRight(shift).doubleValue() /
                 denominator.shiftRight(shift).doubleValue();
         }
@@ -740,7 +740,7 @@ public float floatValue() {
             // Numerator and/or denominator must be out of range:
             // Calculate how far to shift them to put them in range.
             int shift = Math.max(numerator.bitLength(),
-                                 denominator.bitLength()) - Float.MAX_EXPONENT;
+                                 denominator.bitLength()) - FastMath.getExponent(Float.MAX_VALUE);
             result = numerator.shiftRight(shift).floatValue() /
                 denominator.shiftRight(shift).floatValue();
         }
