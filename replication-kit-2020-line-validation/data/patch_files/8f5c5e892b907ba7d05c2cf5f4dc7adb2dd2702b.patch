From 8f5c5e892b907ba7d05c2cf5f4dc7adb2dd2702b Mon Sep 17 00:00:00 2001
From: Thomas Vandahl <tv@apache.org>
Date: Wed, 1 Apr 2015 15:15:24 +0000
Subject: [PATCH] Fix JCS-146: IndexedDiskCache: Mismatched memory and disk
 length (0) for [DED:  pos = 63802 len = 9658] during optimization

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/jcs/trunk@1670666 13f79535-47bb-0310-9956-ffa450edef68
---
 .../jcs/auxiliary/disk/indexed/IndexedDisk.java        |  1 +
 .../indexed/IndexedDiskCacheOptimizationUnitTest.java  | 10 ++++++----
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/commons-jcs-core/src/main/java/org/apache/commons/jcs/auxiliary/disk/indexed/IndexedDisk.java b/commons-jcs-core/src/main/java/org/apache/commons/jcs/auxiliary/disk/indexed/IndexedDisk.java
index f7c1feca0..1fd9ceabf 100644
--- a/commons-jcs-core/src/main/java/org/apache/commons/jcs/auxiliary/disk/indexed/IndexedDisk.java
+++ b/commons-jcs-core/src/main/java/org/apache/commons/jcs/auxiliary/disk/indexed/IndexedDisk.java
@@ -151,6 +151,7 @@ protected void move( final IndexedDiskElementDescriptor ded, final long newPosit
         {
             // chunk it
             int chunkSize = Math.min( remaining, buffer.capacity() );
+            buffer.limit(chunkSize);
             fc.read(buffer, readPos);
             buffer.flip();
             fc.write(buffer, writePos);
diff --git a/commons-jcs-core/src/test/java/org/apache/commons/jcs/auxiliary/disk/indexed/IndexedDiskCacheOptimizationUnitTest.java b/commons-jcs-core/src/test/java/org/apache/commons/jcs/auxiliary/disk/indexed/IndexedDiskCacheOptimizationUnitTest.java
index 18e54eac4..a31126f64 100644
--- a/commons-jcs-core/src/test/java/org/apache/commons/jcs/auxiliary/disk/indexed/IndexedDiskCacheOptimizationUnitTest.java
+++ b/commons-jcs-core/src/test/java/org/apache/commons/jcs/auxiliary/disk/indexed/IndexedDiskCacheOptimizationUnitTest.java
@@ -42,10 +42,10 @@ public void testBasicOptimization()
     {
         // SETUP
         int removeCount = 50;
-
+        
         IndexedDiskCacheAttributes cattr = new IndexedDiskCacheAttributes();
         cattr.setCacheName( "testOptimization" );
-        cattr.setMaxKeySize( removeCount * 3 );
+        cattr.setMaxKeySize( removeCount * 2 );
         cattr.setOptimizeAtRemoveCount( removeCount );
         cattr.setMaxRecycleBinSize( removeCount * 3 );
         cattr.setDiskPath( "target/test-sandbox/testOptimization" );
@@ -53,7 +53,7 @@ public void testBasicOptimization()
 
         disk.removeAll();
 
-        int numberToInsert = removeCount * 2;
+        int numberToInsert = removeCount * 3;
         ICacheElement<Integer, DiskTestObject>[] elements = DiskTestObjectUtil
             .createCacheElementsWithTestObjectsOfVariableSizes( numberToInsert, cattr.getCacheName() );
 
@@ -61,6 +61,7 @@ public void testBasicOptimization()
         {
             disk.processUpdate( elements[i] );
         }
+                
 
         Thread.sleep( 1000 );
         long sizeBeforeRemove = disk.getDataFileSize();
@@ -72,9 +73,10 @@ public void testBasicOptimization()
         {
             disk.processRemove( Integer.valueOf( i ) );
         }
-
+        
         SleepUtil.sleepAtLeast( 1000 );
 
+        disk.optimizeFile();
         // VERIFY
         long sizeAfterRemove = disk.getDataFileSize();
         long expectedSizeAfterRemove = DiskTestObjectUtil.totalSize( elements, removeCount, elements.length );
