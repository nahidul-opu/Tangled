From 825481f019e4482e5ea74d5b0b5e5c438535cb68 Mon Sep 17 00:00:00 2001
From: Henri Yandell <bayard@apache.org>
Date: Thu, 17 Dec 2009 06:04:28 +0000
Subject: [PATCH] Fixing LANG-538 - you need to call getTime() on a calendar
 sometimes to get it in the right state, otherwise the timezone gets out of
 whack.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@891542 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/lang3/time/FastDateFormat.java   |  1 +
 .../commons/lang3/time/FastDateFormatTest.java      | 13 +++++++++++++
 2 files changed, 14 insertions(+)

diff --git a/src/java/org/apache/commons/lang3/time/FastDateFormat.java b/src/java/org/apache/commons/lang3/time/FastDateFormat.java
index 6b10a94f050..d60af961093 100644
--- a/src/java/org/apache/commons/lang3/time/FastDateFormat.java
+++ b/src/java/org/apache/commons/lang3/time/FastDateFormat.java
@@ -869,6 +869,7 @@ public StringBuffer format(Date date, StringBuffer buf) {
      */
     public StringBuffer format(Calendar calendar, StringBuffer buf) {
         if (mTimeZoneForced) {
+            calendar.getTime(); /// LANG-538
             calendar = (Calendar) calendar.clone();
             calendar.setTimeZone(mTimeZone);
         }
diff --git a/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java b/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java
index 32bed7fe34c..4a20ddf1dd7 100644
--- a/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java
+++ b/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java
@@ -333,4 +333,17 @@ public void testLang303() {
         format = (FastDateFormat) SerializationUtils.deserialize( SerializationUtils.serialize( format ) );
         assertEquals(output, format.format(cal));
     }
+
+    public void testLang538() {
+        final String dateTime = "2009-10-16T16:42:16.000Z";
+
+        // more commonly constructed with: cal = new GregorianCalendar(2009, 9, 16, 8, 42, 16)
+        // for the unit test to work in any time zone, constructing with GMT-8 rather than default locale time zone
+        GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone("GMT-8"));
+        cal.clear();
+        cal.set(2009, 9, 16, 8, 42, 16);
+
+        FastDateFormat format = FastDateFormat.getInstance("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", TimeZone.getTimeZone("GMT"));
+        assertEquals("dateTime", dateTime, format.format(cal));
+    }
 }
