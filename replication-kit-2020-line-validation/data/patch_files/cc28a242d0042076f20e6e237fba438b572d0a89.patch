From cc28a242d0042076f20e6e237fba438b572d0a89 Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Tue, 15 Jan 2008 17:54:25 +0000
Subject: [PATCH] FIX: NPE while resolving dependencies (IVY-701)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@612175 13f79535-47bb-0310-9956-ffa450edef68
---
 .../ivy/plugins/resolver/AbstractResourceResolver.java |  6 ++++++
 .../ivy/plugins/resolver/util/ResourceMDParser.java    | 10 ++++++++++
 2 files changed, 16 insertions(+)

diff --git a/src/java/org/apache/ivy/plugins/resolver/AbstractResourceResolver.java b/src/java/org/apache/ivy/plugins/resolver/AbstractResourceResolver.java
index 1166cec4a..490ac6ef4 100644
--- a/src/java/org/apache/ivy/plugins/resolver/AbstractResourceResolver.java
+++ b/src/java/org/apache/ivy/plugins/resolver/AbstractResourceResolver.java
@@ -158,6 +158,12 @@ public ResolvedResource findResource(ResolvedResource[] rress, String name,
             }
             if (versionMatcher.needModuleDescriptor(mrid, foundMrid)) {
                 ResolvedResource r = rmdparser.parse(rres.getResource(), rres.getRevision());
+                if (r == null) {
+                    Message.debug("\t" + name 
+                        + ": impossible to get module descriptor resource: " + rres);
+                    rejected.add(rres.getRevision() + " (no or bad MD)");
+                    continue;
+                }
                 ModuleDescriptor md = ((MDResolvedResource) r).getResolvedModuleRevision()
                         .getDescriptor();
                 if (md.isDefault()) {
diff --git a/src/java/org/apache/ivy/plugins/resolver/util/ResourceMDParser.java b/src/java/org/apache/ivy/plugins/resolver/util/ResourceMDParser.java
index 932ff8c0d..fb3e072e5 100644
--- a/src/java/org/apache/ivy/plugins/resolver/util/ResourceMDParser.java
+++ b/src/java/org/apache/ivy/plugins/resolver/util/ResourceMDParser.java
@@ -20,5 +20,15 @@
 import org.apache.ivy.plugins.repository.Resource;
 
 public interface ResourceMDParser {
+    /**
+     * Parses the module descriptor designed by the given resource.
+     * 
+     * @param resource
+     *            the resource at which the module descriptor is located
+     * @param rev
+     *            the revision at which the module descriptor should be
+     * @return the parsed module descriptor as a {@link MDResolvedResource}, or <code>null</code>
+     *         if parsing has failed or if the resource is not available.
+     */
     MDResolvedResource parse(Resource resource, String rev);
 }
