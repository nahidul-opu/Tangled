From c831dabc6ea286e73243a5f7f06885ab1bbebad0 Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Wed, 26 Apr 2006 14:34:41 +0000
Subject: [PATCH] FIX: ModuleRevisionId encode/decode doesn't work if revision
 is empty (IVY-233) (thanks to Maarten Coene)

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@484299 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                    |  1 +
 src/java/fr/jayasoft/ivy/ModuleRevisionId.java | 13 +++++++++++--
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index 58b92e3ba..2d4de2257 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -35,6 +35,7 @@ for detailed view of each issue, please consult http://jira.jayasoft.org/
   - IMPROVE: comments now aren't lost when delivering ivy files (IVY-226)
   - IMPROVE: add sort of 'fallback'-mapping to the defaultconfmapping attribute (IVY-215)
 
+  - FIX: ModuleRevisionId encode/decode doesn't work if revision is empty (IVY-233)
   - FIX: cachepath task should preserve the order of the dependencies (IVY-225)
   - FIX: specifying a defaultconfmapping adds dependencies of each unlisted configuration (IVY-214)
 
diff --git a/src/java/fr/jayasoft/ivy/ModuleRevisionId.java b/src/java/fr/jayasoft/ivy/ModuleRevisionId.java
index 028caa939..7366bd156 100644
--- a/src/java/fr/jayasoft/ivy/ModuleRevisionId.java
+++ b/src/java/fr/jayasoft/ivy/ModuleRevisionId.java
@@ -12,6 +12,7 @@
  */
 public class ModuleRevisionId {
     private static final String ENCODE_SEPARATOR = ModuleId.ENCODE_SEPARATOR;
+    private static final String NO_REVISION = "[[NONE]]";
     
     public static ModuleRevisionId newInstance(String organisation, String name, String revision) {
         return new ModuleRevisionId(new ModuleId(organisation, name), revision);
@@ -97,13 +98,21 @@ public static boolean isExactRevision(String revision) {
         return !revision.startsWith("latest.") && !revision.endsWith("+");
     }
     public String encodeToString() {
-        return getOrganisation() + ENCODE_SEPARATOR+getName()+ ENCODE_SEPARATOR+getRevision();
+        String revision = getRevision();
+        if ((revision == null) || (revision.length() == 0)) {
+            revision = NO_REVISION;
+        }
+        return getOrganisation() + ENCODE_SEPARATOR + getName()+ ENCODE_SEPARATOR + revision;
     }
     public static ModuleRevisionId decode(String encoded) {
         String[] parts = encoded.split(ENCODE_SEPARATOR);
         if (parts.length != 3) {
             throw new IllegalArgumentException("badly encoded module revision id: '"+encoded+"'");
         }
-        return newInstance(parts[0], parts[1], parts[2]);
+        String revision = parts[2];
+        if (NO_REVISION.equals(revision)) {
+            revision = "";
+        }
+        return newInstance(parts[0], parts[1], revision);
     }
 }
