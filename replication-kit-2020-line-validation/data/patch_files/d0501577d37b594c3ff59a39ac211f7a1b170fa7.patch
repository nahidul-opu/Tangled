From d0501577d37b594c3ff59a39ac211f7a1b170fa7 Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Sun, 24 Apr 2016 13:21:52 +0200
Subject: [PATCH] COMPRESS-348 7z fails to read from empty entries.

---
 .../compress/archivers/sevenz/SevenZFile.java |   3 +++
 .../archivers/sevenz/SevenZFileTest.java      |  25 ++++++++++++++++++
 src/test/resources/COMPRESS-348.7z            | Bin 0 -> 213 bytes
 3 files changed, 28 insertions(+)
 create mode 100644 src/test/resources/COMPRESS-348.7z

diff --git a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java
index 3e2113df54e..10568407e42 100644
--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java
+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java
@@ -899,6 +899,9 @@ public int read() throws IOException {
     }
     
     private InputStream getCurrentStream() throws IOException {
+        if (archive.files[currentEntryIndex].getSize() == 0) {
+            return new ByteArrayInputStream(new byte[0]);
+        }
         if (deferredBlockStreams.isEmpty()) {
             throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
         }
diff --git a/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java
index 1c514d8cf61..beb0d7f70a8 100644
--- a/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java
@@ -259,6 +259,31 @@ public void getEntriesOfUnarchiveTest() throws IOException {
             sevenZFile.close();
         }
     }
+
+    /**
+     * @see "https://issues.apache.org/jira/browse/COMPRESS-348"
+     */
+    @Test
+    public void readEntriesOfSize0() throws IOException {
+        final SevenZFile sevenZFile = new SevenZFile(getFile("COMPRESS-348.7z"));
+        try {
+            int entries = 0;
+            SevenZArchiveEntry entry = sevenZFile.getNextEntry();
+            while (entry != null) {
+                entries++;
+                int b = sevenZFile.read();
+                if ("2.txt".equals(entry.getName()) || "5.txt".equals(entry.getName())) {
+                    assertEquals(-1, b);
+                } else {
+                    assertNotEquals(-1, b);
+                }
+                entry = sevenZFile.getNextEntry();
+            }
+            assertEquals(5, entries);
+        } finally {
+            sevenZFile.close();
+        }
+    }
     
     private void test7zUnarchive(final File f, final SevenZMethod m, final byte[] password) throws Exception {
         final SevenZFile sevenZFile = new SevenZFile(f, password);
diff --git a/src/test/resources/COMPRESS-348.7z b/src/test/resources/COMPRESS-348.7z
new file mode 100644
index 0000000000000000000000000000000000000000..8fb26c2b0bdfec799941c3020225aa2cbafc52d4
GIT binary patch
literal 213
zcmXr7+Ou9=hJl%J3%BwV1_)4u(iO8VYBLy1zY$4J+?)RR!(|2rLkaIK%ZotLjmGTj
z3}?#5M*efV@*?`pj{g;F>JQBL!Z&l}tnP^|&bKTjf>_i}Xf@;=h-DFc!qJs{O45hj
zf@PDg(8ki))0C6ajCfy8(2iXv9d+qKfcf53iQA9TmbRSf-gM=VPkiGmeTzq&4sVXI
z_8J|IkP4eB{@`i-Oouh5j61fTU|<ku6JzA8V_@fIWMEWgW@KcIWe{Ls;AuF;#dw<G
I#aadi0OVFop8x;=

literal 0
HcmV?d00001

