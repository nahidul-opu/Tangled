From ba59205df65fa1c3edad0dffa6d811514c64e875 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Mon, 31 Jan 2011 18:28:35 +0000
Subject: [PATCH] NET-351 - APOP authentication fails most of the time Fix by
 adding leading 0 if necessary Patch due to Bogdan Drozdowski

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/branches/NET_1_X@1065703 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/commons/net/pop3/POP3Client.java | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/java/org/apache/commons/net/pop3/POP3Client.java b/src/java/org/apache/commons/net/pop3/POP3Client.java
index 37a31ee7e..42400fb76 100644
--- a/src/java/org/apache/commons/net/pop3/POP3Client.java
+++ b/src/java/org/apache/commons/net/pop3/POP3Client.java
@@ -191,8 +191,11 @@ public boolean login(String username, String timestamp, String secret)
         digest = md5.digest(timestamp.getBytes());
         digestBuffer = new StringBuffer(128);
 
-        for (i = 0; i < digest.length; i++)
-            digestBuffer.append(Integer.toHexString(digest[i] & 0xff));
+        for (i = 0; i < digest.length; i++) {
+            int digit = digest[i] & 0xff;
+            if (digit <= 15) digestBuffer.append("0"); // Add leading zero if necessary (NET-351)
+            digestBuffer.append(Integer.toHexString(digit));            
+        }
 
         buffer = new StringBuffer(256);
         buffer.append(username);
