From 6bb83eeb3adcf6e5b4fa6c1644f62cc02cdae181 Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Thu, 12 Jul 2012 02:58:24 +0000
Subject: [PATCH] Test getContent() and getContent().getContentInfo() in
 isolation for VFS-427: NPE on HttpFileObject.getContent().getContentInfo().
 No issue yet.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1360518 13f79535-47bb-0310-9956-ffa450edef68
---
 .../http/test/HttpProviderTestCase.java       | 28 ++++++++++++---
 .../commons/vfs2/test/ProviderReadTests.java  | 36 +++++++++----------
 2 files changed, 41 insertions(+), 23 deletions(-)

diff --git a/core/src/test/java/org/apache/commons/vfs2/provider/http/test/HttpProviderTestCase.java b/core/src/test/java/org/apache/commons/vfs2/provider/http/test/HttpProviderTestCase.java
index 568124b815..37de6039f7 100644
--- a/core/src/test/java/org/apache/commons/vfs2/provider/http/test/HttpProviderTestCase.java
+++ b/core/src/test/java/org/apache/commons/vfs2/provider/http/test/HttpProviderTestCase.java
@@ -19,10 +19,14 @@
 import java.io.File;
 import java.io.IOException;
 
+import junit.framework.Assert;
 import junit.framework.Test;
 
+import org.apache.commons.vfs2.FileContent;
 import org.apache.commons.vfs2.FileObject;
+import org.apache.commons.vfs2.FileSystemException;
 import org.apache.commons.vfs2.FileSystemManager;
+import org.apache.commons.vfs2.VFS;
 import org.apache.commons.vfs2.impl.DefaultFileSystemManager;
 import org.apache.commons.vfs2.provider.http.HttpFileProvider;
 import org.apache.commons.vfs2.test.AbstractProviderTestConfig;
@@ -32,7 +36,7 @@
 
 /**
  * Test cases for the HTTP provider.
- *
+ * 
  */
 public class HttpProviderTestCase extends AbstractProviderTestConfig
 {
@@ -54,7 +58,7 @@ private static String getSystemTestUriOverride()
 
     /**
      * Creates and starts an embedded Apache HTTP Server (HttpComponents).
-     *
+     * 
      * @throws Exception
      */
     private static void setUpClass() throws Exception
@@ -68,7 +72,7 @@ private static void setUpClass() throws Exception
 
     /**
      * Creates a new test suite.
-     *
+     * 
      * @return a new test suite.
      * @throws Exception
      *             Thrown when the suite cannot be constructed.
@@ -98,7 +102,7 @@ protected void tearDown() throws Exception
 
     /**
      * Stops the embedded Apache HTTP Server.
-     *
+     * 
      * @throws IOException
      */
     private static void tearDownClass() throws IOException
@@ -111,7 +115,7 @@ private static void tearDownClass() throws IOException
 
     /**
      * Builds a new test case.
-     *
+     * 
      * @throws IOException
      *             Thrown if a free local socket port cannot be found.
      */
@@ -144,4 +148,18 @@ public void prepare(final DefaultFileSystemManager manager) throws Exception
     {
         manager.addProvider("http", new HttpFileProvider());
     }
+
+    public void testGetContent() throws FileSystemException
+    {
+        final FileObject file = VFS.getManager().resolveFile(ConnectionUri + "/read-tests/file1.txt");
+        Assert.assertNotNull(file.getContent());
+    }
+
+    public void testGetContentInfo() throws FileSystemException
+    {
+        final FileObject file = VFS.getManager().resolveFile(ConnectionUri + "/read-tests/file1.txt");
+        final FileContent content = file.getContent();
+        Assert.assertNotNull(content);
+        Assert.assertNotNull(content.getContentInfo());
+    }
 }
diff --git a/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java b/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java
index 12676f7051..6219d436d2 100644
--- a/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java
+++ b/core/src/test/java/org/apache/commons/vfs2/test/ProviderReadTests.java
@@ -243,6 +243,24 @@ public void testFolderIsReadable() throws Exception
         Assert.assertTrue(folder.isReadable());
     }
     
+    public void testGetContent() throws Exception
+    {
+        final FileObject file = resolveFile1Txt();
+        assertTrue(file.exists());
+        final FileContent content = file.getContent();
+        assertNotNull(content);
+    }
+
+    public void testGetContentInfo() throws Exception
+    {
+        final FileObject file = resolveFile1Txt();
+        assertTrue(file.exists());
+        final FileContent content = file.getContent();
+        assertNotNull(content);
+        final FileContentInfo contentInfo = content.getContentInfo();
+        assertNotNull(contentInfo);
+    }
+    
     private FileObject resolveFile1Txt() throws FileSystemException
     {
         return getReadFolder().resolveFile("file1.txt");
@@ -272,24 +290,6 @@ public void testConcurrentReadFolder() throws Exception
         }
     }
 
-    public void testContent() throws Exception
-    {
-        final FileObject file = resolveFile1Txt();
-        assertTrue(file.exists());
-        final FileContent content = file.getContent();
-        assertNotNull(content);
-    }
-
-    public void testContentInfo() throws Exception
-    {
-        final FileObject file = resolveFile1Txt();
-        assertTrue(file.exists());
-        final FileContent content = file.getContent();
-        assertNotNull(content);
-        final FileContentInfo contentInfo = content.getContentInfo();
-        assertNotNull(contentInfo);
-    }
-    
     /**
      * Tests that findFiles() works.
      */
