From caa142d0399f10ce3ec6fb843e679e2d8c07c43f Mon Sep 17 00:00:00 2001
From: Thomas Neidhart <tn@apache.org>
Date: Sun, 18 Mar 2012 21:45:43 +0000
Subject: [PATCH] [CODEC-130] Added unit test for Base32InputStream, improved
 Base64 unit test.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302231 13f79535-47bb-0310-9956-ffa450edef68
---
 .../codec/binary/Base32InputStreamTest.java   | 27 +++++++++++++++++++
 .../codec/binary/Base64InputStreamTest.java   | 13 +++------
 2 files changed, 31 insertions(+), 9 deletions(-)

diff --git a/src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java b/src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java
index 147c38f6d2..1355d60127 100644
--- a/src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java
+++ b/src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java
@@ -24,10 +24,12 @@
 import static org.junit.Assert.fail;
 
 import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.Arrays;
 
+import org.junit.Ignore;
 import org.junit.Test;
 
 public class Base32InputStreamTest {
@@ -38,6 +40,31 @@ public class Base32InputStreamTest {
 
     private final static byte[] LF = { (byte) '\n' };
 
+    private static final String STRING_FIXTURE = "Hello World";
+
+    /**
+     * Tests the problem reported in CODEC-130. Missing / wrong implementation of skip.
+     */
+    @Test
+    @Ignore
+    public void testCodec130() throws IOException {
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        Base32OutputStream base32os = new Base32OutputStream(bos);
+
+        base32os.write(StringUtils.getBytesUtf8(STRING_FIXTURE));
+        base32os.close();
+
+        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
+        Base32InputStream ins = new Base32InputStream(bis);
+
+        // we skip the first character read from the reader
+        ins.skip(1);
+        byte[] decodedBytes = Base32TestData.streamToBytes(ins, new byte[64]);
+        String str = StringUtils.newStringUtf8(decodedBytes);
+
+        assertEquals(STRING_FIXTURE.substring(1), str);
+    }
+
     /**
      * Tests the bug reported in CODEC-105. Bad interactions with InputStream when reading one byte at a time.
      */
diff --git a/src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java b/src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java
index 6eee8cdc3d..cd09255a3a 100644
--- a/src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java
+++ b/src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java
@@ -61,21 +61,16 @@ public void testCodec130() throws IOException {
         ByteArrayOutputStream bos = new ByteArrayOutputStream();
         Base64OutputStream base64os = new Base64OutputStream(bos);
 
-        base64os.write(STRING_FIXTURE.getBytes());
+        base64os.write(StringUtils.getBytesUtf8(STRING_FIXTURE));
+        base64os.close();
 
         ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
         Base64InputStream ins = new Base64InputStream(bis);
 
         // we skip the first character read from the reader
         ins.skip(1);
-        StringBuffer sb = new StringBuffer();
-        int len = 0;
-        byte[] bytes = new byte[10];
-        while ((len = ins.read(bytes)) != -1) {
-            String s = new String(bytes, 0, len, "iso-8859-1");
-            sb.append(s);
-        }
-        String str = sb.toString();
+        byte[] decodedBytes = Base64TestData.streamToBytes(ins, new byte[64]);
+        String str = StringUtils.newStringUtf8(decodedBytes);
 
         assertEquals(STRING_FIXTURE.substring(1), str);
     }
