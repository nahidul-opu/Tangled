From bc641521126fb4f5c415c7b0b268203b10ca022a Mon Sep 17 00:00:00 2001
From: Eli Reisman <ereisman@apache.org>
Date: Sun, 14 Oct 2012 08:20:48 +0000
Subject: [PATCH] GIRAPH-368: HBaseVertexInput/Output formats handle setConf()
 internally (bfem via ereisman)

git-svn-id: https://svn.apache.org/repos/asf/giraph/trunk@1398033 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGELOG                                     |  2 ++
 .../io/hbase/HBaseVertexInputFormat.java      | 34 +++++++++----------
 .../io/hbase/HBaseVertexOutputFormat.java     | 22 ++++--------
 .../TestHBaseRootMarkerVertextFormat.java     |  2 --
 .../edgemarker/TableEdgeInputFormat.java      |  8 ++---
 .../edgemarker/TableEdgeOutputFormat.java     | 10 +++---
 6 files changed, 33 insertions(+), 45 deletions(-)

diff --git a/CHANGELOG b/CHANGELOG
index 424c7da94..9f2e90a2d 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -1,6 +1,8 @@
 Giraph Change Log
 
 Release 0.2.0 - unreleased
+  GIRAPH-368: HBase Vertex I/O formats handle setConf() internally (bfem via ereisman)
+
   GIRAPH-367: Expose WorkerInfo to clients (Nitay Joffe via ereisman)
 
   GIRAPH-370: AccumuloVertexOutputFormat public visibility for
diff --git a/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hbase/HBaseVertexInputFormat.java b/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hbase/HBaseVertexInputFormat.java
index c734c6ee3..48b5740b7 100644
--- a/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hbase/HBaseVertexInputFormat.java
+++ b/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hbase/HBaseVertexInputFormat.java
@@ -19,7 +19,6 @@
 
 import org.apache.giraph.graph.VertexInputFormat;
 import org.apache.giraph.graph.VertexReader;
-import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.client.Result;
 import org.apache.hadoop.hbase.io.ImmutableBytesWritable;
 import org.apache.hadoop.hbase.mapreduce.TableInputFormat;
@@ -29,6 +28,7 @@
 import org.apache.hadoop.mapreduce.JobContext;
 import org.apache.hadoop.mapreduce.RecordReader;
 import org.apache.hadoop.mapreduce.TaskAttemptContext;
+import org.apache.log4j.Logger;
 
 import java.io.IOException;
 import java.util.List;
@@ -61,21 +61,17 @@ public abstract  class HBaseVertexInputFormat<
         M extends Writable>
         extends VertexInputFormat<I, V, E, M>  {
 
-  /**
+
+   /**
    * delegate HBase table input format
    */
   protected static final TableInputFormat BASE_FORMAT =
           new TableInputFormat();
-
-    /**
-     * static method to initialize
-     * base table input format
-     * with Configuration.
-     * @param conf job configuration
-     */
-  public static void setConf(Configuration conf) {
-    BASE_FORMAT.setConf(conf);
-  }
+  /**
+  * logger
+  */
+  private static final Logger LOG =
+          Logger.getLogger(HBaseVertexInputFormat.class);
 
   /**
    * Takes an instance of RecordReader that supports
@@ -105,12 +101,15 @@ public abstract static class HBaseVertexReader<
     private TaskAttemptContext context;
 
     /**
-     * constructor used for subclassing vertex record reader.
-     * @param reader HBase record reader instance
+     *  sets the base TableInputFOrmat and creates a record reader.
+     * @param split InputSplit
+     * @param context Context
+     * @throws IOException
      */
-    public HBaseVertexReader(RecordReader<ImmutableBytesWritable,
-                                              Result> reader) {
-      this.reader = reader;
+    public HBaseVertexReader(InputSplit split, TaskAttemptContext context)
+      throws IOException {
+      BASE_FORMAT.setConf(context.getConfiguration());
+      this.reader = BASE_FORMAT.createRecordReader(split, context);
     }
 
     /**
@@ -182,6 +181,7 @@ protected TaskAttemptContext getContext() {
   public List<InputSplit> getSplits(
   JobContext context, int numWorkers)
     throws IOException, InterruptedException {
+    BASE_FORMAT.setConf(context.getConfiguration());
     return BASE_FORMAT.getSplits(context);
   }
 }
diff --git a/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hbase/HBaseVertexOutputFormat.java b/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hbase/HBaseVertexOutputFormat.java
index 12f35ee7f..2a27b6370 100644
--- a/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hbase/HBaseVertexOutputFormat.java
+++ b/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hbase/HBaseVertexOutputFormat.java
@@ -20,7 +20,6 @@
 
 import org.apache.giraph.graph.VertexOutputFormat;
 import org.apache.giraph.graph.VertexWriter;
-import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.io.ImmutableBytesWritable;
 import org.apache.hadoop.hbase.mapreduce.TableOutputFormat;
 import org.apache.hadoop.io.Writable;
@@ -92,12 +91,13 @@ public abstract static class HBaseVertexWriter<
               Writable> recordWriter;
 
    /**
-    * Constructor for subclasses to implement recordWriter
-    * @param recordWriter subclass instance
+    * Sets up base table output format and creates a record writer.
+    * @param context task attempt context
     */
-    public HBaseVertexWriter(RecordWriter<ImmutableBytesWritable,
-             Writable> recordWriter) {
-      this.recordWriter = recordWriter;
+    public HBaseVertexWriter(TaskAttemptContext context)
+      throws IOException, InterruptedException {
+      BASE_FORMAT.setConf(context.getConfiguration());
+      this.recordWriter = BASE_FORMAT.getRecordWriter(context);
     }
 
     /**
@@ -144,15 +144,6 @@ public TaskAttemptContext getContext() {
 
   }
 
-  /**
-   * setConf
-   *
-   * @param conf Injected configuration instance
-   */
-  public static void setConf(Configuration conf) {
-    BASE_FORMAT.setConf(conf);
-  }
-
   /**
    * checkOutputSpecs
    *
@@ -176,6 +167,7 @@ public void checkOutputSpecs(JobContext context)
   public OutputCommitter getOutputCommitter(
     TaskAttemptContext context)
     throws IOException, InterruptedException {
+    BASE_FORMAT.setConf(context.getConfiguration());
     return BASE_FORMAT.getOutputCommitter(context);
   }
 }
diff --git a/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/TestHBaseRootMarkerVertextFormat.java b/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/TestHBaseRootMarkerVertextFormat.java
index b3de4151f..25c2ac363 100644
--- a/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/TestHBaseRootMarkerVertextFormat.java
+++ b/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/TestHBaseRootMarkerVertextFormat.java
@@ -140,8 +140,6 @@ public void testHBaseInputOutput() throws Exception{
             //now operate over HBase using Vertex I/O formats
             conf.set(TableInputFormat.INPUT_TABLE, TABLE_NAME);
             conf.set(TableOutputFormat.OUTPUT_TABLE, TABLE_NAME);
-            HBaseVertexInputFormat.setConf(conf);
-            HBaseVertexOutputFormat.setConf(conf);
 
             GiraphJob giraphJob = new GiraphJob(conf, getCallingMethodName());
             GiraphConfiguration giraphConf = giraphJob.getConfiguration();
diff --git a/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/edgemarker/TableEdgeInputFormat.java b/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/edgemarker/TableEdgeInputFormat.java
index 9f8a45bbd..f431fbc2b 100644
--- a/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/edgemarker/TableEdgeInputFormat.java
+++ b/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/edgemarker/TableEdgeInputFormat.java
@@ -51,8 +51,7 @@ public class TableEdgeInputFormat extends
             createVertexReader(InputSplit split,
                                TaskAttemptContext context) throws IOException {
 
-        return new TableEdgeVertexReader(
-                BASE_FORMAT.createRecordReader(split, context));
+        return new TableEdgeVertexReader(split, context);
 
     }
 
@@ -65,9 +64,8 @@ public static class TableEdgeVertexReader
         private final byte[] CF = Bytes.toBytes("cf");
         private final byte[] CHILDREN = Bytes.toBytes("children");
 
-        public TableEdgeVertexReader(
-                RecordReader<ImmutableBytesWritable, Result> recordReader) {
-            super(recordReader);
+        public TableEdgeVertexReader(InputSplit split, TaskAttemptContext context) throws IOException {
+            super(split, context);
         }
 
 
diff --git a/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/edgemarker/TableEdgeOutputFormat.java b/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/edgemarker/TableEdgeOutputFormat.java
index 35b753380..169fd88a9 100644
--- a/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/edgemarker/TableEdgeOutputFormat.java
+++ b/giraph-formats-contrib/src/test/java/org/apache/giraph/io/hbase/edgemarker/TableEdgeOutputFormat.java
@@ -39,9 +39,7 @@ public class TableEdgeOutputFormat
     public VertexWriter<Text, Text, Text>
     createVertexWriter(TaskAttemptContext context)
             throws IOException, InterruptedException {
-        RecordWriter<ImmutableBytesWritable, Writable> writer =
-                BASE_FORMAT.getRecordWriter(context);
-        return new TableEdgeVertexWriter(writer);
+        return new TableEdgeVertexWriter(context);
     }
 
     /*
@@ -54,9 +52,9 @@ public static class TableEdgeVertexWriter
         private final byte[] CF = Bytes.toBytes("cf");
         private final byte[] PARENT =  Bytes.toBytes("parent");
 
-        public TableEdgeVertexWriter(
-                RecordWriter<ImmutableBytesWritable, Writable> writer) {
-            super(writer);
+        public TableEdgeVertexWriter(TaskAttemptContext context)
+          throws IOException, InterruptedException  {
+            super(context);
         }
         /*
          Record the vertex value as a the value for a new qualifier 'parent'.
