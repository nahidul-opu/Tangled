From 73f3e2b3d6b3f4a7000187bb3e6a4d82b118d3b9 Mon Sep 17 00:00:00 2001
From: darkma773r <matt.juntunen@hotmail.com>
Date: Sat, 10 Feb 2018 23:44:16 -0500
Subject: [PATCH] MATH-1450: fixing PolygonsSet to return correct last vertex
 for open loops

---
 .../commons/math4/geometry/euclidean/twod/PolygonsSet.java    | 4 +---
 .../math4/geometry/euclidean/twod/PolygonsSetTest.java        | 2 +-
 2 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSet.java b/src/main/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSet.java
index 9b20b0c027..d69b734f07 100644
--- a/src/main/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSet.java
+++ b/src/main/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSet.java
@@ -689,9 +689,7 @@ public Cartesian2D[][] getVertices() {
                             if (j < (array.length - 1)) {
                                 // current point
                                 array[j++] = segment.getEnd();
-                            }
-
-                            if (j == (array.length - 1)) {
+                            } else if (j == (array.length - 1)) {
                                 // last dummy point
                                 double x = segment.getLine().toSubSpace(segment.getStart()).getX();
                                 x += FastMath.max(1.0, FastMath.abs(x / 2));
diff --git a/src/test/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSetTest.java b/src/test/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSetTest.java
index 94a7157608..d2f9bc09cf 100644
--- a/src/test/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSetTest.java
+++ b/src/test/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSetTest.java
@@ -191,7 +191,7 @@ public void testMixOfFiniteAndInfiniteBoundaries() {
         checkPointsEqual(new Cartesian2D(0, 1), loop[1], tolerance);
         checkPointsEqual(new Cartesian2D(0, 0), loop[2], tolerance);
         checkPointsEqual(new Cartesian2D(1, 0), loop[3], tolerance);
-        checkPointsEqual(new Cartesian2D(1, 0), loop[4], tolerance);
+        checkPointsEqual(new Cartesian2D(1, 1), loop[4], tolerance);
     }
 
     @Test
