From bc4d178e961b1b40f3f99c856d7d1168c8238f1c Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Fri, 28 Mar 2008 11:11:06 +0000
Subject: [PATCH] FIX: Out of memory/Stack overflow for new highly coupled
 project (IVY-595)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@642199 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 src/java/org/apache/ivy/ant/IvyBuildList.java |  9 ++-
 test/buildlist/F/build.xml                    | 18 ++++++
 test/buildlist/F/ivy.xml                      | 24 ++++++++
 test/buildlist/G/build.xml                    | 18 ++++++
 test/buildlist/G/ivy.xml                      | 24 ++++++++
 .../org/apache/ivy/ant/IvyBuildListTest.java  | 58 +++++++++++++++++++
 7 files changed, 149 insertions(+), 3 deletions(-)
 create mode 100644 test/buildlist/F/build.xml
 create mode 100644 test/buildlist/F/ivy.xml
 create mode 100644 test/buildlist/G/build.xml
 create mode 100644 test/buildlist/G/ivy.xml

diff --git a/CHANGES.txt b/CHANGES.txt
index db0d0dff3..bf780a3bb 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -75,6 +75,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Parse description and home page from poms (IVY-767)
 - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher
 
+- FIX: Out of memory/Stack overflow for new highly coupled project (IVY-595)
 - FIX: Compatibility with maven's dependencyMangement (IVY-753) (not completed yet)
 - FIX: ivy:settings fails when override is not set to 'true' (IVY-771)
 - FIX: NPE when specifying both resolveId and inline in an Ivy:Resolve (IVY-776)
diff --git a/src/java/org/apache/ivy/ant/IvyBuildList.java b/src/java/org/apache/ivy/ant/IvyBuildList.java
index 80595858d..b6b00f13d 100644
--- a/src/java/org/apache/ivy/ant/IvyBuildList.java
+++ b/src/java/org/apache/ivy/ant/IvyBuildList.java
@@ -357,10 +357,13 @@ private void processFilterNodeFromRoot(ModuleDescriptor node, Set toKeep, Map mo
         DependencyDescriptor[] deps = node.getDependencies();
         for (int i = 0; i < deps.length; i++) {
             ModuleId id = deps[i].getDependencyId();
-            if (moduleIdMap.get(id) != null) {
-                toKeep.add(moduleIdMap.get(id));
+            ModuleDescriptor md = (ModuleDescriptor) moduleIdMap.get(id);
+            // we test if this module id has a module descriptor, and if it isn't already in the 
+            // toKeep Set, in which there's probably a circular dependency
+            if (md != null && !toKeep.contains(md)) { 
+                toKeep.add(md);
                 if (!getOnlydirectdep()) {
-                    processFilterNodeFromRoot((ModuleDescriptor) moduleIdMap.get(id), toKeep,
+                    processFilterNodeFromRoot(md, toKeep,
                         moduleIdMap);
                 }
             }
diff --git a/test/buildlist/F/build.xml b/test/buildlist/F/build.xml
new file mode 100644
index 000000000..1c1b8cf7d
--- /dev/null
+++ b/test/buildlist/F/build.xml
@@ -0,0 +1,18 @@
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one
+   or more contributor license agreements.  See the NOTICE file
+   distributed with this work for additional information
+   regarding copyright ownership.  The ASF licenses this file
+   to you under the Apache License, Version 2.0 (the
+   "License"); you may not use this file except in compliance
+   with the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing,
+   software distributed under the License is distributed on an
+   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+   KIND, either express or implied.  See the License for the
+   specific language governing permissions and limitations
+   under the License.    
+-->
diff --git a/test/buildlist/F/ivy.xml b/test/buildlist/F/ivy.xml
new file mode 100644
index 000000000..02c7b3a95
--- /dev/null
+++ b/test/buildlist/F/ivy.xml
@@ -0,0 +1,24 @@
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one
+   or more contributor license agreements.  See the NOTICE file
+   distributed with this work for additional information
+   regarding copyright ownership.  The ASF licenses this file
+   to you under the Apache License, Version 2.0 (the
+   "License"); you may not use this file except in compliance
+   with the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing,
+   software distributed under the License is distributed on an
+   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+   KIND, either express or implied.  See the License for the
+   specific language governing permissions and limitations
+   under the License.    
+-->
+<ivy-module version="1.2">
+	<info organisation="apache" module="F"/>
+	<dependencies>
+		<dependency name="G" rev="latest.integration"/>
+	</dependencies>
+</ivy-module>
diff --git a/test/buildlist/G/build.xml b/test/buildlist/G/build.xml
new file mode 100644
index 000000000..1c1b8cf7d
--- /dev/null
+++ b/test/buildlist/G/build.xml
@@ -0,0 +1,18 @@
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one
+   or more contributor license agreements.  See the NOTICE file
+   distributed with this work for additional information
+   regarding copyright ownership.  The ASF licenses this file
+   to you under the Apache License, Version 2.0 (the
+   "License"); you may not use this file except in compliance
+   with the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing,
+   software distributed under the License is distributed on an
+   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+   KIND, either express or implied.  See the License for the
+   specific language governing permissions and limitations
+   under the License.    
+-->
diff --git a/test/buildlist/G/ivy.xml b/test/buildlist/G/ivy.xml
new file mode 100644
index 000000000..d18e67587
--- /dev/null
+++ b/test/buildlist/G/ivy.xml
@@ -0,0 +1,24 @@
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one
+   or more contributor license agreements.  See the NOTICE file
+   distributed with this work for additional information
+   regarding copyright ownership.  The ASF licenses this file
+   to you under the Apache License, Version 2.0 (the
+   "License"); you may not use this file except in compliance
+   with the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing,
+   software distributed under the License is distributed on an
+   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+   KIND, either express or implied.  See the License for the
+   specific language governing permissions and limitations
+   under the License.    
+-->
+<ivy-module version="1.2">
+	<info organisation="apache" module="G"/>
+	<dependencies>
+		<dependency name="F" rev="latest.integration"/>
+	</dependencies>
+</ivy-module>
diff --git a/test/java/org/apache/ivy/ant/IvyBuildListTest.java b/test/java/org/apache/ivy/ant/IvyBuildListTest.java
index 2963d6363..adc9a1993 100644
--- a/test/java/org/apache/ivy/ant/IvyBuildListTest.java
+++ b/test/java/org/apache/ivy/ant/IvyBuildListTest.java
@@ -35,6 +35,8 @@ public class IvyBuildListTest extends TestCase {
      * C -> B
      * D -> A , B
      * E has no dependency
+     * F -> G
+     * G -> F
      */
 
     //CheckStyle:MagicNumber| OFF   
@@ -50,6 +52,7 @@ public void testSimple() {
         FileSet fs = new FileSet();
         fs.setDir(new File("test/buildlist"));
         fs.setIncludes("**/build.xml");
+        fs.setExcludes("F/build.xml,G/build.xml");
         buildlist.addFileset(fs);
 
         buildlist.setReference("ordered.build.files");
@@ -88,6 +91,7 @@ public void testReverse() {
         FileSet fs = new FileSet();
         fs.setDir(new File("test/buildlist"));
         fs.setIncludes("**/build.xml");
+        fs.setExcludes("F/build.xml,G/build.xml");
         buildlist.addFileset(fs);
 
         buildlist.setReference("reverse.ordered.build.files");
@@ -148,6 +152,32 @@ public void testWithRoot() {
                 .getAbsolutePath());
     }
 
+    public void testWithRootCircular() {
+        Project p = new Project();
+
+        IvyBuildList buildlist = new IvyBuildList();
+        buildlist.setProject(p);
+        buildlist.setRoot("F");
+
+        FileSet fs = new FileSet();
+        fs.setDir(new File("test/buildlist"));
+        fs.setIncludes("**/build.xml");
+        buildlist.addFileset(fs);
+
+        buildlist.setReference("ordered.build.files");
+
+        buildlist.execute();
+
+        Object o = p.getReference("ordered.build.files");
+        assertNotNull(o);
+        assertTrue(o instanceof Path);
+
+        Path path = (Path) o;
+        String[] files = path.list();
+        assertNotNull(files);
+        assertEquals(2, files.length); // F and G should be in the list
+    }
+
     public void testWithTwoRoots() {
         Project p = new Project();
 
@@ -282,6 +312,33 @@ public void testWithLeaf() {
                 .getAbsolutePath());
     }
 
+    public void testWithLeafCircular() {
+        Project p = new Project();
+
+        IvyBuildList buildlist = new IvyBuildList();
+        buildlist.setProject(p);
+        buildlist.setLeaf("F");
+
+        FileSet fs = new FileSet();
+        fs.setDir(new File("test/buildlist"));
+        fs.setIncludes("**/build.xml");
+        buildlist.addFileset(fs);
+
+        buildlist.setReference("ordered.build.files");
+
+        buildlist.execute();
+
+        Object o = p.getReference("ordered.build.files");
+        assertNotNull(o);
+        assertTrue(o instanceof Path);
+
+        Path path = (Path) o;
+        String[] files = path.list();
+        assertNotNull(files);
+        
+        assertEquals(2, files.length); 
+    }
+
     public void testWithTwoLeafs() {
         Project p = new Project();
 
@@ -395,6 +452,7 @@ public void testRestartFrom() {
         FileSet fs = new FileSet();
         fs.setDir(new File("test/buildlist"));
         fs.setIncludes("**/build.xml");
+        fs.setExcludes("F/build.xml,G/build.xml");
         buildlist.addFileset(fs);
 
         buildlist.setReference("ordered.build.files");
