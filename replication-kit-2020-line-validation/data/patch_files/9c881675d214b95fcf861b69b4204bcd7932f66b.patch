From 9c881675d214b95fcf861b69b4204bcd7932f66b Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Thu, 26 Mar 2015 04:10:43 +0000
Subject: [PATCH] [CODEC-199] Bug in HW rule in Soundex. Applying 2nd version
 of the patch.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1669274 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/codec/language/Soundex.java       | 47 ++++---------------
 1 file changed, 8 insertions(+), 39 deletions(-)

diff --git a/src/main/java/org/apache/commons/codec/language/Soundex.java b/src/main/java/org/apache/commons/codec/language/Soundex.java
index 404384db33..2d4bbc1d51 100644
--- a/src/main/java/org/apache/commons/codec/language/Soundex.java
+++ b/src/main/java/org/apache/commons/codec/language/Soundex.java
@@ -41,7 +41,7 @@ public class Soundex implements StringEncoder {
      *
      * @see #US_ENGLISH_MAPPING
      */
-    public static final String US_ENGLISH_MAPPING_STRING = "01230120022455012623010202";
+    public static final String US_ENGLISH_MAPPING_STRING = "0123012#02245501262301#202";
 
     /**
      * This is a default mapping of the 26 letters used in US English. A value of <code>0</code> for a letter position
@@ -167,37 +167,6 @@ public String encode(final String str) {
         return soundex(str);
     }
 
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
-    private char getMappingCode(final String str, final int index) {
-        // map() throws IllegalArgumentException
-        final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
-        if (index > 1 && mappedChar != '0') {
-            for (int i=index-1 ; i>=0 ; i--) {
-                final char prevChar = str.charAt(i);
-                if (this.map(prevChar)==mappedChar) {
-                    return 0;
-                }
-                if ('H'!=prevChar && 'W'!=prevChar) {
-                    break;
-                }
-            }
-        }
-        return mappedChar;
-    }
-
     /**
      * Returns the maxLength. Standard Soundex
      *
@@ -268,14 +237,14 @@ public String soundex(String str) {
         char last, mapped;
         int incount = 1, count = 1;
         out[0] = str.charAt(0);
-        // getMappingCode() throws IllegalArgumentException
-        last = getMappingCode(str, 0);
+        // map() throws IllegalArgumentException
+        last = this.map(str.charAt(0));
         while (incount < str.length() && count < out.length) {
-            mapped = getMappingCode(str, incount++);
-            if (mapped != 0) {
-                if (mapped != '0' && mapped != last) {
-                    out[count++] = mapped;
-                }
+            mapped = this.map(str.charAt(incount++));
+            if (mapped == '0') {
+                last = mapped;
+            } else if (mapped != '#' && mapped != last) {
+                out[count++] = mapped;
                 last = mapped;
             }
         }
