From deae2ba23824971dea68c2aee5648a99d9cf1856 Mon Sep 17 00:00:00 2001
From: Matthew Jason Benson <mbenson@apache.org>
Date: Tue, 27 Nov 2007 17:24:59 +0000
Subject: [PATCH] [LANG-380] return when either arg == 0 plus early return when
 either == 1

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@598705 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/commons/lang/math/Fraction.java | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/java/org/apache/commons/lang/math/Fraction.java b/src/java/org/apache/commons/lang/math/Fraction.java
index c00c2c745e1..5f8e5655b4c 100644
--- a/src/java/org/apache/commons/lang/math/Fraction.java
+++ b/src/java/org/apache/commons/lang/math/Fraction.java
@@ -567,11 +567,14 @@ public Fraction pow(int power) {
      * @return the greatest common divisor, never zero
      */
     private static int greatestCommonDivisor(int u, int v) {
+        //if either op. is abs 0 or 1, return 1:
+        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+            return 1;
+        }
         // keep u and v negative, as negative integers range down to
         // -2^31, while positive numbers can only be as large as 2^31-1
         // (i.e. we can't necessarily negate a negative number without
         // overflow)
-        /* assert u!=0 && v!=0; */
         if (u>0) { u=-u; } // make u negative
         if (v>0) { v=-v; } // make v negative
         // B1. [Find power of 2]
