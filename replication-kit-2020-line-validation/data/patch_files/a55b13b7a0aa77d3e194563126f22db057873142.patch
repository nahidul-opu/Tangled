From a55b13b7a0aa77d3e194563126f22db057873142 Mon Sep 17 00:00:00 2001
From: Ate Douma <ate@apache.org>
Date: Sun, 17 Dec 2017 23:52:45 +0100
Subject: [PATCH] SCXML-275 <content> expression evaluation must fallback to
 empty string on error, see SCXML specification 5.6.2

---
 .../org/apache/commons/scxml2/model/Final.java   | 13 ++++++++++++-
 .../org/apache/commons/scxml2/model/Invoke.java  | 11 ++++++++++-
 .../org/apache/commons/scxml2/model/Send.java    | 16 +++++++++++++++-
 3 files changed, 37 insertions(+), 3 deletions(-)

diff --git a/src/main/java/org/apache/commons/scxml2/model/Final.java b/src/main/java/org/apache/commons/scxml2/model/Final.java
index 28a8063cd..04aaa1676 100644
--- a/src/main/java/org/apache/commons/scxml2/model/Final.java
+++ b/src/main/java/org/apache/commons/scxml2/model/Final.java
@@ -90,7 +90,18 @@ public Object processDoneData(SCXMLExecutionContext exctx) throws ModelException
                 Context ctx = exctx.getScInstance().getGlobalContext();
                 if (content != null) {
                     if (content.getExpr() != null) {
-                        result = eval.cloneData(eval.eval(ctx, content.getExpr()));
+                        Object evalResult = null;
+                        try {
+                            evalResult = eval.eval(ctx, content.getExpr());
+                        } catch (SCXMLExpressionException e) {
+                            exctx.getInternalIOProcessor().addEvent(new EventBuilder(TriggerEvent.ERROR_EXECUTION,
+                                    TriggerEvent.ERROR_EVENT).build());
+                            exctx.getErrorReporter().onError(ErrorConstants.EXPRESSION_ERROR,
+                                    "Failed to evaluate <donedata> <content> expression due to error: "+ e.getMessage()
+                                            + ", Using empty value instead.", getParent());
+                            evalResult = "";
+                        }
+                        result = eval.cloneData(evalResult);
                     } else if (content.getValue() != null) {
                         result = content.getValue();
                     }
diff --git a/src/main/java/org/apache/commons/scxml2/model/Invoke.java b/src/main/java/org/apache/commons/scxml2/model/Invoke.java
index b7ccf3788..a4a0d215e 100644
--- a/src/main/java/org/apache/commons/scxml2/model/Invoke.java
+++ b/src/main/java/org/apache/commons/scxml2/model/Invoke.java
@@ -401,7 +401,16 @@ public void execute(final ActionExecutionContext axctx) throws ModelException {
             Object contentValue = null;
             if (src == null && content != null) {
                 if (content.getExpr() != null) {
-                    contentValue = eval.eval(ctx, content.getExpr());
+                    try {
+                        contentValue = eval.eval(ctx, content.getExpr());
+                    } catch (SCXMLExpressionException e) {
+                        exctx.getInternalIOProcessor().addEvent(new EventBuilder(TriggerEvent.ERROR_EXECUTION,
+                                TriggerEvent.ERROR_EVENT).build());
+                        exctx.getErrorReporter().onError(ErrorConstants.EXPRESSION_ERROR,
+                                "Failed to evaluate <invoke> <content> expression due to error: "+ e.getMessage()
+                                        + ", Using empty value instead.", getParent());
+                        contentValue = "";
+                    }
                 } else if (content.getValue() != null) {
                     contentValue = content.getValue();
                 }
diff --git a/src/main/java/org/apache/commons/scxml2/model/Send.java b/src/main/java/org/apache/commons/scxml2/model/Send.java
index 1ff8a7c73..f38a0b4f2 100644
--- a/src/main/java/org/apache/commons/scxml2/model/Send.java
+++ b/src/main/java/org/apache/commons/scxml2/model/Send.java
@@ -24,9 +24,12 @@
 import org.apache.commons.scxml2.ActionExecutionContext;
 import org.apache.commons.scxml2.Context;
 import org.apache.commons.scxml2.Evaluator;
+import org.apache.commons.scxml2.EventBuilder;
 import org.apache.commons.scxml2.SCXMLExpressionException;
 import org.apache.commons.scxml2.SCXMLIOProcessor;
 import org.apache.commons.scxml2.SCXMLSystemContext;
+import org.apache.commons.scxml2.TriggerEvent;
+import org.apache.commons.scxml2.semantics.ErrorConstants;
 
 /**
  * The class in this SCXML object model that corresponds to the
@@ -431,7 +434,18 @@ public void execute(ActionExecutionContext exctx) throws ModelException, SCXMLEx
         }
         else if (content != null) {
             if (content.getExpr() != null) {
-                payload = eval.cloneData(eval.eval(ctx, content.getExpr()));
+                Object evalResult = null;
+                try {
+                    evalResult = eval.eval(ctx, content.getExpr());
+                } catch (SCXMLExpressionException e) {
+                    exctx.getInternalIOProcessor().addEvent(new EventBuilder(TriggerEvent.ERROR_EXECUTION,
+                            TriggerEvent.ERROR_EVENT).build());
+                    exctx.getErrorReporter().onError(ErrorConstants.EXPRESSION_ERROR,
+                            "Failed to evaluate <send> <content> expression due to error: "+ e.getMessage()
+                                    + ", Using empty value instead.", getParent());
+                    evalResult = "";
+                }
+                payload = eval.cloneData(evalResult);
             } else if (content.getValue() != null) {
                 payload = content.getValue();
             }
