From 2f2698fa5739eba1cdc3bdf8299a754fb98ae871 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Tue, 14 Jun 2016 17:02:22 +0000
Subject: [PATCH] BCEL-243 Type.getType() needs to understand
 TypeVariableSignature(s)

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1748444 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                          |  1 +
 src/main/java/org/apache/bcel/generic/Type.java  | 12 +++++-------
 .../org/apache/bcel/generic/TypeTestCase.java    | 16 ++++++++++++++++
 3 files changed, 22 insertions(+), 7 deletions(-)
 create mode 100644 src/test/java/org/apache/bcel/generic/TypeTestCase.java

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 6693594eb5..4d381cb9fb 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -90,6 +90,7 @@ N.B. The Clirr report shows that there are several incompatible changes which in
  External code should not have been relying on such classes to provide definitions of the constants.
 
 ">
+      <action issue="BCEL-243" type="fix">Type.getType() needs to understand TypeVariableSignature(s)</action>
       <action issue="BCEL-272" type="add">Add constants for Java 9 class file version 53</action>
       <action issue="BCEL-271" type="fix">FCONST pattern does not include FCONST_2</action>
       <action issue="BCEL-264" type="fix">Add missing Node.accept() implementations (ConstantMethodHandle, ConstantMethodType, ParameterAnnotationEntry)</action>
diff --git a/src/main/java/org/apache/bcel/generic/Type.java b/src/main/java/org/apache/bcel/generic/Type.java
index a05f61010d..fb351b0e6f 100644
--- a/src/main/java/org/apache/bcel/generic/Type.java
+++ b/src/main/java/org/apache/bcel/generic/Type.java
@@ -214,13 +214,11 @@ public static Type getType( final String signature ) throws StringIndexOutOfBoun
             wrap(consumed_chars, _temp);
             return new ArrayType(t, dim);
         } else { // type == T_REFERENCE
-            int index = signature.indexOf(';'); // Look for closing `;'
-            if (index < 0) {
-                throw new ClassFormatException("Invalid signature: " + signature);
-            }
-            //corrected concurrent private static field acess
-            wrap(consumed_chars, index + 1); // "Lblabla;" `L' and `;' are removed
-            return ObjectType.getInstance(signature.substring(1, index).replace('/', '.'));
+            // Utility.signatureToString understands how to parse
+            // generic types.
+            String parsedSignature = Utility.signatureToString(signature, false);
+            wrap(consumed_chars, parsedSignature.length() + 2); // "Lblabla;" `L' and `;' are removed
+            return ObjectType.getInstance(parsedSignature.replace('/', '.'));
         }
     }
 
diff --git a/src/test/java/org/apache/bcel/generic/TypeTestCase.java b/src/test/java/org/apache/bcel/generic/TypeTestCase.java
new file mode 100644
index 0000000000..db5dc2ce7e
--- /dev/null
+++ b/src/test/java/org/apache/bcel/generic/TypeTestCase.java
@@ -0,0 +1,16 @@
+package org.apache.bcel.generic;
+
+import junit.framework.TestCase;
+
+public class TypeTestCase extends TestCase {
+    public void testBCEL243() {
+        // expectedValue = "Ljava/util/Map<TX;Ljava/util/List<TY;>;>;";
+        // The line commented out above is the correct expected value; however,
+        // the constructor for ObjectType is yet another place where BCEL does
+        // not understand generics so we need to substitute the modified value below.
+        String expectedValue = "Ljava/util/Map<X, java/util/List<Y>>;";
+        String actualValue = (Type.getType("Ljava/util/Map<TX;Ljava/util/List<TY;>;>;")).getSignature();
+        assertEquals("Type.getType", expectedValue, actualValue);        
+    }
+
+}
