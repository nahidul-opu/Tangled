From 1930eed89459d1ea726762e362143a5aa2ccaeb4 Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <stefan.bodewig@innoq.com>
Date: Tue, 6 Oct 2015 05:37:28 +0200
Subject: [PATCH] COMPRESS-324 be more lenient when detecting GNU tar
 extensions

---
 src/changes/changes.xml                       |   5 +++++
 .../archivers/tar/TarArchiveEntry.java        |   6 ++----
 .../tar/TarArchiveInputStreamTest.java        |  18 ++++++++++++++++++
 src/test/resources/COMPRESS-324.tar           | Bin 0 -> 10240 bytes
 4 files changed, 25 insertions(+), 4 deletions(-)
 create mode 100644 src/test/resources/COMPRESS-324.tar

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 18c6cf8e926..b6adccf6b7a 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -44,6 +44,11 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
     <release version="1.11" date="not released, yet"
              description="Release 1.11">
+      <action issue="COMPRESS-324" type="fix" date="2015-10-06">
+        TarArchiveOutputStream will now recognize GNU long name and
+        link entries even if the special entry has a different name
+        than GNU tar uses itself.
+      </action>
       <action issue="COMPRESS-321" type="fix" date="2015-08-22">
         ArrayIndexOutOfBoundsException when InfoZIP type 7875 extra
         fields are read from the central directory.
diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
index cdbc80f3b8f..96bb3ee735d 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
@@ -728,8 +728,7 @@ public boolean isGNUSparse() {
      * @return true if this is a long name extension provided by GNU tar
      */
     public boolean isGNULongLinkEntry() {
-        return linkFlag == LF_GNUTYPE_LONGLINK
-            && name.equals(GNU_LONGLINK);
+        return linkFlag == LF_GNUTYPE_LONGLINK;
     }
 
     /**
@@ -738,8 +737,7 @@ public boolean isGNULongLinkEntry() {
      * @return true if this is a long name extension provided by GNU tar
      */
     public boolean isGNULongNameEntry() {
-        return linkFlag == LF_GNUTYPE_LONGNAME
-            && name.equals(GNU_LONGLINK);
+        return linkFlag == LF_GNUTYPE_LONGNAME;
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
index ca53b8b483f..862e02b1e25 100644
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
@@ -256,6 +256,24 @@ public void shouldReadBigGid() throws Exception {
         tis.close();
     }
 
+    /**
+     * @link "https://issues.apache.org/jira/browse/COMPRESS-324"
+     */
+    @Test
+    public void shouldReadGNULongNameEntryWithWrongName() throws Exception {
+        TarArchiveInputStream is = getTestStream("/COMPRESS-324.tar");
+        try {
+            TarArchiveEntry entry = is.getNextTarEntry();
+            assertEquals("1234567890123456789012345678901234567890123456789012345678901234567890"
+                         + "1234567890123456789012345678901234567890123456789012345678901234567890"
+                         + "1234567890123456789012345678901234567890123456789012345678901234567890"
+                         + "1234567890123456789012345678901234567890.txt",
+                         entry.getName());
+        } finally {
+            is.close();
+        }
+    }
+
     private TarArchiveInputStream getTestStream(String name) {
         return new TarArchiveInputStream(
                 TarArchiveInputStreamTest.class.getResourceAsStream(name));
diff --git a/src/test/resources/COMPRESS-324.tar b/src/test/resources/COMPRESS-324.tar
new file mode 100644
index 0000000000000000000000000000000000000000..902fccae468b9c9ab3b0899958f74408cad08d98
GIT binary patch
literal 10240
zcmeIyU5dgm5WsPt_Y^rnowO!#-#mbN2azIzHsD6^_%_nmx}v`Lf%?x&rjrsfzjT`Q
zv;Ju8tHpG-E_;s|QV%Pl;#`mavlPyyT(hoC;Y5uebDYy%w|`-_>4}_X&!0Blhx2Tk
zIh58Zu3dRq)EucXJwB;)pjf!hi-ECj_$%KQWnp*qLX*;G&(FB^_~ltQh&`^IIrP7-
z!?x$OD4iQ?>#Qr{d%1PisGB``kE==jKUpre<?8Z|Q(s;EKQ`@^ic*(%dfH0Yv>T@b
z#QvZADwI|DNjYW&5I_I{1Q0*~0R#|0009ILKmY**5I_I{1Q0*~0R#|0009ILKmdXF
G64(PfErHMg

literal 0
HcmV?d00001

