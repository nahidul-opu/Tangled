From f625d775dc76afa1546233ff1b8dfac4ebbfcd48 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rn=20Kottmann?= <joern@apache.org>
Date: Fri, 29 May 2015 07:38:37 +0000
Subject: [PATCH] OPENNLP-785 Factory is now included in the model

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1682381 13f79535-47bb-0310-9956-ffa450edef68
---
 .../java/opennlp/tools/namefind/NameFinderME.java  |  8 ++++----
 .../tools/namefind/TokenNameFinderModel.java       | 14 +++++++-------
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java b/opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java
index 50fc6b575..4d642bbf4 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java
@@ -355,10 +355,10 @@ else if (TrainerType.EVENT_MODEL_SEQUENCE_TRAINER.equals(trainerType)) {
 
     if (seqModel != null) {
       return new TokenNameFinderModel(languageCode, seqModel, factory.getFeatureGenerator(),
-              factory.getResources(), manifestInfoEntries, factory.getSequenceCodec());
+              factory.getResources(), manifestInfoEntries, factory.getSequenceCodec(), factory);
     } else {
       return new TokenNameFinderModel(languageCode, nameFinderModel, beamSize, factory.getFeatureGenerator(),
-              factory.getResources(), manifestInfoEntries, factory.getSequenceCodec());
+              factory.getResources(), manifestInfoEntries, factory.getSequenceCodec(), factory);
     }
   }
 
@@ -439,10 +439,10 @@ public static TokenNameFinderModel train(String languageCode, String type, Objec
     // depending on which one is not null!
     if (seqModel != null) {
       return new TokenNameFinderModel(languageCode, seqModel, null,
-              resources, manifestInfoEntries, new BioCodec());
+              resources, manifestInfoEntries, new BioCodec(), new TokenNameFinderFactory());
     } else {
       return new TokenNameFinderModel(languageCode, nameFinderModel, beamSize, null,
-              resources, manifestInfoEntries, new BioCodec());
+              resources, manifestInfoEntries, new BioCodec(), new TokenNameFinderFactory());
     }
   }
 
diff --git a/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java b/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java
index c98f5f65b..6bae7bced 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java
@@ -78,8 +78,8 @@ public void serialize(byte[] artifact, OutputStream out) throws IOException {
 
   public TokenNameFinderModel(String languageCode, SequenceClassificationModel<String> nameFinderModel,
       byte[] generatorDescriptor, Map<String, Object> resources, Map<String, String> manifestInfoEntries,
-      SequenceCodec<String> seqCodec) {
-    super(COMPONENT_NAME, languageCode, manifestInfoEntries);
+      SequenceCodec<String> seqCodec, TokenNameFinderFactory factory) {
+    super(COMPONENT_NAME, languageCode, manifestInfoEntries, factory);
 
     init(nameFinderModel, generatorDescriptor, resources, manifestInfoEntries, seqCodec);
 
@@ -90,8 +90,8 @@ public TokenNameFinderModel(String languageCode, SequenceClassificationModel<Str
 
   public TokenNameFinderModel(String languageCode, MaxentModel nameFinderModel, int beamSize,
       byte[] generatorDescriptor, Map<String, Object> resources, Map<String, String> manifestInfoEntries,
-      SequenceCodec<String> seqCodec) {
-    super(COMPONENT_NAME, languageCode, manifestInfoEntries);
+      SequenceCodec<String> seqCodec, TokenNameFinderFactory factory) {
+    super(COMPONENT_NAME, languageCode, manifestInfoEntries, factory);
 
 
     Properties manifest = (Properties) artifactMap.get(MANIFEST_ENTRY);
@@ -108,7 +108,7 @@ public TokenNameFinderModel(String languageCode, MaxentModel nameFinderModel, in
   public TokenNameFinderModel(String languageCode, MaxentModel nameFinderModel,
       byte[] generatorDescriptor, Map<String, Object> resources, Map<String, String> manifestInfoEntries) {
     this(languageCode, nameFinderModel, NameFinderME.DEFAULT_BEAM_SIZE,
-        generatorDescriptor, resources, manifestInfoEntries, new BioCodec());
+        generatorDescriptor, resources, manifestInfoEntries, new BioCodec(), new TokenNameFinderFactory());
   }
 
   public TokenNameFinderModel(String languageCode, MaxentModel nameFinderModel,
@@ -225,12 +225,12 @@ public TokenNameFinderModel updateFeatureGenerator(byte descriptor[]) {
     if (getNameFinderModel() != null) {
       model = new TokenNameFinderModel(getLanguage(), getNameFinderModel(), 1,
           descriptor, Collections.<String, Object>emptyMap(), Collections.<String, String>emptyMap(),
-          getFactory().createSequenceCodec());
+          getFactory().createSequenceCodec(), getFactory());
     }
     else {
       model = new TokenNameFinderModel(getLanguage(), getNameFinderSequenceModel(),
           descriptor, Collections.<String, Object>emptyMap(), Collections.<String, String>emptyMap(),
-          getFactory().createSequenceCodec());
+          getFactory().createSequenceCodec(), getFactory());
     }
 
     model.artifactMap.clear();
