From 0c5de32c657ad3b1e2f2ab6a0949ecc2c354092b Mon Sep 17 00:00:00 2001
From: Simone Tripodi <simonetripodi@apache.org>
Date: Fri, 7 Sep 2012 18:19:16 +0000
Subject: [PATCH] [DIGESTER-167] Groundless 'Circular file inclusion detected'
 exception when including rules XML file - patch submitted by Eugene Fedotov

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/digester/trunk@1382109 13f79535-47bb-0310-9956-ffa450edef68
---
 .../digester3/xmlrules/IncludeRule.java       | 26 ++++++++----
 .../digester3/xmlrules/IncludeTest.java       | 41 +++++++++++++++++--
 .../digester3/xmlrules/testCircularRules.xml  |  2 +-
 .../digester3/xmlrules/testrulesinclude.xml   |  1 +
 src/changes/changes.xml                       |  3 ++
 5 files changed, 61 insertions(+), 12 deletions(-)

diff --git a/core/src/main/java/org/apache/commons/digester3/xmlrules/IncludeRule.java b/core/src/main/java/org/apache/commons/digester3/xmlrules/IncludeRule.java
index ff1de2f50..f5ecbd111 100644
--- a/core/src/main/java/org/apache/commons/digester3/xmlrules/IncludeRule.java
+++ b/core/src/main/java/org/apache/commons/digester3/xmlrules/IncludeRule.java
@@ -21,6 +21,7 @@
 
 import java.net.MalformedURLException;
 import java.net.URL;
+import java.util.Set;
 
 import org.apache.commons.digester3.Rule;
 import org.apache.commons.digester3.binder.RulesBinder;
@@ -92,18 +93,27 @@ public void begin( String namespace, String name, Attributes attributes )
                 }
             }
 
-            if ( memoryRulesBinder.getIncludedFiles().add( xmlRulesResource.toString() ) )
+            Set<String> includedFiles = memoryRulesBinder.getIncludedFiles();
+            String xmlRulesResourceString = xmlRulesResource.toString();
+            if ( includedFiles.add( xmlRulesResourceString ) )
             {
-                install( new FromXmlRulesModule()
+                try
                 {
-
-                    @Override
-                    protected void loadRules()
+                    install( new FromXmlRulesModule()
                     {
-                        loadXMLRules( xmlRulesResource );
-                    }
 
-                } );
+                        @Override
+                        protected void loadRules()
+                        {
+                            loadXMLRules( xmlRulesResource );
+                        }
+
+                    } );
+                }
+                finally
+                {
+                    includedFiles.remove( xmlRulesResourceString );
+                }
             }
             else
             {
diff --git a/core/src/test/java/org/apache/commons/digester3/xmlrules/IncludeTest.java b/core/src/test/java/org/apache/commons/digester3/xmlrules/IncludeTest.java
index c68f3a68f..5de988ad6 100644
--- a/core/src/test/java/org/apache/commons/digester3/xmlrules/IncludeTest.java
+++ b/core/src/test/java/org/apache/commons/digester3/xmlrules/IncludeTest.java
@@ -19,7 +19,6 @@
 package org.apache.commons.digester3.xmlrules;
 
 import static org.apache.commons.digester3.binder.DigesterLoader.newLoader;
-
 import static org.junit.Assert.assertEquals;
 
 import java.io.StringReader;
@@ -52,7 +51,7 @@ protected void configure()
                 public void body( String namespace, String name, String text )
                     throws Exception
                 {
-                    ArrayList<String> stringList = getDigester().peek();
+                    List<String> stringList = getDigester().peek();
                     stringList.add( text );
                 }
 
@@ -66,6 +65,8 @@ public void testBasicInclude()
         throws Exception
     {
         final String rulesXml = "<?xml version='1.0'?>"
+                + "<!DOCTYPE digester-rules PUBLIC \"-//Apache Commons //DTD digester-rules XML V1.0//EN\" "
+                + "\"http://commons.apache.org/digester/dtds/digester-rules-3.0.dtd\">"
                 + "<digester-rules>"
                 + " <pattern value='root/foo'>"
                 + "   <include class='org.apache.commons.digester3.xmlrules.IncludeTest$TestDigesterRulesModule' />"
@@ -84,7 +85,7 @@ protected void loadRules()
                 loadXMLRulesFromText( rulesXml );
             }
 
-        }).newDigester();
+        } ).newDigester();
         digester.push( list );
         digester.parse( new StringReader( xml ) );
 
@@ -92,6 +93,40 @@ protected void loadRules()
         assertEquals( "Entry value", "short", list.get( 0 ) );
     }
 
+    @Test
+    public void testUrlInclude()
+        throws Exception
+    {
+        final String rulesXml = "<?xml version='1.0'?>"
+                + "<!DOCTYPE digester-rules PUBLIC \"-//Apache Commons //DTD digester-rules XML V1.0//EN\" "
+                + "\"http://commons.apache.org/digester/dtds/digester-rules-3.0.dtd\">"
+                + "<digester-rules>"
+                + " <pattern value='root/foo1'>"
+                + "   <include url='classpath:org/apache/commons/digester3/xmlrules/testrulesinclude.xml' />"
+                + " </pattern>"
+                + " <pattern value='root/foo2'>"
+                + "   <include url='classpath:org/apache/commons/digester3/xmlrules/testrulesinclude.xml' />"
+                + " </pattern>"
+                + "</digester-rules>";
+
+        String xml = "<?xml version='1.0' ?><root><foo1><bar><foo value='foo1'/></bar></foo1><foo2><bar><foo value='foo2'/></bar></foo2></root>";
+
+        List<String> list = new ArrayList<String>();
+        Digester digester = newLoader( new FromXmlRulesModule()
+        {
+
+            @Override
+            protected void loadRules()
+            {
+                loadXMLRulesFromText( rulesXml );
+            }
+
+        }).newDigester();
+        digester.push( list );
+        digester.parse( new StringReader( xml ) );
+        assertEquals( "[foo1, foo2]", list.toString() );
+    }
+
     /**
      * Validates that circular includes are detected and result in an exception
      */
diff --git a/core/src/test/resources/org/apache/commons/digester3/xmlrules/testCircularRules.xml b/core/src/test/resources/org/apache/commons/digester3/xmlrules/testCircularRules.xml
index 7bd2d8ad9..adbf6b776 100644
--- a/core/src/test/resources/org/apache/commons/digester3/xmlrules/testCircularRules.xml
+++ b/core/src/test/resources/org/apache/commons/digester3/xmlrules/testCircularRules.xml
@@ -19,7 +19,7 @@
 <!-- Rules to test the DigesterLoader's circular include detection. 
      Attempting to create a digester with these rules should result
      in an exception. -->
-
+<!DOCTYPE digester-rules PUBLIC "-//Apache Commons //DTD digester-rules XML V1.0//EN" "http://commons.apache.org/digester/dtds/digester-rules-3.0.dtd">
 <digester-rules>
   <pattern value="root/foo">
     <object-create-rule classname="org.apache.commons.digester3.xmlrules.ObjectTestImpl" />
diff --git a/core/src/test/resources/org/apache/commons/digester3/xmlrules/testrulesinclude.xml b/core/src/test/resources/org/apache/commons/digester3/xmlrules/testrulesinclude.xml
index 285e92517..f6da97c02 100644
--- a/core/src/test/resources/org/apache/commons/digester3/xmlrules/testrulesinclude.xml
+++ b/core/src/test/resources/org/apache/commons/digester3/xmlrules/testrulesinclude.xml
@@ -15,6 +15,7 @@
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
+<!DOCTYPE digester-rules PUBLIC "-//Apache Commons //DTD digester-rules XML V1.0//EN" "http://commons.apache.org/digester/dtds/digester-rules-3.0.dtd">
 <digester-rules>
   <pattern value="bar">
     <pattern value="foo">
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 01ca24c9f..b30ad4f20 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -26,6 +26,9 @@
     <action dev="simonetripodi" type="fix" issue="DIGESTER-169" due-to="Eugene Fedotov">
       Problem when including rules XML file with "classpath:" URL prefix
     </action>
+    <action dev="simonetripodi" type="fix" issue="DIGESTER-167" due-to="Eugene Fedotov">
+      Groundless "Circular file inclusion detected" exception when including rules XML file
+    </action>
     <action dev="simonetripodi" type="fix" issue="DIGESTER-165" due-to="Dirk Schaube">
       BinderClassLoader does not override getResource
     </action>
