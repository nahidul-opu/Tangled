From 0508270c67e412b6b5026b25254062ce3d6c2dc7 Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Sun, 13 Apr 2014 04:07:20 +0000
Subject: [PATCH] COMPRESS-277 share the buffer used in skip - concurrent
 writes to the buffer won't do any harm as the data is discarded ayway

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1586919 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/compress/utils/IOUtils.java   | 16 +++++++---------
 1 file changed, 7 insertions(+), 9 deletions(-)

diff --git a/src/main/java/org/apache/commons/compress/utils/IOUtils.java b/src/main/java/org/apache/commons/compress/utils/IOUtils.java
index 177d8f2a7a5..8e13f71bd56 100644
--- a/src/main/java/org/apache/commons/compress/utils/IOUtils.java
+++ b/src/main/java/org/apache/commons/compress/utils/IOUtils.java
@@ -32,6 +32,7 @@ public final class IOUtils {
 
     private static final int COPY_BUF_SIZE = 8024;
     private static final int SKIP_BUF_SIZE = 4096;
+    private static final byte[] SKIP_BUF = new byte[SKIP_BUF_SIZE];
 
     /** Private constructor to prevent instantiation of this utility class. */
     private IOUtils(){
@@ -101,16 +102,13 @@ public static long skip(InputStream input, long numToSkip) throws IOException {
             numToSkip -= skipped;
         }
             
-        if (numToSkip > 0) {
-            byte[] skipBuf = new byte[SKIP_BUF_SIZE];
-            while (numToSkip > 0) {
-                int read = readFully(input, skipBuf, 0,
-                                     (int) Math.min(numToSkip, SKIP_BUF_SIZE));
-                if (read < 1) {
-                    break;
-                }
-                numToSkip -= read;
+        while (numToSkip > 0) {
+            int read = readFully(input, SKIP_BUF, 0,
+                                 (int) Math.min(numToSkip, SKIP_BUF_SIZE));
+            if (read < 1) {
+                break;
             }
+            numToSkip -= read;
         }
         return available - numToSkip;
     }
