From 5127ee6b5830003c90f56d60bc67068e09c40f6d Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Tue, 4 Jun 2013 04:22:05 +0000
Subject: [PATCH] COMPRESS-227 return Iterable rather than Iterator in new
 methods

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1489284 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/compress/archivers/zip/ZipFile.java    | 14 +++++++-------
 .../compress/archivers/zip/ZipFileTest.java        |  6 ++----
 2 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
index d1ba9f9ca75..e48184f6bb3 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
@@ -316,14 +316,14 @@ public ZipArchiveEntry getEntry(String name) {
      * the archive's central directory.
      *
      * @param name name of the entry.
-     * @return the Iterator<ZipArchiveEntry> corresponding to the
+     * @return the Iterable<ZipArchiveEntry> corresponding to the
      * given name
      * @since 1.6
      */
-    public Iterator<ZipArchiveEntry> getEntries(String name) {
+    public Iterable<ZipArchiveEntry> getEntries(String name) {
         List<ZipArchiveEntry> entriesOfThatName = nameMap.get(name);
-        return entriesOfThatName != null ? entriesOfThatName.iterator()
-            : Collections.<ZipArchiveEntry>emptyList().iterator();
+        return entriesOfThatName != null ? entriesOfThatName
+            : Collections.<ZipArchiveEntry>emptyList();
     }
 
     /**
@@ -331,17 +331,17 @@ public Iterator<ZipArchiveEntry> getEntries(String name) {
      * appear within the archive.
      *
      * @param name name of the entry.
-     * @return the Iterator<ZipArchiveEntry> corresponding to the
+     * @return the Iterable<ZipArchiveEntry> corresponding to the
      * given name
      * @since 1.6
      */
-    public Iterator<ZipArchiveEntry> getEntriesInPhysicalOrder(String name) {
+    public Iterable<ZipArchiveEntry> getEntriesInPhysicalOrder(String name) {
         ZipArchiveEntry[] entriesOfThatName = new ZipArchiveEntry[0];
         if (nameMap.containsKey(name)) {
             entriesOfThatName = nameMap.get(name).toArray(entriesOfThatName);
             Arrays.sort(entriesOfThatName, OFFSET_COMPARATOR);
         }
-        return Arrays.asList(entriesOfThatName).iterator();
+        return Arrays.asList(entriesOfThatName);
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java
index d93820fafef..3b89be3dd59 100644
--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java
@@ -217,11 +217,9 @@ public void testDuplicateEntry() throws Exception {
         assertNotNull(zf.getInputStream(ze));
 
         int numberOfEntries = 0;
-        for (Iterator<ZipArchiveEntry> it = zf.getEntries("test1.txt");
-             it.hasNext(); ) {
+        for (ZipArchiveEntry entry : zf.getEntries("test1.txt")) {
             numberOfEntries++;
-            ze = it.next();
-            assertNotNull(zf.getInputStream(ze));
+            assertNotNull(zf.getInputStream(entry));
         }
         assertEquals(2, numberOfEntries);
     }
