From f285095abb979676fa480dde8afef8f75fb82080 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Mon, 24 Mar 2008 16:37:44 +0000
Subject: [PATCH] CONFIGURATION-318: Applying changes to configuration2 branch

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/branches/configuration2_experimental@640459 13f79535-47bb-0310-9956-ffa450edef68
---
 .../configuration2/XMLConfiguration.java      |  2 +
 ...estHierarchicalConfigurationXMLReader.java |  3 +-
 .../configuration2/TestXMLConfiguration.java  | 39 +++++++++++++++++++
 xdocs/changes.xml                             |  4 ++
 4 files changed, 47 insertions(+), 1 deletion(-)

diff --git a/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java b/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
index e1cae3a601..2b181d105f 100644
--- a/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/XMLConfiguration.java
@@ -279,6 +279,7 @@ public void setRootElementName(String name)
                     + "cannot be changed when loaded from an XML document!");
         }
         rootElementName = name;
+        getRootNode().setName(name);
     }
 
     /**
@@ -422,6 +423,7 @@ public void initProperties(Document document, boolean elemRefs)
         }
 
         constructHierarchy(getRootNode(), document.getDocumentElement(), elemRefs);
+        getRootNode().setName(document.getDocumentElement().getNodeName());
         if (elemRefs)
         {
             getRootNode().setReference(document.getDocumentElement());
diff --git a/src/test/java/org/apache/commons/configuration2/TestHierarchicalConfigurationXMLReader.java b/src/test/java/org/apache/commons/configuration2/TestHierarchicalConfigurationXMLReader.java
index 700b3d599d..2226637b47 100644
--- a/src/test/java/org/apache/commons/configuration2/TestHierarchicalConfigurationXMLReader.java
+++ b/src/test/java/org/apache/commons/configuration2/TestHierarchicalConfigurationXMLReader.java
@@ -43,6 +43,7 @@ public class TestHierarchicalConfigurationXMLReader extends TestCase
 
     private HierarchicalConfigurationXMLReader parser;
 
+    @Override
     protected void setUp() throws Exception
     {
         XMLConfiguration config =
@@ -62,7 +63,7 @@ public void testParse() throws Exception
         Node root = ((Document) result.getNode()).getDocumentElement();
         JXPathContext ctx = JXPathContext.newContext(root);
 
-        assertEquals("Wrong name of root element", "config", root.getNodeName());
+        assertEquals("Wrong name of root element", "database", root.getNodeName());
         assertEquals("Wrong number of children of root", 1, ctx.selectNodes(
                 "/*").size());
         assertEquals("Wrong number of tables", 2, ctx.selectNodes(
diff --git a/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java b/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
index eb192675ac..2a137ac107 100644
--- a/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/TestXMLConfiguration.java
@@ -1333,6 +1333,45 @@ public void testSaveAfterCreateWithCopyConstructor()
                 .getRootElementName());
     }
 
+    /**
+     * Tests whether the name of the root element is copied when a configuration
+     * is created using the copy constructor.
+     */
+    public void testCopyRootName() throws ConfigurationException
+    {
+        final String rootName = "rootElement";
+        final String xml = "<" + rootName + "><test>true</test></" + rootName
+                + ">";
+        conf.clear();
+        conf.load(new StringReader(xml));
+        XMLConfiguration copy = new XMLConfiguration(conf);
+        assertEquals("Wrong name of root element", rootName, copy
+                .getRootElementName());
+        copy.save(testSaveConf);
+        copy = new XMLConfiguration(testSaveConf);
+        assertEquals("Wrong name of root element after save", rootName, copy
+                .getRootElementName());
+    }
+
+    /**
+     * Tests whether the name of the root element is copied for a configuration
+     * for which not yet a document exists.
+     */
+    public void testCopyRootNameNoDocument() throws ConfigurationException
+    {
+        final String rootName = "rootElement";
+        conf = new XMLConfiguration();
+        conf.setRootElementName(rootName);
+        conf.setProperty("test", Boolean.TRUE);
+        XMLConfiguration copy = new XMLConfiguration(conf);
+        assertEquals("Wrong name of root element", rootName, copy
+                .getRootElementName());
+        copy.save(testSaveConf);
+        copy = new XMLConfiguration(testSaveConf);
+        assertEquals("Wrong name of root element after save", rootName, copy
+                .getRootElementName());
+    }
+
     /**
      * Prepares a configuration object for testing a reload operation.
      *
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 8ef2665602..d20b78e40e 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -66,6 +66,10 @@
     </release>
 
     <release version="1.6" date="in SVN" description="">
+      <action dev="oheger" type="fix" issue="CONFIGURATION-318">
+        When an XMLConfiguration is created using the copy constructor, the name
+        of the root element is now preserved.
+      </action>
       <action dev="oheger" type="fix" issue="CONFIGURATION-316">
         Changing the text of the root element of an XMLConfiguration had no
         effect when the configuration was saved. This has been fixed.
