From 26e61145839e4da47eb83edfba406ceefc0b67bf Mon Sep 17 00:00:00 2001
From: Phil Steitz <phil.steitz@gmail.com>
Date: Tue, 16 Dec 2014 16:49:16 -0700
Subject: [PATCH] Made it clear that NaNs or infinities may yield NaN in moment
 computations.  JIRA: MATH-1146.

---
 .../commons/math3/stat/descriptive/moment/Kurtosis.java       | 4 +++-
 .../apache/commons/math3/stat/descriptive/moment/Mean.java    | 4 +++-
 .../commons/math3/stat/descriptive/moment/ThirdMoment.java    | 4 +++-
 .../commons/math3/stat/descriptive/moment/Variance.java       | 3 ++-
 4 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java b/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
index 166535eac6..be04fbe1f4 100644
--- a/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
+++ b/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
@@ -36,7 +36,9 @@
  * {@link StandardDeviation}</p>
  * <p>
  *  Note that this statistic is undefined for n < 4.  <code>Double.Nan</code>
- *  is returned when there is not sufficient data to compute the statistic.</p>
+ *  is returned when there is not sufficient data to compute the statistic.
+ *  Note that Double.NaN may also be returned if the input includes NaN
+ *  and / or infinite values.</p>
  * <p>
  * <strong>Note that this implementation is not synchronized.</strong> If
  * multiple threads access an instance of this class concurrently, and at least
diff --git a/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java b/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
index 588e9c6668..aac3d78d50 100644
--- a/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
+++ b/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
@@ -50,7 +50,9 @@
  * Sample Means and Variances," Robert F. Ling, Journal of the American
  * Statistical Association, Vol. 69, No. 348 (Dec., 1974), pp. 859-866. </p>
  * <p>
- *  Returns <code>Double.NaN</code> if the dataset is empty.
+ *  Returns <code>Double.NaN</code> if the dataset is empty. Note that
+ *  Double.NaN may also be returned if the input includes NaN and / or infinite
+ *  values.
  * </p>
  * <strong>Note that this implementation is not synchronized.</strong> If
  * multiple threads access an instance of this class concurrently, and at least
diff --git a/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java b/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
index 53142052cb..2c5331dce1 100644
--- a/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
+++ b/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
@@ -38,7 +38,9 @@
  * new value = old value - 3 * (dev/n) * m2 + (n-1) * (n -2) * (dev^3/n^2)</p>
  * <p>
  * Returns <code>Double.NaN</code> if no data values have been added and
- * returns <code>0</code> if there is just one value in the data set.</p>
+ * returns <code>0</code> if there is just one value in the data set.
+ * Note that Double.NaN may also be returned if the input includes NaN
+ * and / or infinite values.</p>
  * <p>
  * <strong>Note that this implementation is not synchronized.</strong> If
  * multiple threads access an instance of this class concurrently, and at least
diff --git a/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java b/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
index c5435a8359..1ba48e9543 100644
--- a/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
+++ b/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
@@ -234,7 +234,8 @@ public double evaluate(final double[] values) throws MathIllegalArgumentExceptio
     /**
      * Returns the variance of the entries in the specified portion of
      * the input array, or <code>Double.NaN</code> if the designated subarray
-     * is empty.
+     * is empty.  Note that Double.NaN may also be returned if the input
+     * includes NaN and / or infinite values.
      * <p>
      * See {@link Variance} for details on the computing algorithm.</p>
      * <p>
