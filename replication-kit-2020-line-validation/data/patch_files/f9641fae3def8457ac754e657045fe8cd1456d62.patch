From f9641fae3def8457ac754e657045fe8cd1456d62 Mon Sep 17 00:00:00 2001
From: Rahul Akolkar <rahul@apache.org>
Date: Tue, 4 Dec 2007 03:56:17 +0000
Subject: [PATCH] SCXML-60 Possible race condition in AsyncTrigger Reported by
 Andy Bailey <andy at hazlorealidad dot com>

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/scxml/trunk@600780 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/scxml/invoke/AsyncTrigger.java    | 12 +++++++++---
 .../commons/scxml/invoke/SimpleSCXMLInvoker.java     |  6 +++---
 2 files changed, 12 insertions(+), 6 deletions(-)

diff --git a/src/main/java/org/apache/commons/scxml/invoke/AsyncTrigger.java b/src/main/java/org/apache/commons/scxml/invoke/AsyncTrigger.java
index 737919de9..2c7392e59 100644
--- a/src/main/java/org/apache/commons/scxml/invoke/AsyncTrigger.java
+++ b/src/main/java/org/apache/commons/scxml/invoke/AsyncTrigger.java
@@ -29,11 +29,11 @@
 class AsyncTrigger implements Runnable {
 
     /** The state machine executor. */
-    private SCXMLExecutor executor;
+    private final SCXMLExecutor executor;
     /** The event(s) to be triggered. */
-    private TriggerEvent[] events;
+    private final TriggerEvent[] events;
     /** The log. */
-    private Log log = LogFactory.getLog(AsyncTrigger.class);
+    private final Log log = LogFactory.getLog(AsyncTrigger.class);
 
     /**
      * Constructor.
@@ -45,6 +45,12 @@ class AsyncTrigger implements Runnable {
         this.executor = executor;
         this.events = new TriggerEvent[1];
         this.events[0] = event;
+    }
+
+    /**
+     * Fire the trigger(s) asynchronously.
+     */
+    public void start() {
         new Thread(this).start();
     }
 
diff --git a/src/main/java/org/apache/commons/scxml/invoke/SimpleSCXMLInvoker.java b/src/main/java/org/apache/commons/scxml/invoke/SimpleSCXMLInvoker.java
index 87633a1ad..303c55c52 100644
--- a/src/main/java/org/apache/commons/scxml/invoke/SimpleSCXMLInvoker.java
+++ b/src/main/java/org/apache/commons/scxml/invoke/SimpleSCXMLInvoker.java
@@ -116,7 +116,7 @@ public void invoke(final String source, final Map params)
         if (executor.getCurrentStatus().isFinal()) {
             TriggerEvent te = new TriggerEvent(eventPrefix + invokeDone,
                 TriggerEvent.SIGNAL_EVENT);
-            new AsyncTrigger(parentSCInstance.getExecutor(), te);
+            new AsyncTrigger(parentSCInstance.getExecutor(), te).start();
         }
     }
 
@@ -137,7 +137,7 @@ public void parentEvents(final TriggerEvent[] evts)
         if (!doneBefore && executor.getCurrentStatus().isFinal()) {
             TriggerEvent te = new TriggerEvent(eventPrefix + invokeDone,
                 TriggerEvent.SIGNAL_EVENT);
-            new AsyncTrigger(parentSCInstance.getExecutor(), te);
+            new AsyncTrigger(parentSCInstance.getExecutor(), te).start();
         }
     }
 
@@ -149,7 +149,7 @@ public void cancel()
         cancelled = true;
         TriggerEvent te = new TriggerEvent(eventPrefix
             + invokeCancelResponse, TriggerEvent.SIGNAL_EVENT);
-        new AsyncTrigger(parentSCInstance.getExecutor(), te);
+        new AsyncTrigger(parentSCInstance.getExecutor(), te).start();
     }
 
 }
