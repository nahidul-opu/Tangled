From 377433e1f1f597513ee130e388c157e529879929 Mon Sep 17 00:00:00 2001
From: William Colen <colen@apache.org>
Date: Sun, 18 Mar 2012 18:55:57 +0000
Subject: [PATCH] OPENNLP-477: Fixed a bug in the why the dictionary was
 created from corpus.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1302198 13f79535-47bb-0310-9956-ffa450edef68
---
 .../namefind/DictionaryNameFinderEvaluatorTest.java   | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java b/opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java
index df2d3642f..2bb6bcc91 100644
--- a/opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java
+++ b/opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java
@@ -26,6 +26,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import opennlp.tools.cmdline.namefind.NameEvaluationErrorListener;
 import opennlp.tools.dictionary.Dictionary;
 import opennlp.tools.util.ObjectStream;
 import opennlp.tools.util.PlainTextByLineStream;
@@ -45,15 +46,15 @@ public void testEvaluator() throws IOException, URISyntaxException {
     DictionaryNameFinder nameFinder = new DictionaryNameFinder(
         createDictionary());
     TokenNameFinderEvaluator evaluator = new TokenNameFinderEvaluator(
-        nameFinder);
+        nameFinder, new NameEvaluationErrorListener());
     ObjectStream<NameSample> sample = createSample();
 
     evaluator.evaluate(sample);
     sample.close();
     FMeasure fmeasure = evaluator.getFMeasure();
 
-    // TODO: why isn't it == 1?
-    assertTrue(fmeasure.getFMeasure() > 0);
+    // TODO: change to F-Measure when fix OPENNLP-471
+    assertTrue(fmeasure.getRecallScore() == 1);
   }
 
   /**
@@ -91,8 +92,8 @@ private static Dictionary createDictionary() throws IOException,
       if (names != null && names.length > 0) {
         String[] toks = sample.getSentence();
         for (Span name : names) {
-          Span[] n = { name };
-          String[] nameToks = Span.spansToStrings(n, toks);
+          String[] nameToks = new String[name.length()];
+          System.arraycopy(toks, name.getStart(), nameToks, 0, name.length());
           entries.add(nameToks);
         }
       }
