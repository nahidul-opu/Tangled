From a5dc7f1e68f735d0f989a10c521bbc0f6c1ef3ae Mon Sep 17 00:00:00 2001
From: Henri Yandell <bayard@apache.org>
Date: Sat, 16 Jan 2010 08:04:40 +0000
Subject: [PATCH] Adding hashCode caching in line with LANG-481

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@899897 13f79535-47bb-0310-9956-ffa450edef68
---
 .../java/org/apache/commons/lang3/Range.java   | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/commons/lang3/Range.java b/src/main/java/org/apache/commons/lang3/Range.java
index 6ede4f7eeff..9344f980b58 100644
--- a/src/main/java/org/apache/commons/lang3/Range.java
+++ b/src/main/java/org/apache/commons/lang3/Range.java
@@ -44,11 +44,17 @@ public final class Range<T> implements Serializable {
      * The minimum value in this range (inclusive).
      */
     private final T minimum;
+
     /**
      * The maximum value in this range (inclusive).
      */
     private final T maximum;
 
+    /**
+     * Cached output hashCode (class is immutable).
+     */
+    private transient int hashCode = 0;
+
     /**
      * Cached output toString (class is immutable).
      */
@@ -324,10 +330,14 @@ public boolean equals(Object obj) {
      */
     @Override
     public int hashCode() {
-        int result = 17;
-        result = 37 * result + getClass().hashCode();
-        result = 37 * result + this.minimum.hashCode();
-        result = 37 * result + this.maximum.hashCode();
+        int result = hashCode;
+        if (hashCode == 0) {
+            result = 17;
+            result = 37 * result + getClass().hashCode();
+            result = 37 * result + this.minimum.hashCode();
+            result = 37 * result + this.maximum.hashCode();
+            hashCode = result;
+        }
         return result;
     }
 
