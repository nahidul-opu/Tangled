From f7c22878b93c292d950cf4728dce177cc73112d8 Mon Sep 17 00:00:00 2001
From: Marc Giger <giger@apache.org>
Date: Mon, 19 May 2014 17:31:01 +0000
Subject: [PATCH] Fix for SANTUARIO-387 - JUnit test
 XMLEncryption11Test.testAESGCMAuthentication() for StAX API fails sometimes

git-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1595967 13f79535-47bb-0310-9956-ffa450edef68
---
 .../input/AbstractDecryptInputProcessor.java   | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/src/main/java/org/apache/xml/security/stax/impl/processor/input/AbstractDecryptInputProcessor.java b/src/main/java/org/apache/xml/security/stax/impl/processor/input/AbstractDecryptInputProcessor.java
index ec94fca372..7a047e3277 100644
--- a/src/main/java/org/apache/xml/security/stax/impl/processor/input/AbstractDecryptInputProcessor.java
+++ b/src/main/java/org/apache/xml/security/stax/impl/processor/input/AbstractDecryptInputProcessor.java
@@ -251,10 +251,12 @@ private XMLSecEvent processEvent(InputProcessorChain inputProcessorChain, boolea
 
                 Thread thread = new Thread(decryptionThread);
                 thread.setPriority(Thread.NORM_PRIORITY + 1);
-                thread.setName("decrypting thread");
+                thread.setName("decryption thread");
                 //when an exception in the decryption thread occurs, we want to forward them:
                 thread.setUncaughtExceptionHandler(decryptedEventReaderInputProcessor);
 
+                decryptedEventReaderInputProcessor.setDecryptionThread(thread);
+
                 //we have to start the thread before we call decryptionThread.getPipedInputStream().
                 //Otherwise we will end in a deadlock, because the StAX reader expects already data.
                 //@See some lines below:
@@ -557,6 +559,7 @@ public abstract class AbstractDecryptedEventReaderInputProcessor
         private final InboundSecurityToken inboundSecurityToken;
         private boolean rootElementProcessed;
         private EncryptedDataType encryptedDataType;
+        private Thread decryptionThread;
 
         public AbstractDecryptedEventReaderInputProcessor(
                 XMLSecurityProperties securityProperties, SecurePart.Modifier encryptionModifier,
@@ -578,6 +581,10 @@ public AbstractDecryptedEventReaderInputProcessor(
             }
         }
 
+        public void setDecryptionThread(Thread decryptionThread) {
+            this.decryptionThread = decryptionThread;
+        }
+
         public void setXmlStreamReader(XMLStreamReader xmlStreamReader) {
             this.xmlStreamReader = xmlStreamReader;
         }
@@ -658,8 +665,13 @@ private XMLSecEvent processEvent(InputProcessorChain inputProcessorChain, boolea
                             xmlSecEvent = inputProcessorChain.processEvent();
                         }
 
-                        //test again for an exception in the decryption thread.
-                        //todo: Thread.join()...
+                        //wait until the decryption thread dies...
+                        try {
+                            decryptionThread.join();
+                        } catch (InterruptedException e) {
+                            throw new XMLStreamException(e);
+                        }
+                        //...and test again for an exception in the decryption thread.
                         testAndThrowUncaughtException();
                         inputProcessorChain.removeProcessor(this);
                     }
