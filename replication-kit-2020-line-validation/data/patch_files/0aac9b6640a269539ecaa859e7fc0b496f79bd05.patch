From 0aac9b6640a269539ecaa859e7fc0b496f79bd05 Mon Sep 17 00:00:00 2001
From: Mark Thomas <markt@apache.org>
Date: Wed, 18 Feb 2009 18:30:14 +0000
Subject: [PATCH] Attempt to address DBCP-272. We can never truely fix this
 since the way drivers are expected to register with the DriverManager is
 asking for a deadlock to occur in multi-thread environments - as per
 DBCP-272. What we can do is attempt to prevent this in environments where
 only DBCP is used. This patch calls DriverManager.getDrivers() to force
 initialisation before we ever do anything that might use Class.forName() to
 load (and register) a JDBC driver.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/dbcp/trunk@745594 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/commons/dbcp/BasicDataSource.java        | 5 +++++
 .../apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java   | 5 +++++
 2 files changed, 10 insertions(+)

diff --git a/src/java/org/apache/commons/dbcp/BasicDataSource.java b/src/java/org/apache/commons/dbcp/BasicDataSource.java
index 02c5659dd8..d55d29680f 100644
--- a/src/java/org/apache/commons/dbcp/BasicDataSource.java
+++ b/src/java/org/apache/commons/dbcp/BasicDataSource.java
@@ -42,6 +42,11 @@
  * @version $Revision$ $Date$
  */
 public class BasicDataSource implements DataSource {
+    
+    static {
+        // Attempt to prevent deadlocks - see DBCP - 272
+        DriverManager.getDrivers();
+    }
 
     // ------------------------------------------------------------- Properties
 
diff --git a/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java b/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java
index a7fb85d66b..e608411db2 100644
--- a/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java
+++ b/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java
@@ -118,6 +118,11 @@ public class DriverAdapterCPDS
 
     private boolean getConnectionCalled = false;
 
+    static {
+        // Attempt to prevent deadlocks - see DBCP - 272
+        DriverManager.getDrivers();
+    }
+
     /**
      * Default no-arg constructor for Serialization
      */
