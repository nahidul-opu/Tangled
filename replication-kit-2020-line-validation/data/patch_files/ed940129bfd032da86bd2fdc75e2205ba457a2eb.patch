From ed940129bfd032da86bd2fdc75e2205ba457a2eb Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Wed, 25 Jan 2006 15:23:16 +0000
Subject: [PATCH] FIX: problem resolving dependencies when 2 module versions
 have different configurations (IVY-151)

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@484176 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                      |  1 +
 src/java/fr/jayasoft/ivy/IvyNode.java            | 16 +++++++++++++---
 test/java/fr/jayasoft/ivy/ResolveTest.java       | 10 ++++++++++
 test/repositories/multirevisions/ivy.xml         | 16 ++++++++++++++++
 .../multirevisions/ivy/moduleX-1.0.xml           |  8 ++++++++
 .../multirevisions/ivy/moduleX-2.0.xml           | 11 +++++++++++
 .../multirevisions/ivy/moduleZ-1.0.xml           | 14 ++++++++++++++
 test/repositories/multirevisions/ivyconf.xml     |  9 +++++++++
 .../multirevisions/jars/moduleX-1.0.jar          |  1 +
 .../multirevisions/jars/moduleX-2.0.jar          |  1 +
 .../multirevisions/jars/moduleZ-1.0.jar          |  1 +
 11 files changed, 85 insertions(+), 3 deletions(-)
 create mode 100644 test/repositories/multirevisions/ivy.xml
 create mode 100644 test/repositories/multirevisions/ivy/moduleX-1.0.xml
 create mode 100644 test/repositories/multirevisions/ivy/moduleX-2.0.xml
 create mode 100644 test/repositories/multirevisions/ivy/moduleZ-1.0.xml
 create mode 100644 test/repositories/multirevisions/ivyconf.xml
 create mode 100644 test/repositories/multirevisions/jars/moduleX-1.0.jar
 create mode 100644 test/repositories/multirevisions/jars/moduleX-2.0.jar
 create mode 100644 test/repositories/multirevisions/jars/moduleZ-1.0.jar

diff --git a/CHANGES.txt b/CHANGES.txt
index 050488a59..40bd42bfe 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -42,6 +42,7 @@ compatiblity with previous version:
 - IMPROVE: better error message when publish fails due to readonly destination (IVY-83)
 - IMPROVE: some javadoc improvements (IVY-136 IVY-129) (thanks to Stephen Nesbitt)
 
+- FIX: problem resolving dependencies when 2 module versions have different configurations (IVY-151)
 - FIX: problem with inheritance between public and private conf (IVY-149)
 - FIX: no variable replacement during the deliver step (IVY-133)
 - FIX: conflict badly solved in some complex cases (IVY-130)
diff --git a/src/java/fr/jayasoft/ivy/IvyNode.java b/src/java/fr/jayasoft/ivy/IvyNode.java
index 53872a788..3c9eeda47 100644
--- a/src/java/fr/jayasoft/ivy/IvyNode.java
+++ b/src/java/fr/jayasoft/ivy/IvyNode.java
@@ -604,7 +604,11 @@ private boolean handleConfiguration(boolean loaded, String conf, boolean shouldB
                 Configuration c = _md.getConfiguration(confs[i]);
                 if (c == null) {
                     _confsToFetch.remove(conf);
-                    _problem = new RuntimeException("configuration(s) not found in "+this+": "+confs[i]+". It was required from "+getParent()+" "+getParentConf());
+                    if (!conf.equals(confs[i])) {
+                        _problem = new RuntimeException("configuration(s) not found in "+this+": "+conf+". Missing configuration: "+confs[i]+". It was required from "+getParent()+" "+getParentConf());
+                    } else {
+                        _problem = new RuntimeException("configuration(s) not found in "+this+": "+confs[i]+". It was required from "+getParent()+" "+getParentConf());
+                    }
                     _data.getReport().addDependency(this);
                     return false;
                 } else if (shouldBePublic && !isRoot() && c.getVisibility() != Configuration.Visibility.PUBLIC) {
@@ -614,7 +618,7 @@ private boolean handleConfiguration(boolean loaded, String conf, boolean shouldB
                     return false;
                 }
                 if (loaded) {
-                    _fetchedConfigurations.addAll(Arrays.asList(confs));
+                    _fetchedConfigurations.add(conf);
                     _confsToFetch.removeAll(Arrays.asList(confs));
                     _confsToFetch.remove(conf);
                 }
@@ -1221,8 +1225,14 @@ public EvictionData getEvictionDataInRoot(String rootModuleConf, IvyNode parent)
 
     public static IvyNode getRoot(IvyNode parent) {
         IvyNode root = parent;
-        while (root.getParent() != null) {
+        Collection path = new HashSet();
+        path.add(root);
+        while (root.getParent() != null && !root.isRoot()) {
+            if (path.contains(root.getParent())) {
+                return root;
+            }
             root = root.getParent();
+            path.add(root);
         }
         return root;
     }
diff --git a/test/java/fr/jayasoft/ivy/ResolveTest.java b/test/java/fr/jayasoft/ivy/ResolveTest.java
index 669883183..2466b9542 100644
--- a/test/java/fr/jayasoft/ivy/ResolveTest.java
+++ b/test/java/fr/jayasoft/ivy/ResolveTest.java
@@ -1325,6 +1325,16 @@ public void testNamespaceMapping4() throws Exception {
         assertTrue(report.hasError());
     }
     
+    public void testIVY151() throws Exception {
+        Ivy ivy = new Ivy();
+        ivy.configure(new File("test/repositories/multirevisions/ivyconf.xml"));
+        ResolveReport report = ivy.resolve(new File("test/repositories/multirevisions/ivy.xml").toURL(), null, new String[] {"compile", "test"}, _cache, null, true);
+
+        assertNotNull(report);
+        assertNotNull(report.getUnresolvedDependencies());
+        assertEquals("Number of unresolved dependencies not correct", 0, report.getUnresolvedDependencies().length);
+    }
+
     ////////////////////////////////////////////////////////////
     // helper methods to ease the tests
     ////////////////////////////////////////////////////////////
diff --git a/test/repositories/multirevisions/ivy.xml b/test/repositories/multirevisions/ivy.xml
new file mode 100644
index 000000000..6e0a4d239
--- /dev/null
+++ b/test/repositories/multirevisions/ivy.xml
@@ -0,0 +1,16 @@
+<ivy-module version="1.0">
+	<info organisation="TEST"
+	       module="moduleY"
+	       revision="1.0"
+	       status="integration"
+	       publication="20050501110000"
+	/>
+  <configurations>
+    <conf name="compile" visibility="public"/>
+    <conf name="test" visibility="private" extends="compile"/>
+  </configurations>
+  <dependencies>
+    <dependency name="moduleX" rev="1+" conf="compile->compile(default)"/>
+    <dependency name="moduleZ" rev="1.0" conf="test->compile(default)" />
+  </dependencies>
+</ivy-module>
diff --git a/test/repositories/multirevisions/ivy/moduleX-1.0.xml b/test/repositories/multirevisions/ivy/moduleX-1.0.xml
new file mode 100644
index 000000000..3e8cd6ac6
--- /dev/null
+++ b/test/repositories/multirevisions/ivy/moduleX-1.0.xml
@@ -0,0 +1,8 @@
+<ivy-module version="1.0">
+	<info organisation="TEST"
+	       module="moduleX"
+	       revision="1.0"
+	       status="integration"
+	       publication="20050501110000"
+	/>
+</ivy-module>
diff --git a/test/repositories/multirevisions/ivy/moduleX-2.0.xml b/test/repositories/multirevisions/ivy/moduleX-2.0.xml
new file mode 100644
index 000000000..7fbed9e3e
--- /dev/null
+++ b/test/repositories/multirevisions/ivy/moduleX-2.0.xml
@@ -0,0 +1,11 @@
+<ivy-module version="1.0">
+	<info organisation="TEST"
+	       module="moduleX"
+	       revision="2.0"
+	       status="integration"
+	       publication="20050501110000"
+	/>
+  <configurations>
+    <conf name="compile" visibility="public"/>
+  </configurations>
+</ivy-module>
diff --git a/test/repositories/multirevisions/ivy/moduleZ-1.0.xml b/test/repositories/multirevisions/ivy/moduleZ-1.0.xml
new file mode 100644
index 000000000..02b47a53e
--- /dev/null
+++ b/test/repositories/multirevisions/ivy/moduleZ-1.0.xml
@@ -0,0 +1,14 @@
+<ivy-module version="1.0">
+	<info organisation="TEST"
+	       module="moduleZ"
+	       revision="1.0"
+	       status="integration"
+	       publication="20050501110000"
+	/>
+  <configurations>
+    <conf name="compile" visibility="public"/>
+  </configurations>
+  <dependencies>
+    <dependency name="moduleX" rev="2.0" conf="compile->compile(default)"/>
+  </dependencies>
+</ivy-module>
diff --git a/test/repositories/multirevisions/ivyconf.xml b/test/repositories/multirevisions/ivyconf.xml
new file mode 100644
index 000000000..0cfd0e521
--- /dev/null
+++ b/test/repositories/multirevisions/ivyconf.xml
@@ -0,0 +1,9 @@
+<ivyconf>
+    <conf defaultResolver="LOCAL" />
+    <resolvers>
+        <filesystem name="LOCAL">
+            <ivy pattern="${ivy.conf.dir}/ivy/[module]-[revision].xml" />
+            <artifact pattern="${ivy.conf.dir}/jars/[artifact]-[revision].[ext]" />
+        </filesystem>
+    </resolvers>
+</ivyconf>
diff --git a/test/repositories/multirevisions/jars/moduleX-1.0.jar b/test/repositories/multirevisions/jars/moduleX-1.0.jar
new file mode 100644
index 000000000..56f3b36e2
--- /dev/null
+++ b/test/repositories/multirevisions/jars/moduleX-1.0.jar
@@ -0,0 +1 @@
+ 
diff --git a/test/repositories/multirevisions/jars/moduleX-2.0.jar b/test/repositories/multirevisions/jars/moduleX-2.0.jar
new file mode 100644
index 000000000..56f3b36e2
--- /dev/null
+++ b/test/repositories/multirevisions/jars/moduleX-2.0.jar
@@ -0,0 +1 @@
+ 
diff --git a/test/repositories/multirevisions/jars/moduleZ-1.0.jar b/test/repositories/multirevisions/jars/moduleZ-1.0.jar
new file mode 100644
index 000000000..56f3b36e2
--- /dev/null
+++ b/test/repositories/multirevisions/jars/moduleZ-1.0.jar
@@ -0,0 +1 @@
+ 
