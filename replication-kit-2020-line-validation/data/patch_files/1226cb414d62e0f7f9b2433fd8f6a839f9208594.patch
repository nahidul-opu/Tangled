From 1226cb414d62e0f7f9b2433fd8f6a839f9208594 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Tue, 8 Mar 2011 22:22:04 +0000
Subject: [PATCH] NET-364 nntp.Article is very inefficient and incorrect.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1079579 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  3 ++
 .../org/apache/commons/net/nntp/Article.java  | 36 +++++++++----------
 2 files changed, 20 insertions(+), 19 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 4a7ca550e..e01d61e8a 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -57,6 +57,9 @@ The <action> type attribute can be add,update,fix,remove.
 
     <body>
         <release version="3.0" date="TBA" description="TBA">
+            <action issue="NET-364" dev="sebb" type="fix">
+            nntp.Article is very inefficient and incorrect.
+            </action>
             <action issue="NET-314" dev="sebb" type="add" due-to="Bogdan Drozdowski" due-to-email="bogdandr # op . pl">
             The FTP client should autodetect the control encoding.
             </action>
diff --git a/src/main/java/org/apache/commons/net/nntp/Article.java b/src/main/java/org/apache/commons/net/nntp/Article.java
index 9472d26a7..c3d6fffc6 100644
--- a/src/main/java/org/apache/commons/net/nntp/Article.java
+++ b/src/main/java/org/apache/commons/net/nntp/Article.java
@@ -18,13 +18,12 @@
 package org.apache.commons.net.nntp;
 
 import java.util.ArrayList;
-import java.util.StringTokenizer;
+import java.util.Arrays;
 
 /**
  * This is a class that contains the basic state needed for message retrieval and threading.
  * With thanks to Jamie  Zawinski <jwz@jwz.org>
  * @author rwinston <rwinston@apache.org>
- *
  */
 public class Article implements Threadable {
     private int articleNumber;
@@ -34,7 +33,7 @@ public class Article implements Threadable {
     private String simplifiedSubject;
     private String from;
     private StringBuffer header;
-    private StringBuffer references;
+    private ArrayList<String> references;
     private boolean isReply = false;
     
     public Article kid, next;
@@ -60,12 +59,16 @@ public void addHeaderField(String name, String val) {
      * @param msgId
      */
     public void addReference(String msgId) {
+        if (msgId == null || msgId.length() == 0) {
+            return;
+        }
         if (references == null) {
-            references = new StringBuffer();
-            references.append("References: ");
+            references = new ArrayList<String>();
+        }
+        isReply = true;
+        for(String s : msgId.split(" ")) {
+            references.add(s);            
         }
-        references.append(msgId);
-        references.append("\t");
     }
 
     /**
@@ -73,16 +76,10 @@ public void addReference(String msgId) {
      * @return an array of message-ids
      */
     public String[] getReferences() {
-        if (references == null)
+        if (references == null) {
             return new String[0];
-        ArrayList<String> list = new ArrayList<String>();
-        int terminator = references.toString().indexOf(':');
-        StringTokenizer st =
-            new StringTokenizer(references.substring(terminator), "\t");
-        while (st.hasMoreTokens()) {
-            list.add(st.nextToken());
         }
-        return list.toArray(new String[list.size()]);
+        return references.toArray(new String[references.size()]);
     }
     
     /**
@@ -111,7 +108,6 @@ private void simplifySubject() {
 
                     if (subject.charAt(start + 2) == ':') {
                         start += 3; // Skip "Re:"
-                        isReply = true;
                         done = false;
                     } else if (
                         start < (len - 2) 
@@ -127,7 +123,6 @@ private void simplifySubject() {
                             && (subject.charAt(i) == ']' || subject.charAt(i) == ')')
                             && subject.charAt(i + 1) == ':') {
                             start = i + 2;
-                            isReply = true;
                             done = false;
                         }
                     }
@@ -225,8 +220,6 @@ public String simplifiedSubject() {
 
     
     public boolean subjectIsReply() {
-        if(simplifiedSubject == null)
-            simplifySubject();
         return isReply;
     }
 
@@ -250,4 +243,9 @@ public void setNext(Threadable next) {
     public Threadable makeDummy() {
         return new Article();
     }
+    
+    @Override
+    public String toString(){ // Useful for Eclipse debugging
+        return articleNumber + " " +articleId + " " + subject;
+    }
 }
