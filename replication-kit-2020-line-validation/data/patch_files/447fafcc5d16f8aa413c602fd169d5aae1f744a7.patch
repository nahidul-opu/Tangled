From 447fafcc5d16f8aa413c602fd169d5aae1f744a7 Mon Sep 17 00:00:00 2001
From: Colm O Heigeartaigh <coheigea@apache.org>
Date: Fri, 16 Mar 2012 10:17:56 +0000
Subject: [PATCH] [SANTUARIO-301] - Missing KeyInfo element when encrypting
 multiple elements

git-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/branches/1.4.x-fixes@1301416 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGELOG.txt                                 |  1 +
 .../xml/security/encryption/XMLCipher.java    |  4 +-
 .../test/encryption/EncryptContentTest.java   | 45 +++++++++++++++++++
 3 files changed, 48 insertions(+), 2 deletions(-)

diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 0acaa2f3e1..2d823a8f59 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,6 +1,7 @@
 Changelog for "Apache xml-security" <http://santuario.apache.org/>
 
 New in v.1.4.7-SNAPSHOT:
+    Fixed SANTUARIO-301 - Missing KeyInfo element when encrypting multiple elements.
     Fixed SANTUARIO-299: StringIndexOutOfBoundsException is thrown during reference verification (if URI = "#")
     Fixed SANTUARIO-295: XMLDSig XPathFilter2Transform bug involving intersect filter
     Fixed SANTUARIO-286: Test case Santuario273.testC14n11Base() tests for a side-effect of canonicalization, rather than the desired effect.
diff --git a/src/org/apache/xml/security/encryption/XMLCipher.java b/src/org/apache/xml/security/encryption/XMLCipher.java
index 77e81ee36a..6eac1f8aef 100644
--- a/src/org/apache/xml/security/encryption/XMLCipher.java
+++ b/src/org/apache/xml/security/encryption/XMLCipher.java
@@ -3048,7 +3048,7 @@ Element toElement() {
                         super.getEncryptionMethod()).toElement());
                 }
                 if (null != super.getKeyInfo()) {
-                    result.appendChild(super.getKeyInfo().getElement());
+                    result.appendChild(super.getKeyInfo().getElement().cloneNode(true));
                 }
 
                 result.appendChild(
@@ -3185,7 +3185,7 @@ Element toElement() {
                         super.getEncryptionMethod()).toElement());
                 }
                 if (null != super.getKeyInfo()) {
-                    result.appendChild(super.getKeyInfo().getElement());
+                    result.appendChild(super.getKeyInfo().getElement().cloneNode(true));
                 }
                 result.appendChild(
                     ((CipherDataImpl) super.getCipherData()).toElement());
diff --git a/src_unitTests/org/apache/xml/security/test/encryption/EncryptContentTest.java b/src_unitTests/org/apache/xml/security/test/encryption/EncryptContentTest.java
index e6704d0f59..44657c4d92 100644
--- a/src_unitTests/org/apache/xml/security/test/encryption/EncryptContentTest.java
+++ b/src_unitTests/org/apache/xml/security/test/encryption/EncryptContentTest.java
@@ -33,7 +33,10 @@
 import org.w3c.dom.NodeList;
 
 import org.apache.xml.security.algorithms.JCEMapper;
+import org.apache.xml.security.encryption.EncryptedData;
 import org.apache.xml.security.encryption.XMLCipher;
+import org.apache.xml.security.keys.KeyInfo;
+import org.apache.xml.security.utils.Constants;
 
 import junit.framework.Test;
 import junit.framework.TestCase;
@@ -54,6 +57,18 @@ public class EncryptContentTest extends TestCase {
         "    <serial>Y10</serial>\n" +
 	"  </user>\n" +
 	"</users>\n";
+    
+    private static final String MULTIPLE_USER_DATA =
+            "<users>\n" +
+            "  <user>\n" +
+            "    <firstname>Bugs</firstname>\n" +
+            "    <lastname>Bunny</lastname>\n" +
+            "  </user>\n" +
+            "  <user>\n" +
+            "    <firstname>Daffy</firstname>\n" +
+            "    <lastname>Duck</lastname>\n" +
+            "  </user>\n" +
+            "</users>\n";
 
     private DocumentBuilder db;
     private SecretKey secretKey;
@@ -141,4 +156,34 @@ public void testContentRemoved() throws Exception {
 
 	// t.transform(new DOMSource(doc), new StreamResult(System.out));
     }
+    
+    /**
+     * See SANTUARIO-301:
+     * https://issues.apache.org/jira/browse/SANTUARIO-301
+     */
+    public void testMultipleKeyInfoElements() throws Exception {
+        if (!haveISOPadding) {
+            log.warn("Test testMultipleKeyInfoElements skipped as necessary algorithms not available");
+            return;
+        }
+
+        Document doc = db.parse(new ByteArrayInputStream(MULTIPLE_USER_DATA.getBytes("UTF8")));
+        NodeList dataToEncrypt = doc.getElementsByTagName("user");
+
+        XMLCipher dataCipher = XMLCipher.getInstance(XMLCipher.TRIPLEDES);
+        dataCipher.init(XMLCipher.ENCRYPT_MODE, secretKey);
+
+        KeyInfo keyInfo = new KeyInfo(doc);
+        keyInfo.addKeyName("mykey");
+
+        EncryptedData encryptedData = dataCipher.getEncryptedData();
+        encryptedData.setKeyInfo(keyInfo);
+        
+        for (int i = 0; i < dataToEncrypt.getLength(); i++) {
+            dataCipher.doFinal(doc,(Element) dataToEncrypt.item(i), true);
+        }
+
+        NodeList keyInfoList = doc.getElementsByTagNameNS(Constants.SignatureSpecNS, "KeyInfo");
+        assertEquals(keyInfoList.getLength(), 2);
+    }
 }
