From 55dc75d3e2f6bc0d31aad63d95be9776becfa87f Mon Sep 17 00:00:00 2001
From: Ryan Blue <blue@apache.org>
Date: Fri, 6 Jan 2017 11:47:02 -0800
Subject: [PATCH] PARQUET-348: Minor fixes for PARQUET-348 (other changes
 removed).

PARQUET-348:
shouldIgnoreStatistics too noisy
This is just a case of way over logging something, to the point that it
make the logs unreadable

Author: Alex Levenson <alexlevenson@twitter.com>

Closes #252 from isnotinvain/alexlevenson/various-fixes and squashes the
following commits:

9b5cb0e [Alex Levenson] Add comments, cleanup some minor use of
ThriftSchemaConverter
376343e [Alex Levenson] Fix test
d9d5dad [Alex Levenson] add license headers
e26dc0c [Alex Levenson] Add tests
8d9dde0 [Alex Levenson] Fixes for PARQUET-350, PARQUET-348, PARQUET-346,
PARQUET-345
---
 .../org/apache/parquet/CorruptStatistics.java | 27 +++++++++++++------
 1 file changed, 19 insertions(+), 8 deletions(-)

diff --git a/parquet-column/src/main/java/org/apache/parquet/CorruptStatistics.java b/parquet-column/src/main/java/org/apache/parquet/CorruptStatistics.java
index e2b8114e20..bf9db8150c 100644
--- a/parquet-column/src/main/java/org/apache/parquet/CorruptStatistics.java
+++ b/parquet-column/src/main/java/org/apache/parquet/CorruptStatistics.java
@@ -22,6 +22,7 @@
 import org.apache.parquet.VersionParser.ParsedVersion;
 import org.apache.parquet.VersionParser.VersionParseException;
 import org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName;
+import java.util.concurrent.atomic.AtomicBoolean;
 
 /**
  * There was a bug (PARQUET-251) that caused the statistics metadata
@@ -33,6 +34,8 @@
 public class CorruptStatistics {
   private static final Log LOG = Log.getLog(CorruptStatistics.class);
 
+  private static final AtomicBoolean alreadyLogged = new AtomicBoolean(false);
+
   // the version in which the bug described by jira: PARQUET-251 was fixed
   // the bug involved writing invalid binary statistics, so stats written prior to this
   // fix must be ignored / assumed invalid
@@ -52,7 +55,7 @@ public static boolean shouldIgnoreStatistics(String createdBy, PrimitiveTypeName
     if (Strings.isNullOrEmpty(createdBy)) {
       // created_by is not populated, which could have been caused by
       // parquet-mr during the same time as PARQUET-251, see PARQUET-297
-      LOG.info("Ignoring statistics because created_by is null or empty! See PARQUET-251 and PARQUET-297");
+      warnOnce("Ignoring statistics because created_by is null or empty! See PARQUET-251 and PARQUET-297");
       return true;
     }
 
@@ -65,14 +68,14 @@ public static boolean shouldIgnoreStatistics(String createdBy, PrimitiveTypeName
       }
 
       if (Strings.isNullOrEmpty(version.version)) {
-        LOG.warn("Ignoring statistics because created_by did not contain a semver (see PARQUET-251): " + createdBy);
+        warnOnce("Ignoring statistics because created_by did not contain a semver (see PARQUET-251): " + createdBy);
         return true;
       }
 
       SemanticVersion semver = SemanticVersion.parse(version.version);
 
       if (semver.compareTo(PARQUET_251_FIXED_VERSION) < 0) {
-        LOG.info("Ignoring statistics because this file was created prior to "
+        warnOnce("Ignoring statistics because this file was created prior to "
             + PARQUET_251_FIXED_VERSION
             + ", see PARQUET-251" );
         return true;
@@ -83,22 +86,30 @@ public static boolean shouldIgnoreStatistics(String createdBy, PrimitiveTypeName
     } catch (RuntimeException e) {
       // couldn't parse the created_by field, log what went wrong, don't trust the stats,
       // but don't make this fatal.
-      warnParseError(createdBy, e);
+      warnParseErrorOnce(createdBy, e);
       return true;
     } catch (SemanticVersionParseException e) {
       // couldn't parse the created_by field, log what went wrong, don't trust the stats,
       // but don't make this fatal.
-      warnParseError(createdBy, e);
+      warnParseErrorOnce(createdBy, e);
       return true;
     } catch (VersionParseException e) {
       // couldn't parse the created_by field, log what went wrong, don't trust the stats,
       // but don't make this fatal.
-      warnParseError(createdBy, e);
+      warnParseErrorOnce(createdBy, e);
       return true;
     }
   }
 
-  private static void warnParseError(String createdBy, Throwable e) {
-    LOG.warn("Ignoring statistics because created_by could not be parsed (see PARQUET-251): " + createdBy, e);
+  private static void warnParseErrorOnce(String createdBy, Throwable e) {
+    if(!alreadyLogged.getAndSet(true)) {
+      LOG.warn("Ignoring statistics because created_by could not be parsed (see PARQUET-251): " + createdBy, e);
+    }
+  }
+
+  private static void warnOnce(String message) {
+    if(!alreadyLogged.getAndSet(true)) {
+      LOG.warn(message);
+    }
   }
 }
