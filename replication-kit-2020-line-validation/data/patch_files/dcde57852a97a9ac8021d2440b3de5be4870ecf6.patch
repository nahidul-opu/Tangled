From dcde57852a97a9ac8021d2440b3de5be4870ecf6 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 30 May 2013 22:12:41 +0000
Subject: [PATCH] LANG-879 LocaleUtils test fails with new Locale
 "ja_JP_JP_#u-ca-japanese" of JDK7

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1488038 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  1 +
 .../org/apache/commons/lang3/LocaleUtils.java |  3 ++
 .../apache/commons/lang3/LocaleUtilsTest.java | 39 ++++++++++++++++++-
 3 files changed, 42 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 01867e705d8..bf6b3fec26b 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,7 @@
   <body>
 
   <release version="3.2" date="TBA" description="Next release">
+    <action issue="LANG-879" type="fix">LocaleUtils test fails with new Locale "ja_JP_JP_#u-ca-japanese" of JDK7</action>
     <action issue="LANG-836" type="fix" due-to="Arnaud Brunet">StrSubstitutor does not support StringBuilder or CharSequence</action>
     <action issue="LANG-693" type="fix" due-to="Calvin Echols">Method createNumber from NumberUtils doesn't work for floating point numbers other than Float</action>
     <action issue="LANG-887" type="fix">FastDateFormat does not use the locale specific cache correctly</action>
diff --git a/src/main/java/org/apache/commons/lang3/LocaleUtils.java b/src/main/java/org/apache/commons/lang3/LocaleUtils.java
index 8a1203a0c23..fab00c5bb30 100644
--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java
+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java
@@ -89,6 +89,9 @@ public static Locale toLocale(final String str) {
         if (str == null) {
             return null;
         }
+        if (str.contains("#")) { // LANG-879 - Cannot handle Java 7 script & extensions
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
         final int len = str.length();
         if (len < 2) {
             throw new IllegalArgumentException("Invalid locale format: " + str);
diff --git a/src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java b/src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java
index f2d47c59dac..e021dce9e80 100644
--- a/src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java
@@ -542,4 +542,41 @@ public void testLang865() {
         }
     }
 
-}
+    @Test
+    public void testParseAllLocales() {
+        Locale[] locales = Locale.getAvailableLocales();
+        int failures = 0;
+        for (Locale l : locales) {
+            // Check if it's possible to recreate the Locale using just the standard constructor
+            Locale locale = new Locale(l.getLanguage(), l.getCountry(), l.getVariant());
+            if (l.equals(locale)) { // it is possible for LocaleUtils.toLocale to handle these Locales
+                String str = l.toString();
+                // Look for the script/extension suffix
+                int suff = str.indexOf("_#");
+                if (suff == - 1) {
+                    suff = str.indexOf("#");
+                }
+                if (suff >= 0) { // we have a suffix
+                    try {
+                        LocaleUtils.toLocale(str); // shouuld cause IAE
+                        System.out.println("Should not have parsed: " + str);
+                        failures++;
+                        continue; // try next Locale
+                    } catch (IllegalArgumentException iae) {
+                        // expected; try without suffix
+                        str = str.substring(0, suff);
+                    }
+                }
+                Locale loc = LocaleUtils.toLocale(str);
+                if (!l.equals(loc)) {
+                    System.out.println("Failed to parse: " + str);
+                    failures++;
+                }                    
+            }
+        }
+        if (failures > 0) {
+            fail("Failed "+failures+" test(s)");
+        }
+    }
+
+}
\ No newline at end of file
