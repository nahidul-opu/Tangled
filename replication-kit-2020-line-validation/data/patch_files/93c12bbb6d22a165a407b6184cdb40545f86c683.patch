From 93c12bbb6d22a165a407b6184cdb40545f86c683 Mon Sep 17 00:00:00 2001
From: Benedikt Ritter <britter@apache.org>
Date: Wed, 30 Aug 2017 19:28:20 +0000
Subject: [PATCH] BCEL-287: IINC does not handle -128 properly. Thanks to Mark
 Roberts

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1806726 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                         | 1 +
 src/main/java/org/apache/bcel/generic/IINC.java | 7 ++++++-
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 7cc9f6a847..083c709331 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -63,6 +63,7 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="6.1" date="tba" description="tba">
+      <action issue="BCEL-287" type="fix" dev="britter" due-to="Mark Roberts">IINC does not handle -128 properly</action>
       <action issue="BCEL-283" type="fix" dev="britter" due-to="Mark Roberts">Support for StackMap should be different from StackMapTable</action>
       <action issue="BCEL-289" type="fix" dev="kinow">Crash when parsing constructor of inner classes with parameters annotated</action>
       <action issue="BCEL-276" type="fix" dev="britter" due-to="Sam Yoon">LocalVariableTypeTable is not updated.</action>
diff --git a/src/main/java/org/apache/bcel/generic/IINC.java b/src/main/java/org/apache/bcel/generic/IINC.java
index 7efbb8ecfa..c01e8b1a16 100644
--- a/src/main/java/org/apache/bcel/generic/IINC.java
+++ b/src/main/java/org/apache/bcel/generic/IINC.java
@@ -75,7 +75,12 @@ public void dump( final DataOutputStream out ) throws IOException {
 
 
     private void setWide() {
-        wide = (super.getIndex() > org.apache.bcel.Const.MAX_BYTE) || (Math.abs(c) > Byte.MAX_VALUE);
+        wide = (super.getIndex() > org.apache.bcel.Const.MAX_BYTE);
+        if (c > 0) {
+            wide = wide || (c > Byte.MAX_VALUE);
+        } else {
+            wide = wide || (c < Byte.MIN_VALUE);
+        }
         if (wide) {
             super.setLength(6); // wide byte included
         } else {
