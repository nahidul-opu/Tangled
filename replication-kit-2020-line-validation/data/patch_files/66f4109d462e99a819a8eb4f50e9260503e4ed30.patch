From 66f4109d462e99a819a8eb4f50e9260503e4ed30 Mon Sep 17 00:00:00 2001
From: Emmanuel Bourg <ebourg@apache.org>
Date: Wed, 30 Apr 2008 10:59:58 +0000
Subject: [PATCH] Fixed a bug in ConfigurationDynaBean that prevented to work
 with indexed properties stored internally as arrays (CONFIGURATION-322)

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@652316 13f79535-47bb-0310-9956-ffa450edef68
---
 .../configuration/AbstractConfiguration.java  |  5 ++++
 .../beanutils/ConfigurationDynaBean.java      |  6 ++---
 .../beanutils/TestConfigurationDynaBean.java  | 27 ++++++++++++++++---
 xdocs/changes.xml                             |  4 +++
 4 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/src/java/org/apache/commons/configuration/AbstractConfiguration.java b/src/java/org/apache/commons/configuration/AbstractConfiguration.java
index 4416556bca..0fece8a8b1 100644
--- a/src/java/org/apache/commons/configuration/AbstractConfiguration.java
+++ b/src/java/org/apache/commons/configuration/AbstractConfiguration.java
@@ -21,6 +21,7 @@
 import java.math.BigDecimal;
 import java.math.BigInteger;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
@@ -1134,6 +1135,10 @@ else if (value == null)
         {
             list = defaultValue;
         }
+        else if (value.getClass().isArray())
+        {
+            return Arrays.asList((Object[]) value);
+        }
         else
         {
             throw new ConversionException('\'' + key + "' doesn't map to a List object: " + value + ", a "
diff --git a/src/java/org/apache/commons/configuration/beanutils/ConfigurationDynaBean.java b/src/java/org/apache/commons/configuration/beanutils/ConfigurationDynaBean.java
index c5eb9d4cde..da59a6897b 100644
--- a/src/java/org/apache/commons/configuration/beanutils/ConfigurationDynaBean.java
+++ b/src/java/org/apache/commons/configuration/beanutils/ConfigurationDynaBean.java
@@ -169,7 +169,7 @@ public Object get(String name, int index)
         }
         catch (ConversionException e)
         {
-            throw new IllegalArgumentException("Property '" + name + "' is not indexed.");
+            throw new IllegalArgumentException("Property '" + name + "' is not indexed.", e);
         }
     }
 
@@ -213,7 +213,7 @@ else if (property instanceof List)
             }
             else if (property.getClass().isArray())
             {
-                Array.set(value, index, value);
+                Array.set(property, index, value);
             }
             else if (index == 0)
             {
@@ -226,7 +226,7 @@ else if (index == 0)
         }
         catch (ConversionException e)
         {
-            throw new IllegalArgumentException("Property '" + name + "' is not indexed.");
+            throw new IllegalArgumentException("Property '" + name + "' is not indexed.", e);
         }
     }
 
diff --git a/src/test/org/apache/commons/configuration/beanutils/TestConfigurationDynaBean.java b/src/test/org/apache/commons/configuration/beanutils/TestConfigurationDynaBean.java
index f1948e4a49..158e0caa35 100644
--- a/src/test/org/apache/commons/configuration/beanutils/TestConfigurationDynaBean.java
+++ b/src/test/org/apache/commons/configuration/beanutils/TestConfigurationDynaBean.java
@@ -18,14 +18,17 @@
 package org.apache.commons.configuration.beanutils;
 
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 
-import junit.framework.AssertionFailedError;
-import junit.framework.TestCase;
-import junitx.framework.ObjectAssert;
 import org.apache.commons.beanutils.DynaProperty;
 import org.apache.commons.configuration.BaseConfiguration;
 import org.apache.commons.configuration.Configuration;
+import org.apache.commons.configuration.MapConfiguration;
+
+import junit.framework.AssertionFailedError;
+import junit.framework.TestCase;
+import junitx.framework.ObjectAssert;
 
 /**
  * <p>Test Case for the <code>ConfigurationDynaBean</code> implementation class.
@@ -549,6 +552,24 @@ public void testSetIndexedValues()
         assertEquals("Returned correct new value 4", "New Value 4", (String) value);
     }
 
+    /**
+     * Test the modification of a configuration property stored internally as an array.
+     */
+    public void testSetArrayValue()
+    {
+        MapConfiguration configuration = new MapConfiguration(new HashMap());
+        configuration.getMap().put("objectArray", new Object[] {"value1", "value2", "value3"});
+
+        ConfigurationDynaBean bean = new ConfigurationDynaBean(configuration);
+
+        bean.set("objectArray", 1, "New Value 1");
+        Object value = bean.get("objectArray", 1);
+
+        assertNotNull("Returned new value 1", value);
+        ObjectAssert.assertInstanceOf("Returned String new value 1", String.class,  value);
+        assertEquals("Returned correct new value 1", "New Value 1", (String) value);
+    }
+
     /**
      * Positive and negative tests on setMappedProperty valid arguments.
      */
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index c5c10c193e..deed0f1fbe 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,10 @@
 
   <body>
     <release version="1.6" date="in SVN" description="">
+      <action dev="ebourg" type="fix" issue="CONFIGURATION-322">
+        ConfigurationDynaBean now works properly with indexed properties
+        stored internally in the underlying configuration as arrays.
+      </action>
       <action dev="ebourg" type="fix" issue="CONFIGURATION-320">
         XMLPropertyListConfiguration is no longer limited to 32 bits integers.
       </action>
