From 0110214af6a802b2c7abc4f7151eab7595036478 Mon Sep 17 00:00:00 2001
From: Thomas Neidhart <tn@apache.org>
Date: Tue, 4 Nov 2014 19:49:40 +0000
Subject: [PATCH] [CODEC-187] Update Beider-Morse rules to v3.4.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1636703 13f79535-47bb-0310-9956-ffa450edef68
---
 .../codec/language/bm/BeiderMorseEncoder.java        |  2 +-
 .../commons/codec/language/bm/ash_approx_common.txt  |  8 +++++++-
 .../commons/codec/language/bm/gen_approx_common.txt  | 12 +++++++++++-
 .../codec/language/bm/PhoneticEngineTest.java        | 11 +++++++++--
 4 files changed, 28 insertions(+), 5 deletions(-)

diff --git a/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java b/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java
index be12b1b959..7339e7b4e2 100644
--- a/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java
+++ b/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java
@@ -65,7 +65,7 @@
  * Down-stream applications may wish to further process the encoding for indexing or lookup purposes, for example, by
  * splitting on pipe (<code>|</code>) and indexing under each of these alternatives.
  * <p>
- * <b>Note</b>: this version of the Beider-Morse encoding is equivalent with v3.3 of the reference implementation.
+ * <b>Note</b>: this version of the Beider-Morse encoding is equivalent with v3.4 of the reference implementation.
  *
  * @see <a href="http://stevemorse.org/phonetics/bmpm.htm">Beider-Morse Phonetic Matching</a>
  * @see <a href="http://stevemorse.org/phoneticinfo.htm">Reference implementation</a>
diff --git a/src/main/resources/org/apache/commons/codec/language/bm/ash_approx_common.txt b/src/main/resources/org/apache/commons/codec/language/bm/ash_approx_common.txt
index e95a7569c8..7af7a6ee37 100644
--- a/src/main/resources/org/apache/commons/codec/language/bm/ash_approx_common.txt
+++ b/src/main/resources/org/apache/commons/codec/language/bm/ash_approx_common.txt
@@ -201,7 +201,13 @@
 "lEndEr"	""	"$"	"lYnder" 
 "lendEr"	""	"$"	"lYnder" 
 "lEnder"	""	"$"	"lYnder" 
-             
+
+// burg = berg
+"bUrk" "" "$" "(burk|berk)"
+"burk" "" "$" "(burk|berk)"
+"bUrg" "" "$" "(burk|berk)"
+"burg" "" "$" "(burk|berk)"
+
 // CONSONANTS {z & Z; s & S} are approximately interchangeable
 "s" "" "[rmnl]" "z"
 "S" "" "[rmnl]" "z"
diff --git a/src/main/resources/org/apache/commons/codec/language/bm/gen_approx_common.txt b/src/main/resources/org/apache/commons/codec/language/bm/gen_approx_common.txt
index 96b685ce06..38537b475f 100644
--- a/src/main/resources/org/apache/commons/codec/language/bm/gen_approx_common.txt
+++ b/src/main/resources/org/apache/commons/codec/language/bm/gen_approx_common.txt
@@ -205,7 +205,17 @@
 "lEndEr" "" "$" "lYnder" 
 "lendEr" "" "$" "lYnder" 
 "lEnder" "" "$" "lYnder" 
-             
+
+// burg = berg
+"burk" "" "$" "(burk|berk)" 
+"bUrk" "" "$" "(burk|berk)"
+"burg" "" "$" "(burk|berk)"
+"bUrg" "" "$" "(burk|berk)"
+"Burk" "" "$" "(burk|berk)"
+"BUrk" "" "$" "(burk|berk)"
+"Burg" "" "$" "(burk|berk)"
+"BUrg" "" "$" "(burk|berk)"
+
 // CONSONANTS {z & Z; s & S} are approximately interchangeable
 "s" "" "[rmnl]" "z"
 "S" "" "[rmnl]" "z"
diff --git a/src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java b/src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java
index 437aba88f2..63dff2400f 100644
--- a/src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java
+++ b/src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java
@@ -17,7 +17,8 @@
 
 package org.apache.commons.codec.language.bm;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 import java.util.Arrays;
 import java.util.List;
@@ -50,7 +51,13 @@ public static List<Object[]> data() {
                                 "(elSink|elsink|helSink|helsink|helzink|xelsink)-(banhelsink|fanhelsink|fanhelzink|vanhelsink|vanhelzink|vanjelsink)",
                                 NameType.GENERIC,
                                 RuleType.EXACT,
-                                Boolean.FALSE, TEN });
+                                Boolean.FALSE, TEN },
+                        new Object[] {
+                                "Judenburg",
+                                "iudnbYrk|iudnbirk|iudnburk|xudnbirk|xudnburk|zudnbirk|zudnburk",
+                                NameType.GENERIC,
+                                RuleType.APPROX,
+                                Boolean.TRUE, TEN });
     }
 
     private final boolean concat;
