From adbef440c89af0e96b5428637c77ebc8cf77a04f Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Tue, 10 Jun 2008 17:07:39 +0000
Subject: [PATCH] FIX: NPE in AbstractResolver.exists() if a resource cannot be
 found (IVY-831)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@666208 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                                | 1 +
 .../org/apache/ivy/plugins/resolver/AbstractResolver.java  | 2 +-
 .../java/org/apache/ivy/plugins/resolver/MockResolver.java | 7 ++++++-
 3 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index 41aa9c86d..a3d3fd398 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -83,6 +83,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Change allownomd and skipbuildwithoutivy into a more semantically correct name (IVY-297)
 - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher
 
+- FIX: NPE in AbstractResolver.exists() if a resource cannot be found (IVY-831)
 - FIX: Ivy distribution jars contains duplicate entries (IVY-828)
 - FIX: ivy:report will generate an HTML file that references non-existent ivy-report.css (IVY-826)
 - FIX: dynamic resolveMode not being dynamic on branch (IVY-825)
diff --git a/src/java/org/apache/ivy/plugins/resolver/AbstractResolver.java b/src/java/org/apache/ivy/plugins/resolver/AbstractResolver.java
index 3400e12b3..42854498a 100644
--- a/src/java/org/apache/ivy/plugins/resolver/AbstractResolver.java
+++ b/src/java/org/apache/ivy/plugins/resolver/AbstractResolver.java
@@ -199,7 +199,7 @@ public boolean exists(Artifact artifact) {
              * of DependencyResolver says that it should never return null
              */
             throw new IllegalStateException(
-                "null download report returned by " + getName() 
+                "null download report returned by " + getName() + " (" + getClass().getName() + ")" 
                 + " when trying to download " + artifact);
         }
         ArtifactDownloadReport adr = dr.getArtifactReport(artifact);
diff --git a/test/java/org/apache/ivy/plugins/resolver/MockResolver.java b/test/java/org/apache/ivy/plugins/resolver/MockResolver.java
index 5dbe4bd2f..df4e0c967 100644
--- a/test/java/org/apache/ivy/plugins/resolver/MockResolver.java
+++ b/test/java/org/apache/ivy/plugins/resolver/MockResolver.java
@@ -29,6 +29,7 @@
 import org.apache.ivy.core.module.descriptor.DefaultModuleDescriptor;
 import org.apache.ivy.core.module.descriptor.DependencyDescriptor;
 import org.apache.ivy.core.module.id.ModuleRevisionId;
+import org.apache.ivy.core.report.ArtifactDownloadReport;
 import org.apache.ivy.core.report.DownloadReport;
 import org.apache.ivy.core.report.MetadataArtifactDownloadReport;
 import org.apache.ivy.core.resolve.DownloadOptions;
@@ -72,7 +73,11 @@ public ResolvedModuleRevision getDependency(DependencyDescriptor dd, ResolveData
     }
 
     public DownloadReport download(Artifact[] artifacts, DownloadOptions options) {
-        return null;
+        DownloadReport dr = new DownloadReport();
+        for (int i = 0; i < artifacts.length; i++) {
+            dr.addArtifactReport(new ArtifactDownloadReport(artifacts[i]));
+        }
+        return dr;
     }
 
     public void publish(Artifact artifact, File src, boolean overwrite) throws IOException {
