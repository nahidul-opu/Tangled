From 6a12f48750b8e4ce35d741150d3553e761039f1b Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Sat, 25 May 2013 14:52:38 +0000
Subject: [PATCH] Use example archive from COMPRESS-227 in test rather than
 creating a new one

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1486333 13f79535-47bb-0310-9956-ffa450edef68
---
 .../compress/archivers/zip/ZipFileTest.java   |  46 +++---------------
 src/test/resources/COMPRESS-227.zip           | Bin 0 -> 254 bytes
 2 files changed, 8 insertions(+), 38 deletions(-)
 create mode 100644 src/test/resources/COMPRESS-227.zip

diff --git a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java
index d06355e6dd3..967e71d1789 100644
--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java
@@ -204,46 +204,16 @@ public void testUnixSymlinkSampleFile() throws Exception {
         }
     }
 
+    /**
+     * @see https://issues.apache.org/jira/browse/COMPRESS-227
+     */
     public void testDuplicateEntry() throws Exception {
-        File f = File.createTempFile("commons-compress-zipfiletest", ".zip");
-        f.deleteOnExit();
-        File f2 = File.createTempFile("commons-compress-zipfiletest", ".txt");
-        f2.deleteOnExit();
-
-        OutputStream o = null;
-        try {
-            o = new FileOutputStream(f);
-            ZipArchiveOutputStream zo = new ZipArchiveOutputStream(o);
-            // simple way to ensure entries have extra data
-            zo.setUseZip64(Zip64Mode.Always);
-
-            // add the same file twice
-            ZipArchiveEntry ze = new ZipArchiveEntry(f2, "foo");
-            zo.putArchiveEntry(ze);
-            zo.write(new byte[0]);
-            zo.closeArchiveEntry();
-            ze = new ZipArchiveEntry(f2, "foo");
-            zo.putArchiveEntry(ze);
-            zo.write(new byte[0]);
-            zo.closeArchiveEntry();
-            zo.close();
-
-            o.close();
-            o = null;
+        File archive = getFile("COMPRESS-227.zip");
+        zf = new ZipFile(archive);
 
-            System.err.println("-------------------vvvvvvvvvvvvvvvvvvvvvvv-----------");
-            zf = new ZipFile(f);
-            ze = zf.getEntry("foo");
-            assertNotNull(ze);
-            assertNotNull(zf.getInputStream(ze));
-        } finally {
-            System.err.println("-------------------^^^^^^^^^^^^^^^^^^^^^^^-----------");
-            if (o != null) {
-                o.close();
-            }
-            f.delete();
-            f2.delete();
-        }
+        ZipArchiveEntry ze = zf.getEntry("test1.txt");
+        assertNotNull(ze);
+        assertNotNull(zf.getInputStream(ze));
     }
 
     /*
diff --git a/src/test/resources/COMPRESS-227.zip b/src/test/resources/COMPRESS-227.zip
new file mode 100644
index 0000000000000000000000000000000000000000..2f54ca636212c5db1cb89ae08fa739023c256f75
GIT binary patch
literal 254
zcmWIWW@h1HVBp|jSXaBni2(?hKm-tQGKesgq!yPL>XlTKFfs^0M1dqs0W(7YWtth8
kM3`~e4Y!S9Nuw>019wS)H<{X4*+6D80bw4Ht^#ow0KZfoZ2$lO

literal 0
HcmV?d00001

