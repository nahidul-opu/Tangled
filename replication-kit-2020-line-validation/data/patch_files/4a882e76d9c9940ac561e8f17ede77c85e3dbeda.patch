From cf42ae522e12e9b412e1a1f008ea73cfd86a5979 Mon Sep 17 00:00:00 2001
From: Jack <792626757@qq.com>
Date: Wed, 29 Apr 2015 11:02:08 +0800
Subject: [PATCH 01/10] add testChar and testDate Cases into
 JsonToStringStyleTest

---
 .../lang3/builder/JsonToStringStyleTest.java  | 33 +++++++++++++++++++
 1 file changed, 33 insertions(+)

diff --git a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
index 530e6793f35..261acaefef8 100644
--- a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
@@ -90,6 +90,39 @@ public void testAppendSuper() {
         assertEquals("{\"a\":\"hello\",\"b\":\"world\"}", new ToStringBuilder(base)
                 .appendSuper("{\"a\":\"hello\"}").append("b", "world").toString());
     }
+    
+    @Test
+    public void testChar() {
+    
+        try {
+            new ToStringBuilder(base).append('A').toString();
+            fail("Should have generated UnsupportedOperationException");
+        } catch (UnsupportedOperationException e) {
+        }
+        
+        assertEquals("{\"a\":\"A\"}", new ToStringBuilder(base).append("a", 'A')
+                .toString());
+        assertEquals("{\"a\":\"A\",\"b\":\"B\"}", new ToStringBuilder(base).append("a", 'A').append("b", 'B')
+                .toString());
+    }
+    
+    @Test
+    public void testDate() {
+        
+        final Date now = new Date();
+        final Date after_now = new Date(System.currentTimeMillis() + 1);
+        
+        try {
+            new ToStringBuilder(base).append(now).toString();
+            fail("Should have generated UnsupportedOperationException");
+        } catch (UnsupportedOperationException e) {
+        }
+        
+        assertEquals("{\"now\":\"" + now.toString() +"\"}", new ToStringBuilder(base).append("now", now)
+                .toString());
+        assertEquals("{\"now\":\"" + now.toString() +"\",\"after\":\"" + after_now.toString() + "\"}", new ToStringBuilder(base).append("now", now).append("after", after_now)
+                .toString());
+    }
 
     @Test
     public void testObject() {

From fb7335ab163588fe6ee67ef26d3b3edad5cf4bd5 Mon Sep 17 00:00:00 2001
From: Jack <792626757@qq.com>
Date: Wed, 29 Apr 2015 11:05:59 +0800
Subject: [PATCH 02/10] fix the JsonToStringStyle:except number types and
 boolean type, all other types in java should be 'appendAsString'

---
 .../apache/commons/lang3/builder/ToStringStyle.java   | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
index 658556bfa09..1227018de6a 100644
--- a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
+++ b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
@@ -2559,6 +2559,11 @@ public void append(StringBuffer buffer, String fieldName, Object value,
             super.append(buffer, fieldName, value, fullDetail);
         }
 
+        @Override
+        protected void appendDetail(StringBuffer buffer, String fieldName, char value) {
+            appendValueAsString(buffer, String.valueOf(value));
+        }
+
         @Override
         protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {
 
@@ -2568,13 +2573,13 @@ protected void appendDetail(StringBuffer buffer, String fieldName, Object value)
                 return;
             }
 
-            if (value.getClass() == String.class) {
+            if (value instanceof Number || value.getClass() == Boolean.class) {
 
-                appendValueAsString(buffer, (String)value);
+                buffer.append(value);
                 return;
             }
 
-            buffer.append(value);
+            appendValueAsString(buffer, value.toString());
         }
 
         /**

From 6d23e85570fe1139cf5ef3bc9b4e57ea73680b6e Mon Sep 17 00:00:00 2001
From: Jack <jacktan1991@users.noreply.github.com>
Date: Thu, 30 Apr 2015 17:50:59 +0800
Subject: [PATCH 03/10] fix imports in JsonToStringStyleTest.java

---
 .../org/apache/commons/lang3/builder/JsonToStringStyleTest.java  | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
index 261acaefef8..ad6a8c7bb3e 100644
--- a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
@@ -20,6 +20,7 @@
 import static org.junit.Assert.fail;
 
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.HashMap;
 
 import org.apache.commons.lang3.SystemUtils;

From 2584b4a0ef536e59bf28ba140844597a093d848d Mon Sep 17 00:00:00 2001
From: Jack <792626757@qq.com>
Date: Fri, 1 May 2015 14:10:22 +0800
Subject: [PATCH 04/10] add testNestingPerson case to
 JsonToStringStyleTest.java

---
 .../lang3/builder/JsonToStringStyleTest.java  | 40 +++++++++++++++++++
 1 file changed, 40 insertions(+)

diff --git a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
index ad6a8c7bb3e..d8f6beb6a09 100644
--- a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
@@ -229,6 +229,30 @@ public void testPerson() {
                         .append("age", p.age).append("smoker", p.smoker)
                         .toString());
     }
+    
+    @Test
+    public void testNestingPerson() {
+    	final Person p = new Person(){
+    		public String toString(){
+    			return new ToStringBuilder(this).append("name", this.name)
+                .append("age", this.age).append("smoker", this.smoker)
+                .toString();
+    		}
+    	};
+    	p.name = "Jane Doe";
+        p.age = 25;
+        p.smoker = true;
+        
+        final NestingPerson nestP = new NestingPerson();
+        nestP.pid="#1@Jane";
+        nestP.person = p;
+
+        assertEquals(
+                "{\"pid\":\"#1@Jane\",\"person\":{\"name\":\"Jane Doe\",\"age\":25,\"smoker\":true}}",
+                new ToStringBuilder(nestP).append("pid", nestP.pid)
+                        .append("person", nestP.person)
+                        .toString());
+    }
 
     @Test
     public void testLong() {
@@ -337,4 +361,20 @@ public void testLongArrayArray() {
         } catch (UnsupportedOperationException e) {
         }
     }
+    
+    /**
+     * An object with nested object structures used to test {@link JsonToStringStyle}.
+     * 
+     */
+    static class NestingPerson {
+        /**
+         * Test String field.
+         */
+        String pid;
+
+        /**
+         * Test nested object field.
+         */
+        Person person;
+    }
 }

From cac520971206093d32bf17925f880bd06d93f736 Mon Sep 17 00:00:00 2001
From: Jack <792626757@qq.com>
Date: Fri, 1 May 2015 14:13:13 +0800
Subject: [PATCH 05/10] modified appendDetail method for Object value in
 JsonToStringStyle class

---
 .../commons/lang3/builder/ToStringStyle.java  | 23 +++++++++++++++----
 1 file changed, 19 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
index 1227018de6a..6f51e1c6634 100644
--- a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
+++ b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
@@ -2573,13 +2573,28 @@ protected void appendDetail(StringBuffer buffer, String fieldName, Object value)
                 return;
             }
 
-            if (value instanceof Number || value.getClass() == Boolean.class) {
+            if (value instanceof String || value instanceof Character) {
 
-                buffer.append(value);
+            	appendValueAsString(buffer, value.toString());
                 return;
             }
-
-            appendValueAsString(buffer, value.toString());
+            
+            if (value instanceof Number || value instanceof Boolean) {
+            
+            	buffer.append(value);
+            	return;
+            }
+            
+            final String try_value_str = value.toString();
+            if (try_value_str.startsWith(getContentStart()) && try_value_str.endsWith(getContentEnd())
+                    || try_value_str.startsWith(getArrayStart()) && try_value_str.startsWith(getArrayEnd())
+                ) {
+                
+            	buffer.append(value);
+            	return;
+            }
+            
+            appendDetail(buffer, fieldName, try_value_str);
         }
 
         /**

From 6a99050166c945a226d5f8275ce4a9dca3518285 Mon Sep 17 00:00:00 2001
From: Jack <792626757@qq.com>
Date: Fri, 1 May 2015 16:07:44 +0800
Subject: [PATCH 06/10] fixed Tab to 4 spaces in JsonToStringStyleTest.java

---
 .../lang3/builder/JsonToStringStyleTest.java   | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
index d8f6beb6a09..4d23d533281 100644
--- a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
@@ -232,17 +232,17 @@ public void testPerson() {
     
     @Test
     public void testNestingPerson() {
-    	final Person p = new Person(){
-    		public String toString(){
-    			return new ToStringBuilder(this).append("name", this.name)
-                .append("age", this.age).append("smoker", this.smoker)
-                .toString();
-    		}
-    	};
-    	p.name = "Jane Doe";
+        final Person p = new Person(){
+            public String toString(){
+                return new ToStringBuilder(this).append("name", this.name)
+                    .append("age", this.age).append("smoker", this.smoker)
+                    .toString();
+            }
+        };
+        p.name = "Jane Doe";
         p.age = 25;
         p.smoker = true;
-        
+
         final NestingPerson nestP = new NestingPerson();
         nestP.pid="#1@Jane";
         nestP.person = p;

From 448ec93f006939eefacec32aca65dfb622d2c352 Mon Sep 17 00:00:00 2001
From: Benedikt Ritter <britter@apache.org>
Date: Fri, 1 May 2015 23:47:36 +0200
Subject: [PATCH 07/10] Add LANG-1128 to changes.xml

---
 src/changes/changes.xml | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 785a3b28665..28e89479a4f 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,7 @@
   <body>
 
   <release version="3.5" date="tba" description="tba">
+    <action issue="LANG-1128" type="fix" dev="britter" due-to="jacktan1991">JsonToStringStyle doesn't handle chars and objects correctly</action>
     <action issue="LANG-1119" type="add" dev="britter" due-to="Loic Guibert">Add rotate(string, int) method to StringUtils</action>
     <action issue="LANG-1118" type="fix" dev="britter" due-to="Loic Guibert">StringUtils.repeat('z', -1) throws NegativeArraySizeException</action>
     <action issue="LANG-1099" type="add" dev="britter" due-to="Adrian Ber">Add swap and shift operations for arrays to ArrayUtils</action>

From 07ec8ad2dd862c8669b2557b995ec5180663d73f Mon Sep 17 00:00:00 2001
From: Benedikt Ritter <britter@apache.org>
Date: Fri, 1 May 2015 23:48:35 +0200
Subject: [PATCH 08/10] Variable names should follow naming conventions

---
 .../org/apache/commons/lang3/builder/ToStringStyle.java   | 8 ++++----
 .../commons/lang3/builder/JsonToStringStyleTest.java      | 4 ++--
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
index 6f51e1c6634..c404a026da2 100644
--- a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
+++ b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
@@ -2585,16 +2585,16 @@ protected void appendDetail(StringBuffer buffer, String fieldName, Object value)
             	return;
             }
             
-            final String try_value_str = value.toString();
-            if (try_value_str.startsWith(getContentStart()) && try_value_str.endsWith(getContentEnd())
-                    || try_value_str.startsWith(getArrayStart()) && try_value_str.startsWith(getArrayEnd())
+            final String valueAsString = value.toString();
+            if (valueAsString.startsWith(getContentStart()) && valueAsString.endsWith(getContentEnd())
+                    || valueAsString.startsWith(getArrayStart()) && valueAsString.startsWith(getArrayEnd())
                 ) {
                 
             	buffer.append(value);
             	return;
             }
             
-            appendDetail(buffer, fieldName, try_value_str);
+            appendDetail(buffer, fieldName, valueAsString);
         }
 
         /**
diff --git a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
index 4d23d533281..e5821d57044 100644
--- a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
@@ -111,7 +111,7 @@ public void testChar() {
     public void testDate() {
         
         final Date now = new Date();
-        final Date after_now = new Date(System.currentTimeMillis() + 1);
+        final Date afterNow = new Date(System.currentTimeMillis() + 1);
         
         try {
             new ToStringBuilder(base).append(now).toString();
@@ -121,7 +121,7 @@ public void testDate() {
         
         assertEquals("{\"now\":\"" + now.toString() +"\"}", new ToStringBuilder(base).append("now", now)
                 .toString());
-        assertEquals("{\"now\":\"" + now.toString() +"\",\"after\":\"" + after_now.toString() + "\"}", new ToStringBuilder(base).append("now", now).append("after", after_now)
+        assertEquals("{\"now\":\"" + now.toString() +"\",\"after\":\"" + afterNow.toString() + "\"}", new ToStringBuilder(base).append("now", now).append("after", afterNow)
                 .toString());
     }
 

From 28656559d2fc67193a84d5cbc48d378b2016f74a Mon Sep 17 00:00:00 2001
From: Benedikt Ritter <britter@apache.org>
Date: Fri, 1 May 2015 23:51:03 +0200
Subject: [PATCH 09/10] Format source code

---
 .../commons/lang3/builder/ToStringStyle.java  | 27 +++++++++----------
 .../lang3/builder/JsonToStringStyleTest.java  | 12 ++++-----
 2 files changed, 17 insertions(+), 22 deletions(-)

diff --git a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
index c404a026da2..f988f0e9a8e 100644
--- a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
+++ b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
@@ -2568,32 +2568,29 @@ protected void appendDetail(StringBuffer buffer, String fieldName, char value) {
         protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {
 
             if (value == null) {
-
                 appendNullText(buffer, fieldName);
                 return;
             }
 
             if (value instanceof String || value instanceof Character) {
-
-            	appendValueAsString(buffer, value.toString());
+                appendValueAsString(buffer, value.toString());
                 return;
             }
-            
+
             if (value instanceof Number || value instanceof Boolean) {
-            
-            	buffer.append(value);
-            	return;
+                buffer.append(value);
+                return;
             }
-            
+
             final String valueAsString = value.toString();
-            if (valueAsString.startsWith(getContentStart()) && valueAsString.endsWith(getContentEnd())
-                    || valueAsString.startsWith(getArrayStart()) && valueAsString.startsWith(getArrayEnd())
-                ) {
-                
-            	buffer.append(value);
-            	return;
+            if (valueAsString.startsWith(getContentStart())
+                    && valueAsString.endsWith(getContentEnd())
+                    || valueAsString.startsWith(getArrayStart())
+                    && valueAsString.startsWith(getArrayEnd())) {
+                buffer.append(value);
+                return;
             }
-            
+
             appendDetail(buffer, fieldName, valueAsString);
         }
 
diff --git a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
index e5821d57044..f5fadace029 100644
--- a/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java
@@ -91,34 +91,32 @@ public void testAppendSuper() {
         assertEquals("{\"a\":\"hello\",\"b\":\"world\"}", new ToStringBuilder(base)
                 .appendSuper("{\"a\":\"hello\"}").append("b", "world").toString());
     }
-    
+
     @Test
     public void testChar() {
-    
         try {
             new ToStringBuilder(base).append('A').toString();
             fail("Should have generated UnsupportedOperationException");
         } catch (UnsupportedOperationException e) {
         }
-        
+
         assertEquals("{\"a\":\"A\"}", new ToStringBuilder(base).append("a", 'A')
                 .toString());
         assertEquals("{\"a\":\"A\",\"b\":\"B\"}", new ToStringBuilder(base).append("a", 'A').append("b", 'B')
                 .toString());
     }
-    
+
     @Test
     public void testDate() {
-        
         final Date now = new Date();
         final Date afterNow = new Date(System.currentTimeMillis() + 1);
-        
+
         try {
             new ToStringBuilder(base).append(now).toString();
             fail("Should have generated UnsupportedOperationException");
         } catch (UnsupportedOperationException e) {
         }
-        
+
         assertEquals("{\"now\":\"" + now.toString() +"\"}", new ToStringBuilder(base).append("now", now)
                 .toString());
         assertEquals("{\"now\":\"" + now.toString() +"\",\"after\":\"" + afterNow.toString() + "\"}", new ToStringBuilder(base).append("now", now).append("after", afterNow)

From e8db7237a9c347d2225fce9b49ff92bb741adffa Mon Sep 17 00:00:00 2001
From: Benedikt Ritter <britter@apache.org>
Date: Fri, 1 May 2015 23:54:03 +0200
Subject: [PATCH 10/10] Extract logic for checking string representation of
 objects into separate methods

---
 .../commons/lang3/builder/ToStringStyle.java      | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
index f988f0e9a8e..fbb40474dec 100644
--- a/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
+++ b/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
@@ -2583,10 +2583,7 @@ protected void appendDetail(StringBuffer buffer, String fieldName, Object value)
             }
 
             final String valueAsString = value.toString();
-            if (valueAsString.startsWith(getContentStart())
-                    && valueAsString.endsWith(getContentEnd())
-                    || valueAsString.startsWith(getArrayStart())
-                    && valueAsString.startsWith(getArrayEnd())) {
+            if (isJsonObject(valueAsString) || isJsonArray(valueAsString)) {
                 buffer.append(value);
                 return;
             }
@@ -2594,6 +2591,16 @@ protected void appendDetail(StringBuffer buffer, String fieldName, Object value)
             appendDetail(buffer, fieldName, valueAsString);
         }
 
+        private boolean isJsonArray(String valueAsString) {
+            return valueAsString.startsWith(getArrayStart())
+                    && valueAsString.startsWith(getArrayEnd());
+        }
+
+        private boolean isJsonObject(String valueAsString) {
+            return valueAsString.startsWith(getContentStart())
+                    && valueAsString.endsWith(getContentEnd());
+        }
+
         /**
          * Appends the given String in parenthesis to the given StringBuffer.
          * 
