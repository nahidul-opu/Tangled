From 8862e06dc4d4f47e3d7e9e06e8f0581fc4767c61 Mon Sep 17 00:00:00 2001
From: Bernd Eckenfels <ecki@apache.org>
Date: Sun, 30 Nov 2014 09:20:55 +0000
Subject: [PATCH] [VFS-523] HdfsFileObject uses super equals/hashcode like all
 FOs

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1642530 13f79535-47bb-0310-9956-ffa450edef68
---
 .../vfs2/provider/hdfs/HdfsFileObject.java    | 47 +------------------
 src/changes/changes.xml                       |  4 ++
 2 files changed, 6 insertions(+), 45 deletions(-)

diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/hdfs/HdfsFileObject.java b/core/src/main/java/org/apache/commons/vfs2/provider/hdfs/HdfsFileObject.java
index 815e4bda78..3d84d8cd9f 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/hdfs/HdfsFileObject.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/hdfs/HdfsFileObject.java
@@ -35,7 +35,7 @@
 
 /**
  * A VFS representation of an HDFS file.
- * 
+ *
  * @since 2.1
  */
 public class HdfsFileObject extends AbstractFileObject<HdfsFileSystem>
@@ -47,7 +47,7 @@ public class HdfsFileObject extends AbstractFileObject<HdfsFileSystem>
 
     /**
      * Constructs a new HDFS FileObject
-     * 
+     *
      * @param name
      *            FileName
      * @param fs
@@ -209,15 +209,6 @@ protected boolean doIsReadable() throws Exception
         return true;
     }
 
-    /**
-     * @see org.apache.commons.vfs2.provider.AbstractFileObject#doIsSameFile(org.apache.commons.vfs2.FileObject)
-     */
-    @Override
-    protected boolean doIsSameFile(final FileObject destFile) throws FileSystemException
-    {
-        throw new UnsupportedOperationException();
-    }
-
     /**
      * @see org.apache.commons.vfs2.provider.AbstractFileObject#doIsWriteable()
      */
@@ -295,31 +286,6 @@ protected boolean doSetLastModifiedTime(final long modtime) throws Exception
         throw new UnsupportedOperationException();
     }
 
-    /**
-     * @see java.lang.Object#equals(java.lang.Object)
-     */
-    @Override
-    public boolean equals(final Object o)
-    {
-        if (null == o)
-        {
-            return false;
-        }
-        if (o == this)
-        {
-            return true;
-        }
-        if (o instanceof HdfsFileObject)
-        {
-            final HdfsFileObject other = (HdfsFileObject) o;
-            if (other.path.equals(this.path))
-            {
-                return true;
-            }
-        }
-        return false;
-    }
-
     /**
      * @see org.apache.commons.vfs2.provider.AbstractFileObject#exists()
      * @return boolean true if file exists, false if not
@@ -342,13 +308,4 @@ public boolean exists() throws FileSystemException
         }
     }
 
-    /**
-     * @see java.lang.Object#hashCode()
-     */
-    @Override
-    public int hashCode()
-    {
-        return this.path.getName().toString().hashCode();
-    }
-
 }
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 0f2d353ea5..ad6127c5fc 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -26,6 +26,10 @@
 <!--       <action issue="VFS-443" dev="ggregory" type="update" due-to="nickallen"> -->
 <!--        [Local] Need an easy way to convert from a FileObject to a File. -->
 <!--       </action> -->
+      <action issue="VFS-523" dev="ecki" type="fix" due-to="Roger Whitcomb">
+       [HDFS] Make HdfsFileObject.equal use system hashcode/equals instead of 
+       wrongly comparing file path only.
+      </action>
       <action issue="VFS-544" dev="ecki" type="fix">
        [Virtual] Allow virtual file systems and virtual file system provider
        to be closed, to avoid memory leak.
