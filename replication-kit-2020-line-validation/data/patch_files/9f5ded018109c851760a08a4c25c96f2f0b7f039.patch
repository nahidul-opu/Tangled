From 9f5ded018109c851760a08a4c25c96f2f0b7f039 Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Thu, 2 Nov 2006 15:31:13 +0000
Subject: [PATCH] FIX: retrieve fails when resolve is done with useOrigin set
 to true (IVY-304)

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@484579 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 src/java/fr/jayasoft/ivy/Ivy.java             | 15 ++++++++++--
 .../fr/jayasoft/ivy/ant/IvyRetrieveTest.java  | 23 +++++++++++++++++++
 3 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index 1699e508c..54a4293af 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -12,6 +12,7 @@ for detailed view of each issue, please consult http://jira.jayasoft.org/
 - IMPROVE: Measure code coverage (IVY-323)
 - IMPROVE: Add a 'conf' parameter to the ivy 'publish' ant task (IVY-322) (thanks to Emmanuel Pellereau)
 
+- FIX: retrieve fails when resolve is done with useOrigin set to true (IVY-304)
 - FIX: IVY complains about non-existent reports in the cache directory (IVY-315)
 - FIX: Typo in failureproperty attribute of Ant resolve task (IVY-327) (thanks to Jean-Baptiste Quenot)
 - FIX: ivy:resolve useOrigin fails to behave correctly (IVY-332)
diff --git a/src/java/fr/jayasoft/ivy/Ivy.java b/src/java/fr/jayasoft/ivy/Ivy.java
index ba4e907ff..ba805feb9 100644
--- a/src/java/fr/jayasoft/ivy/Ivy.java
+++ b/src/java/fr/jayasoft/ivy/Ivy.java
@@ -1928,7 +1928,17 @@ public int retrieve(ModuleId moduleId, String[] confs, final File cache, String
             int targetsUpToDate = 0;
             for (Iterator iter = artifactsToCopy.keySet().iterator(); iter.hasNext();) {
                 Artifact artifact = (Artifact)iter.next();
-                File archive = "ivy".equals(artifact.getType())? getIvyFileInCache(cache, artifact.getModuleRevisionId()):getArchiveFileInCache(cache, artifact, getSavedArtifactOrigin(cache, artifact), useOrigin);
+                File archive;
+				if ("ivy".equals(artifact.getType())) {
+					archive = getIvyFileInCache(cache, artifact.getModuleRevisionId());
+				} else {
+					archive = getArchiveFileInCache(cache, artifact, getSavedArtifactOrigin(cache, artifact), useOrigin);
+					if (!useOrigin && !archive.exists()) {
+						// file is not available in cache, maybe the last resolve was performed with useOrigin=true.
+						// we try to use the best we can
+						archive = getArchiveFileInCache(cache, artifact, getSavedArtifactOrigin(cache, artifact));
+					}
+				}
                 Set dest = (Set)artifactsToCopy.get(artifact);
                 Message.verbose("\tretrieving "+archive);
                 for (Iterator it2 = dest.iterator(); it2.hasNext();) {
@@ -2500,7 +2510,8 @@ public File getArchiveFileInCache(File cache, Artifact artifact, ArtifactOrigin
     }
     /**
      * Returns a File object pointing to where the artifact can be found on the local file system,
-     * using or not the original location depending on its availability and the setting of useOrigin.
+     * using or not the original location depending on the availability of origin information provided
+     * as parameter and the setting of useOrigin.
      * 
      * If useOrigin is false, this method will always return the file in the cache.
      * 
diff --git a/test/java/fr/jayasoft/ivy/ant/IvyRetrieveTest.java b/test/java/fr/jayasoft/ivy/ant/IvyRetrieveTest.java
index 293c6a370..cc43ee18f 100644
--- a/test/java/fr/jayasoft/ivy/ant/IvyRetrieveTest.java
+++ b/test/java/fr/jayasoft/ivy/ant/IvyRetrieveTest.java
@@ -149,6 +149,29 @@ public void testWithAPreviousResolve() throws Exception {
                 "jar", "jar")).exists());
     }
 
+	public void testUseOrigin() throws Exception {
+        // test case for IVY-304
+		// first we do a resolve with useOrigin=true in another project
+        Project project = new Project();
+        project.setProperty("ivy.conf.file", "test/repositories/ivyconf.xml");
+        project.setProperty("ivy.dep.file", "test/java/fr/jayasoft/ivy/ant/ivy-simple.xml");
+        IvyResolve resolve = new IvyResolve();
+        resolve.setProject(project);
+        resolve.setCache(_cache);
+        resolve.setUseOrigin(true);
+        resolve.execute();
+
+        // then we do a retrieve with the correct module information and useOrigin=false
+        _retrieve.setOrganisation("jayasoft");
+        _retrieve.setModule("resolve-simple");
+        _retrieve.setConf("default");
+        _retrieve.setUseOrigin(false);
+        _retrieve.execute();
+
+        assertTrue(new File(IvyPatternHelper.substitute(RETRIEVE_PATTERN, "org1", "mod1.2", "2.0", "mod1.2",
+                "jar", "jar")).exists());
+    }
+
     public void testFailureWithoutAPreviousResolve() throws Exception {
         // we do a retrieve with the module information whereas no resolve has been previously done
         try {
