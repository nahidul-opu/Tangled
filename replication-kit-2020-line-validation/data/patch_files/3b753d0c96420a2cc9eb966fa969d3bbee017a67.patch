From 3b753d0c96420a2cc9eb966fa969d3bbee017a67 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Thu, 29 May 2008 19:45:24 +0000
Subject: [PATCH] FIX: Filesystem repositories can not have () in the path
 (IVY-797)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@661448 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                             | 1 +
 src/java/org/apache/ivy/core/IvyPatternHelper.java      | 5 +++++
 test/java/org/apache/ivy/util/IvyPatternHelperTest.java | 6 ++++++
 3 files changed, 12 insertions(+)

diff --git a/CHANGES.txt b/CHANGES.txt
index 3846e3762..a50b10ab5 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -81,6 +81,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Change allownomd and skipbuildwithoutivy into a more semantically correct name (IVY-297)
 - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher
 
+- FIX: Filesystem repositories can not have () in the path (IVY-797)
 - FIX: Type tag in poms not supported (IVY-762)
 - FIX: An empty exclusion tag results in an IllegalArgumentException (IVY-821)
 - FIX: Maven scope defined in POM dependencyManagement section not honoured (IVY-811)
diff --git a/src/java/org/apache/ivy/core/IvyPatternHelper.java b/src/java/org/apache/ivy/core/IvyPatternHelper.java
index 6a42fa8c1..0f1aea76e 100644
--- a/src/java/org/apache/ivy/core/IvyPatternHelper.java
+++ b/src/java/org/apache/ivy/core/IvyPatternHelper.java
@@ -207,6 +207,7 @@ public static String substituteTokens(String pattern, Map tokens) {
         StringBuffer tokenBuffer = null;
         boolean insideOptionalPart = false;
         boolean insideToken = false;
+        boolean tokenSeen = false;
         boolean tokenHadValue = false;
 
         for (int i = 0; i < chars.length; i++) {
@@ -220,6 +221,7 @@ public static String substituteTokens(String pattern, Map tokens) {
 
                     optionalPart = new StringBuffer();
                     insideOptionalPart = true;
+                    tokenSeen = false;
                     tokenHadValue = false;
                     break;
 
@@ -232,6 +234,8 @@ public static String substituteTokens(String pattern, Map tokens) {
 
                     if (tokenHadValue) {
                         buffer.append(optionalPart.toString());
+                    } else if (!tokenSeen) {
+                        buffer.append('(').append(optionalPart.toString()).append(')');
                     }
 
                     insideOptionalPart = false;
@@ -268,6 +272,7 @@ public static String substituteTokens(String pattern, Map tokens) {
                     }
 
                     insideToken = false;
+                    tokenSeen = true;
                     break;
 
                 default:
diff --git a/test/java/org/apache/ivy/util/IvyPatternHelperTest.java b/test/java/org/apache/ivy/util/IvyPatternHelperTest.java
index 2a45f3f1b..43a9e343d 100644
--- a/test/java/org/apache/ivy/util/IvyPatternHelperTest.java
+++ b/test/java/org/apache/ivy/util/IvyPatternHelperTest.java
@@ -62,5 +62,11 @@ public void testOrganization() {
         assertEquals("apache/Test/build/archives/jars/test-1.0.jar", IvyPatternHelper.substitute(
             pattern, "apache", "Test", "1.0", "test", "jar", "jar"));
     }
+    
+    public void testSpecialCharsInsidePattern() {
+        String pattern = "[organization]/[module]/build/archives (x86)/[type]s/[artifact]-[revision].[ext]";
+        assertEquals("apache/Test/build/archives (x86)/jars/test-1.0.jar", IvyPatternHelper.substitute(
+            pattern, "apache", "Test", "1.0", "test", "jar", "jar"));
+    }
 
 }
