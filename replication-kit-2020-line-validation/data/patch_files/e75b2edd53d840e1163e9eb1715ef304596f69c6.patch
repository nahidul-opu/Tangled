From e75b2edd53d840e1163e9eb1715ef304596f69c6 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Wed, 23 Jan 2013 00:34:15 +0000
Subject: [PATCH] NET-480 Wrong passivHost when using FTPHTTPClient with EPSV

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1437243 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                  | 3 +++
 .../java/org/apache/commons/net/ftp/FTPHTTPClient.java   | 9 ++++++++-
 2 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index c1d23f606..dfa6b7b0a 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -64,6 +64,9 @@ The <action> type attribute can be add,update,fix,remove.
     <body>
         <release version="3.3" date="TBA" description="
         ">
+            <action issue="NET-480" dev="sebb" type="fix">
+            Wrong passivHost when using FTPHTTPClient with EPSV
+            </action>
             <action issue="NET-494" dev="sebb" type="fix">
             FTPClient.CSL.cleanUp() fails to restore timeout value on exception
             </action>
diff --git a/src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java b/src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java
index 1863809f7..9b56da7f9 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java
@@ -45,11 +45,14 @@ public class FTPHTTPClient extends FTPClient {
     private static final byte[] CRLF={'\r', '\n'};
     private final Base64 base64 = new Base64();
 
+    private String tunnelHost; // Save the host when setting up a tunnel (needed for EPSV)
+
     public FTPHTTPClient(String proxyHost, int proxyPort, String proxyUser, String proxyPass) {
         this.proxyHost = proxyHost;
         this.proxyPort = proxyPort;
         this.proxyUsername = proxyUser;
         this.proxyPassword = proxyPass;
+        this.tunnelHost = null;
     }
 
     public FTPHTTPClient(String proxyHost, int proxyPort) {
@@ -85,10 +88,12 @@ protected Socket _openDataConnection_(String command, String arg)
         }
 
         final boolean isInet6Address = getRemoteAddress() instanceof Inet6Address;
+        String passiveHost = null;
         
         boolean attemptEPSV = isUseEPSVwithIPv4() || isInet6Address;
         if (attemptEPSV && epsv() == FTPReply.ENTERING_EPSV_MODE) {
             _parseExtendedPassiveModeReply(_replyLines.get(0));
+            passiveHost = this.tunnelHost;
         } else {
             if (isInet6Address) {
                 return null; // Must use EPSV for IPV6
@@ -98,12 +103,13 @@ protected Socket _openDataConnection_(String command, String arg)
                 return null;
             }
             _parsePassiveModeReply(_replyLines.get(0));
+            passiveHost = this.getPassiveHost();
         }
 
         Socket socket = new Socket(proxyHost, proxyPort);
         InputStream is = socket.getInputStream();
         OutputStream os = socket.getOutputStream();
-        tunnelHandshake(this.getPassiveHost(), this.getPassivePort(), is, os);
+        tunnelHandshake(passiveHost, this.getPassivePort(), is, os);
         if ((getRestartOffset() > 0) && !restart(getRestartOffset())) {
             socket.close();
             return null;
@@ -139,6 +145,7 @@ private void tunnelHandshake(String host, int port, InputStream input, OutputStr
         final String connectString = "CONNECT "  + host + ":" + port  + " HTTP/1.1";
         final String hostString = "Host: " + host + ":" + port;
 
+        this.tunnelHost = host;
         output.write(connectString.getBytes("UTF-8")); // TODO what is the correct encoding?
         output.write(CRLF);
         output.write(hostString.getBytes("UTF-8"));
