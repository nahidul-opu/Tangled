From 247d47432fd2cef894a3786c13915b6b3d4b78b2 Mon Sep 17 00:00:00 2001
From: Aaron Smuts <asmuts@apache.org>
Date: Mon, 1 Jun 2009 21:23:17 +0000
Subject: [PATCH] Resolved bug JCS-56.  There was a problem in the chunking
 method.

git-svn-id: https://svn.apache.org/repos/asf/jakarta/jcs/trunk@780835 13f79535-47bb-0310-9956-ffa450edef68
---
 .../disk/block/BlockDiskCacheUnitTest.java    | 10 +++----
 .../disk/block/BlockDiskUnitTest.java         | 19 +++----------
 .../StandardSerializerUnitTest.java           | 27 +++++++++++++++++++
 3 files changed, 35 insertions(+), 21 deletions(-)

diff --git a/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskCacheUnitTest.java b/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskCacheUnitTest.java
index 1f341b931..3585da739 100644
--- a/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskCacheUnitTest.java
+++ b/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskCacheUnitTest.java
@@ -133,7 +133,7 @@ public void testChunk_BigString()
      * <p>
      * @throws Exception
      */
-    public void SKIP_testPutGet_BigString()
+    public void testPutGet_BigString()
         throws Exception
     {
         String string = "This is my big string ABCDEFGH";
@@ -174,7 +174,7 @@ public void SKIP_testPutGet_BigString()
      * <p>
      * @throws Exception
      */
-    public void SKIP_testUTF8String()
+    public void testUTF8String()
         throws Exception
     {
         String string = "Iñtërnâtiônàlizætiøn";
@@ -217,7 +217,7 @@ public void SKIP_testUTF8String()
      * <p>
      * @throws Exception
      */
-    public void SKIP_testUTF8ByteArray()
+    public void testUTF8ByteArray()
         throws Exception
     {
         String string = "Iñtërnâtiônàlizætiøn";
@@ -249,7 +249,7 @@ public void SKIP_testUTF8ByteArray()
         Thread.sleep( 1000 );
         ICacheElement afterElement = diskCache.get( "x" );
         assertNotNull( afterElement );
-        System.out.println( "afterElement = " + afterElement );
+        //System.out.println( "afterElement = " + afterElement );
         byte[] after = (byte[]) afterElement.getVal();
 
         assertNotNull( after );
@@ -264,7 +264,7 @@ public void SKIP_testUTF8ByteArray()
      * <p>
      * @throws Exception
      */
-    public void SKIP_testUTF8StringAndBytes()
+    public void testUTF8StringAndBytes()
         throws Exception
     {
         X before = new X();
diff --git a/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskUnitTest.java b/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskUnitTest.java
index 5a68bc480..a91329e44 100644
--- a/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskUnitTest.java
+++ b/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskUnitTest.java
@@ -251,7 +251,7 @@ private int getBytesForBlocksOfByteArrays( int blockSize, int numBlocks )
      * <p>
      * @throws Exception
      */
-    public void SKIP_testWriteAndRead_BigString()
+    public void testWriteAndRead_BigString()
         throws Exception
     {
         // SETUP
@@ -286,11 +286,9 @@ public void SKIP_testWriteAndRead_BigString()
      * <p>
      * @throws Exception
      */
-    public void SKIP_testWriteAndRead_BigString2()
+    public void testWriteAndRead_BigString2()
         throws Exception
     {
-        System.setProperty("file.encoding", "UTF-8");
-
         // SETUP
         String fileName = "testWriteAndRead_BigString";
         File file = new File( rafDir, fileName + ".data" );
@@ -307,18 +305,7 @@ public void SKIP_testWriteAndRead_BigString2()
         int[] blocks = disk.write( string );
         String result = (String) disk.read( blocks );
 
-        // VERIFY
-        System.out.println( string );
-        System.out.println( result );
-        byte[] bytes = string.getBytes();
-        
-        for ( int i=0; i < bytes.length; i++)
-        {
-            int c = bytes[i];
-            System.out.println( c ); 
-            System.out.println( (char)c );        
-        }
-        System.out.println( disk );        
+        // VERIFY 
         assertEquals( "Wrong item retured.", string, result );
     }    
 }
diff --git a/src/test/org/apache/jcs/utils/serialization/StandardSerializerUnitTest.java b/src/test/org/apache/jcs/utils/serialization/StandardSerializerUnitTest.java
index 19a13193c..c59609f49 100644
--- a/src/test/org/apache/jcs/utils/serialization/StandardSerializerUnitTest.java
+++ b/src/test/org/apache/jcs/utils/serialization/StandardSerializerUnitTest.java
@@ -72,4 +72,31 @@ public void testNullInput()
         // VERIFY
         assertNull( "Should have nothing.", after );
     }
+    
+    /**
+     * Test simple back and forth with a string.
+     *<p>
+     * @throws Exception
+     */
+    public void testBigStringBackAndForth()
+        throws Exception
+    {
+        // SETUP
+        StandardSerializer serializer = new StandardSerializer();
+
+        String string = "This is my big string ABCDEFGH";
+        StringBuffer sb = new StringBuffer();
+        sb.append( string );
+        for ( int i = 0; i < 4; i++ )
+        {
+            sb.append( " " + i + sb.toString() ); // big string
+        }
+        String before = sb.toString();
+
+        // DO WORK
+        String after = (String) serializer.deSerialize( serializer.serialize( before ) );
+
+        // VERIFY
+        assertEquals( "Before and after should be the same.", before, after );
+    }
 }
