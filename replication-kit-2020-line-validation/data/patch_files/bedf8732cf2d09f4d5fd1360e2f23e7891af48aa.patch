From bedf8732cf2d09f4d5fd1360e2f23e7891af48aa Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Tue, 9 Oct 2012 18:26:22 +0000
Subject: [PATCH] CODEC-160 Base64.encodeBase64URLSafeString doesn't add
 padding characters at the end. Javadoc updated to clarify this

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1396159 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                |  2 +-
 .../java/org/apache/commons/codec/binary/Base64.java   | 10 +++++++---
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 0b31814ac8..5e9a9b8c93 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -48,7 +48,7 @@ The <action> type attribute can be add,update,fix,remove.
     </release>
     -->
     <release version="1.8" date="TBA" description="Feature and fix release."> 
-      <action dev="..." type="fix" issue="CODEC-NNN">...</action>   
+      <action dev="sebb" type="fix" issue="CODEC-160">Base64.encodeBase64URLSafeString doesn't add padding characters at the end.</action>   
     </release>
     <release version="1.7" date="11 September 2012" description="
 Feature and fix release.
diff --git a/src/main/java/org/apache/commons/codec/binary/Base64.java b/src/main/java/org/apache/commons/codec/binary/Base64.java
index c657e25190..8e0542170e 100644
--- a/src/main/java/org/apache/commons/codec/binary/Base64.java
+++ b/src/main/java/org/apache/commons/codec/binary/Base64.java
@@ -261,6 +261,7 @@ public Base64(int lineLength, byte[] lineSeparator) {
      * @param urlSafe
      *            Instead of emitting '+' and '/' we emit '-' and '_' respectively. urlSafe is only applied to encode
      *            operations. Decoding seamlessly handles both modes.
+     *            <b>Note: no padding is added when using the URL-safe alphabet.</b>
      * @throws IllegalArgumentException
      *             The provided lineSeparator included some base64 characters. That's not going to work!
      * @since 1.4
@@ -305,9 +306,10 @@ public boolean isUrlSafe() {
     /**
      * <p>
      * Encodes all of the provided data, starting at inPos, for inAvail bytes. Must be called at least twice: once with
-     * the data to encode, and once with inAvail set to "-1" to alert encoder that EOF has been reached, so flush last
+     * the data to encode, and once with inAvail set to "-1" to alert encoder that EOF has been reached, to flush last
      * remaining bytes (if not multiple of 3).
      * </p>
+     * <p><b>Note: no padding is added when encoding using the URL-safe alphabet.</b></p>
      * <p>
      * Thanks to "commons" project in ws.apache.org for the bitwise operations, and general approach.
      * http://svn.apache.org/repos/asf/webservices/commons/trunk/modules/util/
@@ -567,7 +569,7 @@ public static String encodeBase64String(byte[] binaryData) {
     /**
      * Encodes binary data using a URL-safe variation of the base64 algorithm but does not chunk the output. The
      * url-safe variation emits - and _ instead of + and / characters.
-     *
+     * <b>Note: no padding is added.</b>
      * @param binaryData
      *            binary data to encode
      * @return byte[] containing Base64 characters in their UTF-8 representation.
@@ -580,7 +582,7 @@ public static byte[] encodeBase64URLSafe(byte[] binaryData) {
     /**
      * Encodes binary data using a URL-safe variation of the base64 algorithm but does not chunk the output. The
      * url-safe variation emits - and _ instead of + and / characters.
-     *
+     * <b>Note: no padding is added.</b>
      * @param binaryData
      *            binary data to encode
      * @return String containing Base64 characters
@@ -625,6 +627,7 @@ public static byte[] encodeBase64(byte[] binaryData, boolean isChunked) {
      *            if {@code true} this encoder will chunk the base64 output into 76 character blocks
      * @param urlSafe
      *            if {@code true} this encoder will emit - and _ instead of the usual + and / characters.
+     *            <b>Note: no padding is added when encoding using the URL-safe alphabet.</b>
      * @return Base64-encoded data.
      * @throws IllegalArgumentException
      *             Thrown when the input array needs an output array bigger than {@link Integer#MAX_VALUE}
@@ -643,6 +646,7 @@ public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean
      *            if {@code true} this encoder will chunk the base64 output into 76 character blocks
      * @param urlSafe
      *            if {@code true} this encoder will emit - and _ instead of the usual + and / characters.
+     *            <b>Note: no padding is added when encoding using the URL-safe alphabet.</b>
      * @param maxResultSize
      *            The maximum result size to accept.
      * @return Base64-encoded data.
