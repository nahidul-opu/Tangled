From 58fc35928ea59967b41f0bbce5aed656c0657a47 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rn=20Kottmann?= <joern@apache.org>
Date: Wed, 20 May 2015 12:22:31 +0000
Subject: [PATCH] OPENNLP-778 Added compatibility code path to deal with 1.5.x
 models

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1680541 13f79535-47bb-0310-9956-ffa450edef68
---
 .../opennlp/tools/parser/ParserModel.java     | 29 +++++++++++++++++--
 1 file changed, 27 insertions(+), 2 deletions(-)

diff --git a/opennlp-tools/src/main/java/opennlp/tools/parser/ParserModel.java b/opennlp-tools/src/main/java/opennlp/tools/parser/ParserModel.java
index 0ac401949..84d34daf3 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/parser/ParserModel.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/parser/ParserModel.java
@@ -29,10 +29,12 @@
 import java.util.Map;
 
 import opennlp.tools.chunker.ChunkerModel;
+import opennlp.tools.ml.BeamSearch;
 import opennlp.tools.ml.model.AbstractModel;
 import opennlp.tools.ml.model.MaxentModel;
 import opennlp.tools.postag.POSModel;
 import opennlp.tools.util.InvalidFormatException;
+import opennlp.tools.util.Version;
 import opennlp.tools.util.model.ArtifactSerializer;
 import opennlp.tools.util.model.BaseModel;
 import opennlp.tools.util.model.UncloseableInputStream;
@@ -47,7 +49,20 @@ private static class POSModelSerializer implements ArtifactSerializer<POSModel>
 
     public POSModel create(InputStream in) throws IOException,
         InvalidFormatException {
-      return new POSModel(new UncloseableInputStream(in));
+      POSModel posModel = new POSModel(new UncloseableInputStream(in));
+
+      // The 1.6.x models write the non-default beam size into the model itself.
+      // In 1.5.x the parser configured the beam size when the model was loaded,
+      // this is not possible anymore with the new APIs
+      Version version = posModel.getVersion();
+      if (version.getMajor() == 1 && version.getMinor() == 5) {
+        if (posModel.getManifestProperty(BeamSearch.BEAM_SIZE_PARAMETER) == null) {
+          posModel = new POSModel(posModel.getLanguage(), posModel.getPosModel(), 10,
+              null, posModel.getFactory());
+        }
+      }
+
+      return posModel;
     }
 
     public void serialize(POSModel artifact, OutputStream out)
@@ -60,7 +75,17 @@ private static class ChunkerModelSerializer implements ArtifactSerializer<Chunke
 
     public ChunkerModel create(InputStream in) throws IOException,
         InvalidFormatException {
-      return new ChunkerModel(new UncloseableInputStream(in));
+
+      ChunkerModel model = new ChunkerModel(new UncloseableInputStream(in));
+
+      Version version = model.getVersion();
+      if (version.getMajor() == 1 && version.getMinor() == 5) {
+
+        model = new ChunkerModel(model.getLanguage(), model.getChunkerModel(), new ParserChunkerFactory());
+
+      }
+
+      return model;
     }
 
     public void serialize(ChunkerModel artifact, OutputStream out)
