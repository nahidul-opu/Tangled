From bc0f9d2ea697d21ff85d7ff5267b8a77bdb03df5 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 10 Mar 2011 02:30:07 +0000
Subject: [PATCH] NET-350 "java.net.SocketException: Broken pipe" when calling
 "TelnetClient.sendAYT()" Added SocketClient#isAvailable() method to perform
 additional checks on a socket.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1080108 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  4 +++
 .../org/apache/commons/net/SocketClient.java  | 34 +++++++++++++++++++
 2 files changed, 38 insertions(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index fba61314d..9b8a314dc 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -57,6 +57,10 @@ The <action> type attribute can be add,update,fix,remove.
 
     <body>
         <release version="3.0" date="TBA" description="TBA">
+            <action issue="NET-350" dev="sebb" type="add" due-to="Bogdan Drozdowski" due-to-email="bogdandr # op . pl">
+            "java.net.SocketException: Broken pipe" when calling "TelnetClient.sendAYT()"
+            Added SocketClient#isAvailable() method to perform additional checks on a socket.
+            </action>
             <action issue="NET-237" dev="sebb" type="add">
             Add streaming methods (corresponding to array methods) to NNTPClient.
             </action>
diff --git a/src/main/java/org/apache/commons/net/SocketClient.java b/src/main/java/org/apache/commons/net/SocketClient.java
index ff5b87acf..376b2497b 100644
--- a/src/main/java/org/apache/commons/net/SocketClient.java
+++ b/src/main/java/org/apache/commons/net/SocketClient.java
@@ -325,6 +325,40 @@ public boolean isConnected()
         return _socket_.isConnected();
     }
 
+    /**
+     * Make various checks on the socket to test if it is available for use.
+     * Note that the only sure test is to use it, but these checks may help
+     * in some cases.
+     * @see <a href="https://issues.apache.org/jira/browse/NET-350">NET-350</a>
+     * @return {@code true} if the socket appears to be available for use
+     * @since 3.0
+     */
+    public boolean isAvailable(){
+        if (isConnected()) {
+            try
+            {
+                if (_socket_.getInetAddress() == null) return false;
+                if (_socket_.getPort() == 0) return false;
+                if (_socket_.getRemoteSocketAddress() == null) return false;
+                if (_socket_.isClosed()) return false;
+                /* these aren't exact checks (a Socket can be half-open),
+                   but since we usually require two-way data transfer,
+                   we check these here too: */
+                if (_socket_.isInputShutdown()) return false;
+                if (_socket_.isOutputShutdown()) return false;
+                /* ignore the result, catch exceptions: */
+                _socket_.getInputStream();
+                _socket_.getOutputStream();
+            }
+            catch (IOException ioex)
+            {
+                return false;
+            }            
+            return true;
+        } else {
+            return false;
+        }
+    }
 
     /**
      * Sets the default port the SocketClient should connect to when a port
