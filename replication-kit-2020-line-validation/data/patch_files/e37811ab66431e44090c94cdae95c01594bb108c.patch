From e37811ab66431e44090c94cdae95c01594bb108c Mon Sep 17 00:00:00 2001
From: proflin <proflin.me@gmail.com>
Date: Tue, 12 Jan 2016 14:45:24 -0800
Subject: [PATCH] =?UTF-8?q?PARQUET-422:=20Fix=20a=20potential=20bug=20in?=
 =?UTF-8?q?=20MessageTypeParser=20where=20we=20ignore=E2=80=A6?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

… and overwrite the initial value of a method parameter

In org.apache.parquet.schema.MessageTypeParser, for addGroupType() and addPrimitiveType(), the initial value of this parameter t is ignored, and t is overwritten here.

This often indicates a mistaken belief that the write to the parameter will be conveyed back to the caller.

This is a bug found by FindBugs™.

Author: proflin <proflin.me@gmail.com>

Closes #308 from proflin/PARQUET-422 and squashes the following commits:

df1f908 [proflin] PARQUET-422: Fix a potential bug in MessageTypeParser where we ignore and overwrite the initial value of a method parameter
---
 .../org/apache/parquet/schema/MessageTypeParser.java   | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/parquet-column/src/main/java/org/apache/parquet/schema/MessageTypeParser.java b/parquet-column/src/main/java/org/apache/parquet/schema/MessageTypeParser.java
index 3603c7995f..49813987df 100644
--- a/parquet-column/src/main/java/org/apache/parquet/schema/MessageTypeParser.java
+++ b/parquet-column/src/main/java/org/apache/parquet/schema/MessageTypeParser.java
@@ -106,14 +106,15 @@ private static void addType(String t, Tokenizer st, Types.GroupBuilder builder)
     // Read type.
     String type = st.nextToken();
     if ("group".equalsIgnoreCase(type)) {
-      addGroupType(t, st, repetition, builder);
+      addGroupType(st, repetition, builder);
     } else {
-      addPrimitiveType(t, st, asPrimitive(type, st), repetition, builder);
+      addPrimitiveType(st, asPrimitive(type, st), repetition, builder);
     }
   }
 
-  private static void addGroupType(String t, Tokenizer st, Repetition r, GroupBuilder<?> builder) {
+  private static void addGroupType(Tokenizer st, Repetition r, GroupBuilder<?> builder) {
     GroupBuilder<?> childBuilder = builder.group(r);
+    String t;
     String name = st.nextToken();
 
     // Read annotation, if any.
@@ -138,8 +139,9 @@ private static void addGroupType(String t, Tokenizer st, Repetition r, GroupBuil
     childBuilder.named(name);
   }
 
-  private static void addPrimitiveType(String t, Tokenizer st, PrimitiveTypeName type, Repetition r, Types.GroupBuilder<?> builder) {
+  private static void addPrimitiveType(Tokenizer st, PrimitiveTypeName type, Repetition r, Types.GroupBuilder<?> builder) {
     PrimitiveBuilder<?> childBuilder = builder.primitive(type, r);
+    String t;
 
     if (type == PrimitiveTypeName.FIXED_LEN_BYTE_ARRAY) {
       t = st.nextToken();
