From ea0ea8267309e94a8f2393829cbf1c1669abf5c9 Mon Sep 17 00:00:00 2001
From: Luc Maisonobe <luc@apache.org>
Date: Tue, 7 Jul 2009 13:39:20 +0000
Subject: [PATCH] added a test case and documentation for the new contract
 about roots bracketing in univariate real solvers (roots exactly at endpoints
 are now accepted) JIRA: MATH-280

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@791833 13f79535-47bb-0310-9956-ffa450edef68
---
 .../analysis/solvers/UnivariateRealSolver.java   | 16 ++++++++++++----
 src/site/xdoc/changes.xml                        |  4 +++-
 .../solvers/UnivariateRealSolverUtilsTest.java   |  6 ++++++
 3 files changed, 21 insertions(+), 5 deletions(-)

diff --git a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java
index cea586c089..644d16a08d 100644
--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java
+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java
@@ -60,7 +60,9 @@ public interface UnivariateRealSolver extends ConvergingAlgorithm {
 
     /**
      * Solve for a zero root in the given interval.
-     * A solver may require that the interval brackets a single zero root.
+     * <p>A solver may require that the interval brackets a single zero root.
+     * Solvers that do require bracketing should be able to handle the case
+     * where one of the endpoints is itself a root.</p>
      * 
      * @param min the lower bound for the interval.
      * @param max the upper bound for the interval.
@@ -80,7 +82,9 @@ public interface UnivariateRealSolver extends ConvergingAlgorithm {
 
     /**
      * Solve for a zero root in the given interval.
-     * A solver may require that the interval brackets a single zero root.
+     * <p>A solver may require that the interval brackets a single zero root.
+     * Solvers that do require bracketing should be able to handle the case
+     * where one of the endpoints is itself a root.</p>
      * 
      * @param f the function to solve.
      * @param min the lower bound for the interval.
@@ -100,7 +104,9 @@ public interface UnivariateRealSolver extends ConvergingAlgorithm {
 
     /**
      * Solve for a zero in the given interval, start at startValue.
-     * A solver may require that the interval brackets a single zero root.
+     * <p>A solver may require that the interval brackets a single zero root.
+     * Solvers that do require bracketing should be able to handle the case
+     * where one of the endpoints is itself a root.</p>
      * 
      * @param min the lower bound for the interval.
      * @param max the upper bound for the interval.
@@ -121,7 +127,9 @@ public interface UnivariateRealSolver extends ConvergingAlgorithm {
 
     /**
      * Solve for a zero in the given interval, start at startValue.
-     * A solver may require that the interval brackets a single zero root.
+     * <p>A solver may require that the interval brackets a single zero root.
+     * Solvers that do require bracketing should be able to handle the case
+     * where one of the endpoints is itself a root.</p>
      * 
      * @param f the function to solve.
      * @param min the lower bound for the interval.
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index e25385370b..92263e0bb0 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -40,7 +40,9 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
     <release version="2.0" date="TBD" description="TBD">
       <action dev="luc" type="fix" issue="MATH-280">
-        Fixed a bracketing issue in inverse cumulative probability computation
+        The behavior of the bracket method in UnivariateRealSolverUtils has been changed to return successfully
+        when a tentative bracketing interval has a root exactly at one of its end points. Previously, such intervals
+        triggered an exception.
       </action>
       <action dev="luc" type="add" issue="MATH-279" due-to="Michael Bjorkegren">
         Added a check for too few rows with respect to the number of predictors in linear regression
diff --git a/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java b/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java
index e87094ff32..e606b40af5 100644
--- a/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java
+++ b/src/test/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java
@@ -90,6 +90,12 @@ public void testBracketSin() throws MathException {
         assertTrue(sin.value(result[1]) > 0);
     }
     
+    public void testBracketEndpointRoot() throws MathException {
+        double[] result = UnivariateRealSolverUtils.bracket(sin, 1.5, 0, 2.0);
+        assertEquals(0.0, sin.value(result[0]), 1.0e-15);
+        assertTrue(sin.value(result[1]) > 0);
+    }
+    
     public void testBadParameters() throws MathException {
         try { // null function
             UnivariateRealSolverUtils.bracket(null, 1.5, 0, 2.0);
