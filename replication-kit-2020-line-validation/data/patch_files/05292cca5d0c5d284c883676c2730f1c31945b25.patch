From 05292cca5d0c5d284c883676c2730f1c31945b25 Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Thu, 27 Dec 2012 18:04:18 +0000
Subject: [PATCH] COMPRESS-200 - passing test case, will ask for more info

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426276 13f79535-47bb-0310-9956-ffa450edef68
---
 .../tar/TarArchiveOutputStreamTest.java       | 37 ++++++++++++++++++-
 1 file changed, 36 insertions(+), 1 deletion(-)

diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java
index bcfdf3d3b9a..9459eaf30c3 100644
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java
@@ -337,4 +337,39 @@ public void testWriteNonAsciiLinkPathNamePaxHeader() throws Exception {
         tin.close();
     }
 
-}
\ No newline at end of file
+    /**
+     * @see https://issues.apache.org/jira/browse/COMPRESS-200
+     */
+    public void testRoundtripWith66CharFileNameGnu() throws Exception {
+        testRoundtripWith66CharFileName(TarArchiveOutputStream.LONGFILE_GNU);
+    }
+
+    /**
+     * @see https://issues.apache.org/jira/browse/COMPRESS-200
+     */
+    public void testRoundtripWith66CharFileNamePosix() throws Exception {
+        testRoundtripWith66CharFileName(TarArchiveOutputStream.LONGFILE_POSIX);
+    }
+
+    private void testRoundtripWith66CharFileName(int mode) throws Exception {
+        String n = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
+            + "AAAAAAA";
+        assertEquals(67, n.length());
+        TarArchiveEntry t = new TarArchiveEntry(n);
+        t.setSize(10 * 1024);
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        TarArchiveOutputStream tos = new TarArchiveOutputStream(bos);
+        tos.setLongFileMode(mode);
+        tos.putArchiveEntry(t);
+        tos.write(new byte[10 * 1024]);
+        tos.closeArchiveEntry();
+        byte[] data = bos.toByteArray();
+        TarArchiveInputStream tin =
+            new TarArchiveInputStream(new ByteArrayInputStream(data));
+        TarArchiveEntry e = tin.getNextTarEntry();
+        assertEquals(n, e.getName());
+        tin.close();
+        tos.close();
+    }
+
+}
