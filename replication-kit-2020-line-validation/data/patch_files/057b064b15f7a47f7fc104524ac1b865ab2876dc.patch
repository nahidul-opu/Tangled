From 057b064b15f7a47f7fc104524ac1b865ab2876dc Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Mon, 1 Aug 2011 20:28:03 +0000
Subject: [PATCH] [CONFIGURATION-458] Provide a specific implementation of
 clear() in HierarchicalConfiguration.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@1152923 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  5 ++++
 .../HierarchicalConfiguration.java            | 14 ++++++++++
 .../TestHierarchicalConfiguration.java        | 26 +++++++++++++++++++
 3 files changed, 45 insertions(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index b121a3de39..4723963a77 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -23,6 +23,11 @@
 
   <body>
     <release version="1.7" date="in SVN" description="">
+      <action dev="oheger" type="add" issue="CONFIGURATION-458">
+        HierarchicalConfiguration now provides a specific implementation of the
+        clear() method. This is more efficient and also solves some other
+        problems related to clearing a SubnodeConfiguration.
+      </action>
       <action dev="oheger" type="add" issue="CONFIGURATION-452">
         XPathExpressionEngine now provides better support for the setProperty()
         method.
diff --git a/src/java/org/apache/commons/configuration/HierarchicalConfiguration.java b/src/java/org/apache/commons/configuration/HierarchicalConfiguration.java
index 34d3fd6de2..e0a0217000 100644
--- a/src/java/org/apache/commons/configuration/HierarchicalConfiguration.java
+++ b/src/java/org/apache/commons/configuration/HierarchicalConfiguration.java
@@ -769,6 +769,20 @@ public void setProperty(String key, Object value)
         fireEvent(EVENT_SET_PROPERTY, key, value, false);
     }
 
+    /**
+     * Clears this configuration. This is a more efficient implementation than
+     * the one inherited from the base class. It directly removes all data from
+     * the root node.
+     */
+    public void clear()
+    {
+        fireEvent(EVENT_CLEAR, null, null, true);
+        getRootNode().removeAttributes();
+        getRootNode().removeChildren();
+        getRootNode().setValue(null);
+        fireEvent(EVENT_CLEAR, null, null, false);
+    }
+
     /**
      * Removes all values of the property with the given name and of keys that
      * start with this name. So if there is a property with the key
diff --git a/src/test/org/apache/commons/configuration/TestHierarchicalConfiguration.java b/src/test/org/apache/commons/configuration/TestHierarchicalConfiguration.java
index 61321c6b88..4c19a7f2df 100644
--- a/src/test/org/apache/commons/configuration/TestHierarchicalConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestHierarchicalConfiguration.java
@@ -189,6 +189,14 @@ public void testSetProperty()
         assertEquals(42, config.getInt("test.items.item"));
     }
 
+    public void testClear()
+    {
+        config.setProperty(null, "value");
+        config.addProperty("[@attr]", "defined");
+        config.clear();
+        assertTrue("Configuration not empty", config.isEmpty());
+    }
+
     public void testClearProperty()
     {
         config.clearProperty("tables.table(0).fields.field(0).name");
@@ -579,6 +587,24 @@ public void testConfigurationAtMultipleNodes()
         }
     }
 
+    /**
+     * Tests whether a sub configuration obtained by configurationAt() can be
+     * cleared.
+     */
+    public void testConfigurationAtClear()
+    {
+        config.addProperty("test.sub.test", "fail");
+        assertEquals("Wrong index (1)", 0, config.getMaxIndex("test"));
+        SubnodeConfiguration sub = config.configurationAt("test.sub");
+        assertEquals("Wrong value", "fail", sub.getString("test"));
+        sub.clear();
+        assertNull("Key still found", config.getString("test.sub.key"));
+        sub.setProperty("test", "success");
+        assertEquals("Property not set", "success",
+                config.getString("test.sub.test"));
+        assertEquals("Wrong index (2)", 0, config.getMaxIndex("test"));
+    }
+
     /**
      * Tests the configurationsAt() method.
      */
