From 9fb296cd8998d69593947bbbeabfa2dd3faa4511 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Tue, 11 Nov 2008 21:02:37 +0000
Subject: [PATCH] CONFIGURATION-349: Changed visibility of
 DefaultConfigurationBuilder.XMLConfigurationProvider from package local to
 public to allow for better extensibility. Thanks to Ralph Goers for the
 patch.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@713166 13f79535-47bb-0310-9956-ffa450edef68
---
 conf/testExtendedXMLConfigurationProvider.xml | 38 +++++++++++++++++++
 .../DefaultConfigurationBuilder.java          |  4 +-
 .../TestDefaultConfigurationBuilder.java      | 27 +++++++++++++
 xdocs/changes.xml                             |  6 +++
 4 files changed, 74 insertions(+), 1 deletion(-)
 create mode 100644 conf/testExtendedXMLConfigurationProvider.xml

diff --git a/conf/testExtendedXMLConfigurationProvider.xml b/conf/testExtendedXMLConfigurationProvider.xml
new file mode 100644
index 0000000000..0a9df06d72
--- /dev/null
+++ b/conf/testExtendedXMLConfigurationProvider.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="ISO-8859-1" ?>
+<!-- Test configuration definition file that demonstrates complex initialization -->
+<configuration>
+  <header>
+    <result delimiterParsingDisabled="true">
+      <nodeCombiner config-class="org.apache.commons.configuration.tree.OverrideCombiner"/>
+      <expressionEngine config-class="org.apache.commons.configuration.tree.xpath.XPathExpressionEngine"/>
+    </result>
+    <providers>
+      <provider config-tag="test"
+                config-class="org.apache.commons.configuration.DefaultConfigurationBuilder$XMLConfigurationProvider"
+                configurationClass="org.apache.commons.configuration.TestDefaultConfigurationBuilder$ExtendedXMLConfiguration"/>
+    </providers>
+    <combiner>
+      <override>
+        <list-nodes>
+          <node>table</node>
+          <node>list</node>
+        </list-nodes>
+      </override>
+    </combiner>
+  </header>
+  <system/>
+  <properties fileName="test.properties" throwExceptionOnMissing="true"
+    config-name="properties">
+    <reloadingStrategy config-class="org.apache.commons.configuration.reloading.FileChangedReloadingStrategy"
+      refreshDelay="10000"/>
+  </properties>
+  <!-- Fetch the file name from a variable -->
+  <test fileName="${test_file_xml}" config-name="xml">
+    <expressionEngine config-class="org.apache.commons.configuration.tree.DefaultExpressionEngine"
+      propertyDelimiter="/" indexStart="[" indexEnd="]"/>
+  </test>
+  <additional>
+    <xml config-name="combiner1" fileName="${test_file_combine}"/>  -->
+    <xml config-name="combiner2" fileName="testcombine2.xml"/>
+  </additional>
+</configuration>
\ No newline at end of file
diff --git a/src/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java b/src/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
index f553aa6bed..b5ed1748fa 100644
--- a/src/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
+++ b/src/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
@@ -1281,8 +1281,10 @@ protected void initBeanInstance(Object bean, BeanDeclaration data)
      * implementation acts like a <code>FileConfigurationProvider</code>, but
      * it will copy all entity IDs that have been registered for the
      * configuration builder to the new XML configuration before it is loaded.
+     *
+     * @since 1.6
      */
-    static class XMLConfigurationProvider extends FileConfigurationProvider
+    public static class XMLConfigurationProvider extends FileConfigurationProvider
     {
         /**
          * Creates a new instance of <code>XMLConfigurationProvider</code>.
diff --git a/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java b/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
index f59583f634..618c52dcf8 100644
--- a/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
+++ b/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
@@ -61,6 +61,9 @@ public class TestDefaultConfigurationBuilder extends TestCase
     private static final File PROVIDER_FILE = new File(
             "conf/testConfigurationProvider.xml");
 
+    private static final File EXTENDED_PROVIDER_FILE = new File(
+            "conf/testExtendedXMLConfigurationProvider.xml");
+
     /** Constant for the name of an optional configuration.*/
     private static final String OPTIONAL_NAME = "optionalConfig";
 
@@ -775,6 +778,22 @@ public void testConfigurationProvider() throws ConfigurationException
         assertNotNull("Provider 'test' not registered", provider);
     }
 
+        /**
+     * Tests loading a configuration definition file that defines new providers.
+     */
+    public void testExtendedXMLConfigurationProvider() throws ConfigurationException
+    {
+        factory.setFile(EXTENDED_PROVIDER_FILE);
+        CombinedConfiguration cc = factory.getConfiguration(true);
+        DefaultConfigurationBuilder.ConfigurationProvider provider = factory
+                .providerForTag("test");
+        assertNotNull("Provider 'test' not registered", provider);
+        Configuration config = cc.getConfiguration("xml");
+        assertNotNull("Test configuration not present", config);
+        assertTrue("Configuration is not ExtendedXMLConfiguration, is " +
+                config.getClass().getName(), config instanceof ExtendedXMLConfiguration);
+    }
+
     /**
      * A specialized combined configuration implementation used for testing
      * custom result classes.
@@ -796,5 +815,13 @@ public Object getProperty(String key)
             return super.getProperty(key);
         }
     }
+
+    public static class ExtendedXMLConfiguration extends XMLConfiguration
+    {
+        public ExtendedXMLConfiguration()
+        {
+        }
+
+    }
 }
 
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 3db6dc34db..f4e387506e 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,12 @@
 
   <body>
     <release version="1.6" date="in SVN" description="">
+      <action dev="oheger" type="add" issue="CONFIGURATION-349" due-to="Ralph Goers">
+        The visibility of DefaultConfigurationBuilder.XMLConfigurationProvider
+        was changed from package local to public. This makes it easier to
+        implement providers that create configuration classes derived from
+        XMLConfiguration.
+      </action>
       <action dev="oheger" type="fix" issue="CONFIGURATION-348">
         AbstractHierarchicalFileConfiguration.getKeys() now also checks whether
         a reload is required.
