From 9fc7e85de43213ae797b27dea5005c0cd58a943d Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 3 Mar 2011 01:26:16 +0000
Subject: [PATCH] NET-345 Telnet client: not properly handling IAC bytes within
 subnegotiation messages.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1076483 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  7 ++++++-
 .../org/apache/commons/net/telnet/Telnet.java | 19 ++++++++++---------
 .../commons/net/telnet/TelnetInputStream.java | 17 ++++++++++++-----
 3 files changed, 28 insertions(+), 15 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index c984c6bda..70a78fa88 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -54,7 +54,12 @@ The <action> type attribute can be add,update,fix,remove.
 
     <body>
         <release version="3.0" date="TBA" description="TBA">
-            <action issue="NET-343" dev="sebb" type="add">
+            <action issue="NET-345" dev="sebb" type="fix" due-to="Archie Cobbs">
+            Telnet client: not properly handling IAC bytes within subnegotiation messages:
+            - failing to double IACs on output
+            - failing to de-double IACs in input
+            </action>
+            <action issue="NET-343" dev="sebb" type="add" due-to="Archie Cobbs">
             Telnet client: Support Client-initiated Subnegotiation Messages.
             </action>
             <action issue="NET-270" dev="sebb" type="fix">
diff --git a/src/main/java/org/apache/commons/net/telnet/Telnet.java b/src/main/java/org/apache/commons/net/telnet/Telnet.java
index 74bf34a75..91f0db034 100644
--- a/src/main/java/org/apache/commons/net/telnet/Telnet.java
+++ b/src/main/java/org/apache/commons/net/telnet/Telnet.java
@@ -21,6 +21,8 @@
 import java.io.BufferedOutputStream;
 import java.io.OutputStream;
 import java.io.IOException;
+import java.util.Arrays;
+
 import org.apache.commons.net.SocketClient;
 
 /**
@@ -782,22 +784,21 @@ final synchronized void _sendSubnegotiation(int subn[])
             System.err.println("SEND SUBNEGOTIATION: ");
             if (subn != null)
             {
-                for (int ii = 0; ii < subn.length; ii++)
-                {
-                    System.err.println("subn["  + ii + "]=" + subn[ii]);
-                }
+                System.err.println(Arrays.toString(subn));
             }
         }
         if (subn != null)
         {
-            byte byteresp[] = new byte[subn.length];
+            _output_.write(_COMMAND_SB);
+            // Note _output_ is buffered, so might as well simplify by writing single bytes
             for (int ii = 0; ii < subn.length; ii++)
             {
-                byteresp[ii] = (byte) subn[ii];
+                byte b = (byte) subn[ii];
+                if (b == TelnetCommand.IAC) {
+                    _output_.write(b); // double any IAC bytes
+                }
+                _output_.write(b);
             }
-
-            _output_.write(_COMMAND_SB);
-            _output_.write(byteresp);
             _output_.write(_COMMAND_SE);
 
             /* Code Section added for sending the negotiation ASAP (start)*/
diff --git a/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java b/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java
index e49965ed7..3e572c582 100644
--- a/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java
+++ b/src/main/java/org/apache/commons/net/telnet/TelnetInputStream.java
@@ -211,6 +211,9 @@ private int __read(boolean mayBlock) throws IOException
                 case TelnetCommand.IAC:
                     __receiveState = _STATE_DATA;
                     break; // exit to enclosing switch to return IAC from read
+                case TelnetCommand.SE: // unexpected byte! ignore it (don't send it as a command)
+                    __receiveState = _STATE_DATA;
+                    continue;
                 default:
                     __receiveState = _STATE_DATA;
                     __client._processCommand(ch); // Notify the user
@@ -258,12 +261,13 @@ private int __read(boolean mayBlock) throws IOException
                     continue;
                 default:
                     // store suboption char
-                    __suboption[__suboption_count++] = ch;
+                    if (__suboption_count < __suboption.length)
+                        __suboption[__suboption_count++] = ch;
                     break;
                 }
                 __receiveState = _STATE_SB;
                 continue;
-            case _STATE_IAC_SB:
+            case _STATE_IAC_SB: // IAC received during SB phase
                 switch (ch)
                 {
                 case TelnetCommand.SE:
@@ -274,11 +278,14 @@ private int __read(boolean mayBlock) throws IOException
                     }
                     __receiveState = _STATE_DATA;
                     continue;
-                default:
-                    __receiveState = _STATE_SB;
+                case TelnetCommand.IAC: // De-dup the duplicated IAC
+                    if (__suboption_count < __suboption.length)
+                        __suboption[__suboption_count++] = ch;
+                    break;
+                default:            // unexpected byte! ignore it
                     break;
                 }
-                __receiveState = _STATE_DATA;
+                __receiveState = _STATE_SB;
                 continue;
             /* TERMINAL-TYPE option (end)*/
             }
