From cd20d69f5369dd661c8eed5e7f9f924aeaf11ee4 Mon Sep 17 00:00:00 2001
From: Niall Kegan Pemberton <niallp@apache.org>
Date: Tue, 30 May 2006 17:41:51 +0000
Subject: [PATCH] Fix for VALIDATOR-189 - Validating indexed properties fails
 when null - thanks to Thomas Bailey

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/validator/trunk@410326 13f79535-47bb-0310-9956-ffa450edef68
---
 .../org/apache/commons/validator/Field.java   | 35 ++++++++++++++++++-
 xdocs/changes.xml                             |  3 ++
 2 files changed, 37 insertions(+), 1 deletion(-)

diff --git a/src/share/org/apache/commons/validator/Field.java b/src/share/org/apache/commons/validator/Field.java
index dfaba2e67..d731a0c7a 100644
--- a/src/share/org/apache/commons/validator/Field.java
+++ b/src/share/org/apache/commons/validator/Field.java
@@ -739,6 +739,39 @@ Object[] getIndexedProperty(Object bean) throws ValidatorException {
             throw new ValidatorException(this.getKey() + " is not indexed");
         }
 
+    }
+    /**
+     * Returns the size of an indexed property from the object we're validating.
+     *
+     * @param bean The bean to extract the indexed values from.
+     * @throws ValidatorException If there's an error looking up the property 
+     * or, the property found is not indexed.
+     */
+    private int getIndexedPropertySize(Object bean) throws ValidatorException {
+        Object indexedProperty = null;
+
+        try {
+            indexedProperty =
+                PropertyUtils.getProperty(bean, this.getIndexedListProperty());
+
+        } catch(IllegalAccessException e) {
+            throw new ValidatorException(e.getMessage());
+        } catch(InvocationTargetException e) {
+            throw new ValidatorException(e.getMessage());
+        } catch(NoSuchMethodException e) {
+            throw new ValidatorException(e.getMessage());
+        }
+
+        if (indexedProperty == null) {
+            return 0;
+        } else if (indexedProperty instanceof Collection) {
+            return ((Collection)indexedProperty).size();
+        } else if (indexedProperty.getClass().isArray()) {
+            return ((Object[])indexedProperty).length;
+        } else {
+            throw new ValidatorException(this.getKey() + " is not indexed");
+        }
+
     }
     
     /**
@@ -829,7 +862,7 @@ public ValidatorResults validate(Map params, Map actions)
 
         Object bean = params.get(Validator.BEAN_PARAM);
         int numberOfFieldsToValidate =
-            this.isIndexed() ? this.getIndexedProperty(bean).length : 1;
+            this.isIndexed() ? this.getIndexedPropertySize(bean) : 1;
 
         for (int fieldNumber = 0; fieldNumber < numberOfFieldsToValidate; fieldNumber++) {
             
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index a858a3d9a..e7b85615c 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -39,6 +39,9 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
 
     <release version="1.3.1" date="Pending">
+      <action dev="niallp" type="fix" issue="VALIDATOR-189" due-to="Thomas Bailey">
+        Validating indexed properties fails when <code>null</code>.
+      </action>
       <action dev="martinc" type="fix" issue="VALIDATOR-89" due-to="Takayuki Kaneko">
         Fix a thread safety issue in parameter initialization.
       </action>
