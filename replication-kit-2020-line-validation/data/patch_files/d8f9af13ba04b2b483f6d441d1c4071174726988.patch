From d8f9af13ba04b2b483f6d441d1c4071174726988 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 23 Mar 2017 23:51:01 +0000
Subject: [PATCH] NET-631 Bug in MVSFTPEntryParser.parseUnixList (FindBugs)

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1788347 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  3 +++
 .../net/ftp/parser/MVSFTPEntryParser.java     | 17 +-------------
 .../net/ftp/parser/MVSFTPEntryParserTest.java | 23 ++++++++++++++++++-
 3 files changed, 26 insertions(+), 17 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index c53e3f690..fa81eb4b6 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -71,6 +71,9 @@ This is mainly a bug-fix release. See further details below.
  However it is not source compatible with releases before 3.4, as some methods were added to the interface NtpV3Packet in 3.4
         
 ">
+            <action issue="NET-631" type="fix" dev="sebb">
+            Bug in MVSFTPEntryParser.parseUnixList (FindBugs)
+            </action>
             <action issue="NET-584" type="fix" dev="sebb" due-to="Kazantsev Andrey Sergeevich/Nick Manley">
             Error when using org.apache.commons.net.ftp.FTPClient setControlKeepAliveTimeout
             </action>
diff --git a/src/main/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParser.java b/src/main/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParser.java
index 7251618ff..b8f347a3e 100644
--- a/src/main/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParser.java
+++ b/src/main/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParser.java
@@ -271,7 +271,7 @@ public FTPFile parseFTPEntry(String entry) {
                 isParsed = parseSimpleEntry(f, entry);
             }
         } else if (isType == UNIX_LIST_TYPE) {
-            isParsed = parseUnixList(f, entry);
+            return unixFTPEntryParser.parseFTPEntry(entry);
         } else if (isType == JES_LEVEL_1_LIST_TYPE) {
             isParsed = parseJeslevel1List(f, entry);
         } else if (isType == JES_LEVEL_2_LIST_TYPE) {
@@ -401,21 +401,6 @@ private boolean parseSimpleEntry(FTPFile file, String entry) {
         return false;
     }
 
-    /**
-     * Parse the entry as a standard unix file. Using the UnixFTPEntryParser.
-     *
-     * @param file
-     * @param entry
-     * @return true: entry is parsed, false: entry could not be parsed.
-     */
-    private boolean parseUnixList(FTPFile file, String entry) {
-        file = unixFTPEntryParser.parseFTPEntry(entry);
-        if (file == null) {
-            return false;
-        }
-        return true;
-    }
-
     /**
      * Matches these entries, note: no header:
      * <pre>
diff --git a/src/test/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParserTest.java b/src/test/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParserTest.java
index 587d7c15a..67daca57a 100644
--- a/src/test/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParserTest.java
+++ b/src/test/java/org/apache/commons/net/ftp/parser/MVSFTPEntryParserTest.java
@@ -17,6 +17,7 @@
 package org.apache.commons.net.ftp.parser;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 
 import org.apache.commons.net.ftp.FTPFile;
@@ -63,6 +64,12 @@ public class MVSFTPEntryParserTest extends FTPParseTestFramework {
             "IBMUSER2 JOB01906 IBMUSER  OUTPUT A        RC=0000 3 spool files",
             "IBMUSER  TSU01830 IBMUSER  OUTPUT TSU      ABEND=522 3 spool files", };
 
+    private static final String[] goodsamplesUnixList = {
+            "total 1234",
+            "-rwxr-xr-x   2 root     root         4096 Mar  2 15:13 zxbox",
+            "drwxr-xr-x   2 root     root         4096 Aug 24  2001 zxjdbc",
+            };
+
     private static final String[] badsamples = {
             "MigratedP201.$FTXPBI1.$CF2ITB.$AAB0402.I",
             "PSMLC133902005/04/041VB2799427998PSfile1.I", "file2.O", };
@@ -97,7 +104,7 @@ protected List<String[]> getAllGoodListings() {
         l.add(goodsamplesMemberList);
         l.add(goodsamplesJES1List);
         l.add(goodsamplesJES2List);
-
+        l.add(goodsamplesUnixList);
         return l;
     }
 
@@ -163,6 +170,20 @@ public void testJesLevel2Listing() {
         }
     }
 
+    public void testUnixListings() {
+        MVSFTPEntryParser parser = new MVSFTPEntryParser();
+        List<String> list = new ArrayList<String>();
+        Collections.addAll(list, goodsamplesUnixList);
+        parser.preParse(list);
+        for (String test : list) {
+            FTPFile f = parser.parseFTPEntry(test);
+            assertNotNull("Failed to parse " + test, f);
+            assertNotNull("Failed to parse name " + test, f.getName());
+            assertNotNull("Failed to parse group " + test, f.getGroup());
+            assertNotNull("Failed to parse user " + test, f.getUser());
+        }
+    }
+
     @Override
     public void testParseFieldsOnDirectory() throws Exception {
         MVSFTPEntryParser parser = new MVSFTPEntryParser();
