From 51219169df2367a8cc1b4a612b6c9d569c29173e Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Tue, 18 Mar 2008 22:53:31 +0000
Subject: [PATCH] FIX: NPE when specifying both resolveId and inline in an
 Ivy:Resolve (IVY-776)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@638627 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                      |  1 +
 src/java/org/apache/ivy/ant/IvyResolve.java      | 10 ++++++----
 test/java/org/apache/ivy/ant/IvyResolveTest.java | 16 ++++++++++++++++
 3 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index 851a16dbd..7b769c5be 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -73,6 +73,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Parse description and home page from poms (IVY-767)
 - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher
 
+- FIX: NPE when specifying both resolveId and inline in an Ivy:Resolve (IVY-776)
 - FIX: repreport task not working against a repository structured by branches (IVY-716)
 - FIX: Ivy reports a conflict when the same file is supposed to be retrieved at the same location twice (or more) (IVY-743)
 - FIX: StackOverflowError when configuration extends itself (IVY-696)
diff --git a/src/java/org/apache/ivy/ant/IvyResolve.java b/src/java/org/apache/ivy/ant/IvyResolve.java
index 3e5f435af..1e2c554ec 100644
--- a/src/java/org/apache/ivy/ant/IvyResolve.java
+++ b/src/java/org/apache/ivy/ant/IvyResolve.java
@@ -299,10 +299,12 @@ public void doExecute() throws BuildException {
                                 .setProperty("ivy.resolved.configurations." + resolveId, conf);
                         settings.setVariable("ivy.resolved.configurations." + resolveId, conf);
                     }
-                    getProject().setProperty("ivy.resolved.file." + resolveId,
-                        file.getAbsolutePath());
-                    settings
-                            .setVariable("ivy.resolved.file." + resolveId, file.getAbsolutePath());
+                    if (file != null) {
+                        getProject().setProperty("ivy.resolved.file." + resolveId,
+                            file.getAbsolutePath());
+                        settings
+                                .setVariable("ivy.resolved.file." + resolveId, file.getAbsolutePath());
+                    }
                 }
             }
         } catch (MalformedURLException e) {
diff --git a/test/java/org/apache/ivy/ant/IvyResolveTest.java b/test/java/org/apache/ivy/ant/IvyResolveTest.java
index 3cc1cd45c..57f2e0213 100644
--- a/test/java/org/apache/ivy/ant/IvyResolveTest.java
+++ b/test/java/org/apache/ivy/ant/IvyResolveTest.java
@@ -115,6 +115,22 @@ public void testInline() throws Exception {
         assertTrue(getArchiveFileInCache("org1", "mod1.2", "2.0", "mod1.2", "jar", "jar").exists());
     }
 
+    public void testInlineWithResolveId() throws Exception {
+        // same as before, but expressing dependency directly without ivy file
+        resolve.setOrganisation("org1");
+        resolve.setModule("mod1.2");
+        resolve.setRevision("2.0");
+        resolve.setInline(true);
+        resolve.setResolveId("testInlineWithResolveId");
+        resolve.setKeep(true);
+        resolve.execute();
+
+        // dependencies
+        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance("org1", "mod1.2", "2.0"))
+                .exists());
+        assertTrue(getArchiveFileInCache("org1", "mod1.2", "2.0", "mod1.2", "jar", "jar").exists());
+    }
+
     public void testInlineForNonExistingModule() throws Exception {
         resolve.setOrganisation("org1XX");
         resolve.setModule("mod1.2");
