From ef0e3797ad9e410b445e608e7b0e7593fe68a7a5 Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Sat, 6 Jan 2007 12:11:11 +0000
Subject: [PATCH] =?UTF-8?q?FIX:=20Urlresolver=20is=20not=20possible=20to?=
 =?UTF-8?q?=20use=20dynamic=20revisions=20on=20nonstandard=20repository=20?=
 =?UTF-8?q?structure=20(IVY-350)=20(thanks=20to=20Pierre=20H=C3=A4gnestran?=
 =?UTF-8?q?d)?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@493454 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                      |  1 +
 .../fr/jayasoft/ivy/resolver/ResolverHelper.java | 16 ++++++----------
 2 files changed, 7 insertions(+), 10 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index e6d2294de..434a4aaeb 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -14,6 +14,7 @@ for detailed view of each issue, please consult http://jira.jayasoft.org/
 - FIX: IOException during publish causes NullPointerException (IVY-371)
 - FIX: Comments in ivy.xml duplicated (IVY-336) (thanks to Gilles Scokart)
 - FIX: Ivy failure when the ivy.xml file contains non US-ASCII characters (IVY-346) (thanks to Gilles Scokart)
+- FIX: Urlresolver is not possible to use dynamic revisions on nonstandard repository structure (IVY-350) (thanks to Pierre Hägnestrand)
 
    version 1.4.1 - 2006-11-09
 =====================================
diff --git a/src/java/fr/jayasoft/ivy/resolver/ResolverHelper.java b/src/java/fr/jayasoft/ivy/resolver/ResolverHelper.java
index 32cf7aeca..49d72b080 100644
--- a/src/java/fr/jayasoft/ivy/resolver/ResolverHelper.java
+++ b/src/java/fr/jayasoft/ivy/resolver/ResolverHelper.java
@@ -56,13 +56,11 @@ public static String[] listTokenValues(Repository rep, String pattern, String to
                     } else {
                         namePattern = pattern.substring(slashIndex + 1);
                     }
-                    String acceptNamePattern = IvyPatternHelper.substituteToken(namePattern, token, "(.+)");
-                    Pattern p = Pattern.compile(acceptNamePattern);
+                    String acceptNamePattern = ".*"+IvyPatternHelper.substituteToken(namePattern, token, "([^"+fileSep+"]+)")+".*";
+                    Pattern p = Pattern.compile(acceptNamePattern.toString());
                     for (Iterator iter = all.iterator(); iter.hasNext();) {
                         String path = (String)iter.next();
-                        int pathSlashIndex = path.lastIndexOf(fileSep);
-                        String name = pathSlashIndex == -1 ? path : path.substring(pathSlashIndex+1);
-                        Matcher m = p.matcher(name);
+                        Matcher m = p.matcher(path);
                         if (m.matches()) {
                             String value = m.group(1);
                             ret.add(value);
@@ -231,14 +229,12 @@ public static String[] listTokenValues(URLLister lister, String pattern, String
                     } else {
                         namePattern = pattern.substring(slashIndex + 1);
                     }
-                    String acceptNamePattern = IvyPatternHelper.substituteToken(namePattern, token, "(.+)");
-                    Pattern p = Pattern.compile(acceptNamePattern);
+                    String acceptNamePattern = ".*"+IvyPatternHelper.substituteToken(namePattern, token, "([^/]+)")+".*";
+                    Pattern p = Pattern.compile(acceptNamePattern.toString());
                     for (Iterator iter = all.iterator(); iter.hasNext();) {
                         URL url = (URL)iter.next();
                         String path = standardize(url.getPath());
-                        int pathSlashIndex = path.lastIndexOf('/');
-                        String name = pathSlashIndex == -1 ? path : path.substring(pathSlashIndex+1);
-                        Matcher m = p.matcher(name);
+                        Matcher m = p.matcher(path);
                         if (m.matches()) {
                             String value = m.group(1);
                             ret.add(value);
