From 0cee0fe1d42f73933d8fdfedfe91bff8013f0bb3 Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Fri, 4 Jan 2013 15:57:10 +0000
Subject: [PATCH] [IO-362] IOUtils.contentEquals* methods returns false if
 input1 == input2, should return true.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1428941 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  5 ++-
 .../java/org/apache/commons/io/IOUtils.java   | 11 +++++-
 .../apache/commons/io/IOUtilsTestCase.java    | 39 +++++++++++++++++++
 3 files changed, 53 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index cd618f95822..299dd413c45 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -46,7 +46,10 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <!-- The release date is the date RC is cut -->
-    <release version="2.5" date="201?-??-??" description="New features and bug fixes.">    
+    <release version="2.5" date="2013-??-??" description="New features and bug fixes.">    
+      <action issue="IO-362" dev="ggregory" type="fix" due-to="mmadson, ggregory">
+        IOUtils.contentEquals* methods returns false if input1 == input2, should return true.
+      </action>            
       <action issue="IO-361" dev="ggregory" type="add">
         Add API FileUtils.forceMkdirsParent().
       </action>            
diff --git a/src/main/java/org/apache/commons/io/IOUtils.java b/src/main/java/org/apache/commons/io/IOUtils.java
index 757488d4788..5dace3721ee 100644
--- a/src/main/java/org/apache/commons/io/IOUtils.java
+++ b/src/main/java/org/apache/commons/io/IOUtils.java
@@ -2212,6 +2212,9 @@ public static void copy(final Reader input, final OutputStream output, final Str
      */
     public static boolean contentEquals(InputStream input1, InputStream input2)
             throws IOException {
+        if (input1 == input2) {
+            return true;
+        }
         if (!(input1 instanceof BufferedInputStream)) {
             input1 = new BufferedInputStream(input1);
         }
@@ -2249,7 +2252,10 @@ public static boolean contentEquals(InputStream input1, InputStream input2)
      */
     public static boolean contentEquals(Reader input1, Reader input2)
             throws IOException {
-        
+        if (input1 == input2) {
+            return true;
+        }
+
         input1 = toBufferedReader(input1);
         input2 = toBufferedReader(input2);
 
@@ -2282,6 +2288,9 @@ public static boolean contentEquals(Reader input1, Reader input2)
      */
     public static boolean contentEqualsIgnoreEOL(final Reader input1, final Reader input2)
             throws IOException {
+        if (input1 == input2) {
+            return true;
+        }
         final BufferedReader br1 = toBufferedReader(input1);
         final BufferedReader br2 = toBufferedReader(input2);
 
diff --git a/src/test/java/org/apache/commons/io/IOUtilsTestCase.java b/src/test/java/org/apache/commons/io/IOUtilsTestCase.java
index e91a255bc5a..4d9f1162977 100644
--- a/src/test/java/org/apache/commons/io/IOUtilsTestCase.java
+++ b/src/test/java/org/apache/commons/io/IOUtilsTestCase.java
@@ -16,6 +16,7 @@
  */
 package org.apache.commons.io;
 
+import java.io.BufferedInputStream;
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
@@ -205,7 +206,36 @@ public void testConstants() throws Exception {
         }
     }
 
+    public void testContentEquals_InputStream_InputStream() throws Exception {
+        {
+            final ByteArrayInputStream input1 = new ByteArrayInputStream("".getBytes(Charsets.UTF_8));
+            assertTrue(IOUtils.contentEquals(input1, input1));
+        }
+        {
+            final ByteArrayInputStream input1 = new ByteArrayInputStream("ABC".getBytes(Charsets.UTF_8));
+            assertTrue(IOUtils.contentEquals(input1, input1));
+        }
+        assertTrue(IOUtils
+                .contentEquals(new ByteArrayInputStream("".getBytes(Charsets.UTF_8)), new ByteArrayInputStream("".getBytes(Charsets.UTF_8))));
+        assertTrue(IOUtils.contentEquals(new BufferedInputStream(new ByteArrayInputStream("".getBytes(Charsets.UTF_8))), new BufferedInputStream(
+                new ByteArrayInputStream("".getBytes(Charsets.UTF_8)))));
+        assertTrue(IOUtils.contentEquals(new ByteArrayInputStream("ABC".getBytes(Charsets.UTF_8)),
+                new ByteArrayInputStream("ABC".getBytes(Charsets.UTF_8))));
+        assertFalse(IOUtils.contentEquals(new ByteArrayInputStream("ABCD".getBytes(Charsets.UTF_8)),
+                new ByteArrayInputStream("ABC".getBytes(Charsets.UTF_8))));
+        assertFalse(IOUtils.contentEquals(new ByteArrayInputStream("ABC".getBytes(Charsets.UTF_8)),
+                new ByteArrayInputStream("ABCD".getBytes(Charsets.UTF_8))));
+    }
+
     public void testContentEquals_Reader_Reader() throws Exception {
+        {
+            final StringReader input1 = new StringReader("");
+            assertTrue(IOUtils.contentEquals(input1, input1));
+        }
+        {
+            final StringReader input1 = new StringReader("ABC");
+            assertTrue(IOUtils.contentEquals(input1, input1));
+        }
         assertTrue(IOUtils.contentEquals(new StringReader(""), new StringReader("")));
         assertTrue(IOUtils.contentEquals(new BufferedReader(new StringReader("")), new BufferedReader(new StringReader(""))));
         assertTrue(IOUtils.contentEquals(new StringReader("ABC"), new StringReader("ABC")));
@@ -214,6 +244,15 @@ public void testContentEquals_Reader_Reader() throws Exception {
     }
 
     public void testContentEqualsIgnoreEOL() throws Exception {
+        {
+            final Reader input1 = new CharArrayReader("".toCharArray());
+            assertTrue(IOUtils.contentEqualsIgnoreEOL(input1, input1));
+        }
+        {
+            final Reader input1 =  new CharArrayReader("321\r\n".toCharArray());
+            assertTrue(IOUtils.contentEqualsIgnoreEOL(input1, input1));
+        }
+
         Reader r1;
         Reader r2;
 
