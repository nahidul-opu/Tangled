From 2d858d5c7cc30313c9c3c8ef4a5e8d34d67a395e Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Mon, 17 May 2010 14:51:17 +0000
Subject: [PATCH] COMPRESS-114 Fix name round-trip problem

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@945189 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/compress/archivers/tar/TarUtils.java  |  6 +++---
 .../compress/archivers/tar/TarUtilsTest.java      | 15 +++++++++++++++
 2 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 069b039101e..8aba2e24d98 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -95,11 +95,11 @@ public static String parseName(byte[] buffer, final int offset, final int length
         int          end = offset + length;
 
         for (int i = offset; i < end; ++i) {
-            if (buffer[i] == 0) { // Trailing null
+            byte b = buffer[i];
+            if (b == 0) { // Trailing null
                 break;
             }
-
-            result.append((char) buffer[i]);
+            result.append((char) (b & 0xFF)); // Allow for sign-extension
         }
 
         return result.toString();
diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
index bb08897e339..01dfb3fe699 100644
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java
@@ -116,4 +116,19 @@ public void testOverflow() {
         } catch (IllegalArgumentException expected) {
         }
     }
+    
+    public void testRoundTripNames(){
+        checkName("");
+        checkName("The quick brown fox\n");
+        checkName("\177");
+        // checkName("\0"); // does not work, because NUL is ignored
+        // COMPRESS-114
+        checkName("0302-0601-3±±±F06±W220±ZB±LALALA±±±±±±±±±±CAN±±DC±±±04±060302±MOE.model");
+    }
+
+    private void checkName(String string) {
+        byte buff[] = new byte[100];
+        int len = TarUtils.formatNameBytes(string, buff, 0, buff.length);
+        assertEquals(string, TarUtils.parseName(buff, 0, len));
+    }
 }
