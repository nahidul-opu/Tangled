From 26c458f09bc858537d02b3749868e8318b167a68 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Fri, 18 Dec 2009 20:24:48 +0000
Subject: [PATCH] FIX: Artifact report throws NPE when artifact is not in cache
 (IVY-1150) (thanks to Steve Jones)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@892370 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                       |  2 ++
 .../org/apache/ivy/ant/IvyArtifactReport.java     | 15 ++++++++-------
 2 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index 15123d598..b3b730224 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -46,6 +46,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 	Scott Hebert
 	Matt Inger
 	Anders Janmyr
+	Steve Jones
 	Christer Jonsson
 	Michael Kebe
 	Matthias Kilian
@@ -101,6 +102,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Trace a message when a property file referenced from the settings doesn't exixts (IVY-1074)
 - IMPROVEMENT: use defaultconf in combination with defaultconfmapping (IVY-1135) (thanks to Jon Schneider)
 
+- FIX: Artifact report throws NPE when artifact is not in cache (IVY-1150) (thanks to Steve Jones)
 - FIX: resolve fails for transitive relocated maven modules when the type of the dependency was set to 'jar'
 - FIX: optional dependencies, sources and javadocs aren't resolved when a maven module is relocated
 - FIX: Encountered 'multiple artifacts retrieved to same file' error when module does not have multiple artifacts (IVY-1148)
diff --git a/src/java/org/apache/ivy/ant/IvyArtifactReport.java b/src/java/org/apache/ivy/ant/IvyArtifactReport.java
index 76f040767..905c230df 100644
--- a/src/java/org/apache/ivy/ant/IvyArtifactReport.java
+++ b/src/java/org/apache/ivy/ant/IvyArtifactReport.java
@@ -154,8 +154,7 @@ private void generateXml(IvyNode[] dependencies,
                             startArtifact(saxHandler, artifact.getArtifact());
 
                             writeOriginLocationIfPresent(cache, saxHandler, artifact);
-
-                            writeCacheLocation(cache, saxHandler, artifact);
+                            writeCacheLocationIfPresent(cache, saxHandler, artifact);
 
                             Set artifactDestPaths = (Set) artifactsToCopy.get(artifact);
                             for (Iterator iterator = artifactDestPaths.iterator(); iterator
@@ -243,14 +242,16 @@ private void writeOriginLocationIfPresent(
         }
     }
 
-    private void writeCacheLocation(RepositoryCacheManager cache, TransformerHandler saxHandler,
+    private void writeCacheLocationIfPresent(RepositoryCacheManager cache, TransformerHandler saxHandler,
             ArtifactDownloadReport artifact) throws SAXException {
         File archiveInCache = artifact.getLocalFile();
 
-        saxHandler.startElement(null, "cache-location", "cache-location", new AttributesImpl());
-        char[] archiveInCacheAsChars = archiveInCache.getPath().replace('\\', '/').toCharArray();
-        saxHandler.characters(archiveInCacheAsChars, 0, archiveInCacheAsChars.length);
-        saxHandler.endElement(null, "cache-location", "cache-location");
+        if (archiveInCache != null) {
+            saxHandler.startElement(null, "cache-location", "cache-location", new AttributesImpl());
+            char[] archiveInCacheAsChars = archiveInCache.getPath().replace('\\', '/').toCharArray();
+            saxHandler.characters(archiveInCacheAsChars, 0, archiveInCacheAsChars.length);
+            saxHandler.endElement(null, "cache-location", "cache-location");
+        }
     }
 
     private void writeRetrieveLocation(TransformerHandler saxHandler, String artifactDestPath)
