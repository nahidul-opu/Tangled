From a19fae7262f9212ada7acde170ded85a12720705 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Mon, 24 Aug 2015 13:05:38 +0000
Subject: [PATCH] NET-582 SimpleSMTPHeader does not allow for missing To: field

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1697380 13f79535-47bb-0310-9956-ffa450edef68
---
 .../net/smtp/SimpleSMTPHeaderTestCase.java    | 47 +++++++++++++++++++
 1 file changed, 47 insertions(+)
 create mode 100644 src/test/java/org/apache/commons/net/smtp/SimpleSMTPHeaderTestCase.java

diff --git a/src/test/java/org/apache/commons/net/smtp/SimpleSMTPHeaderTestCase.java b/src/test/java/org/apache/commons/net/smtp/SimpleSMTPHeaderTestCase.java
new file mode 100644
index 000000000..ef8487f5a
--- /dev/null
+++ b/src/test/java/org/apache/commons/net/smtp/SimpleSMTPHeaderTestCase.java
@@ -0,0 +1,47 @@
+package org.apache.commons.net.smtp;
+
+import static org.junit.Assert.*;
+
+import org.junit.Before;
+import org.junit.Test;
+
+public class SimpleSMTPHeaderTestCase {
+
+    private SimpleSMTPHeader header;
+
+    @Before
+    public void setUp() {
+        header = new SimpleSMTPHeader("from@here.invalid", "to@there.invalid", "Test email");
+    }
+
+    @Test
+    public void testToString() {
+        assertNotNull(header);
+        // Note that the DotTerminatedMessageWriter converts LF to CRLF
+        assertEquals("From: from@here.invalid\nTo: to@there.invalid\nSubject: Test email\n\n", header.toString());
+    }
+
+    @Test
+    public void testToStringNoSubject() {
+        SimpleSMTPHeader hdr = new SimpleSMTPHeader("from@here.invalid", "to@there.invalid", null);
+        assertNotNull(hdr);
+        // Note that the DotTerminatedMessageWriter converts LF to CRLF
+        assertEquals("From: from@here.invalid\nTo: to@there.invalid\n\n", hdr.toString());
+    }
+
+    @Test(expected=IllegalArgumentException.class)
+    public void testToStringNoFrom() {
+        SimpleSMTPHeader hdr = new SimpleSMTPHeader(null, null, null);
+        assertNotNull(hdr);
+        // Note that the DotTerminatedMessageWriter converts LF to CRLF
+        assertEquals("From: from@here.invalid\n\n", hdr.toString());
+    }
+    @Test
+
+    public void testToStringNoTo() {
+        SimpleSMTPHeader hdr = new SimpleSMTPHeader("from@here.invalid", null, null);
+        assertNotNull(hdr);
+        // Note that the DotTerminatedMessageWriter converts LF to CRLF
+        assertEquals("From: from@here.invalid\n\n", hdr.toString());
+    }
+}
