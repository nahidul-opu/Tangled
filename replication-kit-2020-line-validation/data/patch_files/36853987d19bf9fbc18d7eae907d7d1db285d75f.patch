From 36853987d19bf9fbc18d7eae907d7d1db285d75f Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Thu, 24 Aug 2006 00:49:51 +0000
Subject: [PATCH] FIX: Wrong resolution of dependencies if artifacts specified
 explicitly (IVY-261)

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@484474 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 src/java/fr/jayasoft/ivy/Ivy.java             |  1 +
 src/java/fr/jayasoft/ivy/IvyNode.java         | 21 +++++++++++--------
 test/java/fr/jayasoft/ivy/ResolveTest.java    | 14 +++++++++++++
 .../1/org1/mod1.4/ivys/ivy-1.3.xml            | 13 ++++++++++++
 .../1/org1/mod1.6/ivys/ivy-1.0.3.xml          | 13 ++++++++++++
 6 files changed, 54 insertions(+), 9 deletions(-)
 create mode 100644 test/repositories/1/org1/mod1.4/ivys/ivy-1.3.xml
 create mode 100644 test/repositories/1/org1/mod1.6/ivys/ivy-1.0.3.xml

diff --git a/CHANGES.txt b/CHANGES.txt
index bce887722..7d53abd31 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -50,6 +50,7 @@ Changes:
   - IMPROVE: prints URL before downloading in verbose mode (IVY-257)
   - IMPROVE: incorrect value in status attribute causes silent failure (IVY-259)
 
+  - FIX: Wrong resolution of dependencies if artifacts specified explicitly (IVY-261)
   - FIX: Multiple versions of dependencies appearing in retrieve (IVY-264)
   - FIX: Too many false CircularDependencyException errors thrown (IVY-230)
   - FIX: CircularDependencyException not always thrown (IVY-184)
diff --git a/src/java/fr/jayasoft/ivy/Ivy.java b/src/java/fr/jayasoft/ivy/Ivy.java
index 141cf6ab2..7a03551ba 100644
--- a/src/java/fr/jayasoft/ivy/Ivy.java
+++ b/src/java/fr/jayasoft/ivy/Ivy.java
@@ -1419,6 +1419,7 @@ private void doFetchDependencies(IvyNode node, String conf) {
             Collection dependencies = node.getDependencies(conf, true);
             for (Iterator iter = dependencies.iterator(); iter.hasNext();) {
                 IvyNode dep = (IvyNode)iter.next();
+                node.traverse(conf, dep); // dependency traversal data may have been changed while resolving other deps, we update it
                 if (dep.isCircular()) {
                     continue;
                 }
diff --git a/src/java/fr/jayasoft/ivy/IvyNode.java b/src/java/fr/jayasoft/ivy/IvyNode.java
index 1ac60eca4..15d3f294e 100644
--- a/src/java/fr/jayasoft/ivy/IvyNode.java
+++ b/src/java/fr/jayasoft/ivy/IvyNode.java
@@ -839,21 +839,24 @@ public Collection getDependencies(String conf, boolean traverse) {
             
             depNode.addCaller(_rootModuleConf, this, conf, dependencyConfigurations, dd);
             dependencies.add(depNode);
-
             if (traverse) {
-                if (getPath().contains(depNode)) {
-                	IvyContext.getContext().getCircularDependencyStrategy().handleCircularDependency(toMrids(getPath(), depNode));
-                } else {
-                    depNode.setParent(this);
-                }
-                depNode.setParentConf(conf);
-                depNode.setRootModuleConf(getRootModuleConf());
-                depNode._data = _data;
+            	traverse(conf, depNode);
             }
         }
         return dependencies;
     }
 
+	public void traverse(String conf, IvyNode depNode) {
+		if (getPath().contains(depNode)) {
+			IvyContext.getContext().getCircularDependencyStrategy().handleCircularDependency(toMrids(getPath(), depNode));
+		} else {
+		    depNode.setParent(this);
+		}
+		depNode.setParentConf(conf);
+		depNode.setRootModuleConf(getRootModuleConf());
+		depNode._data = _data;
+	}
+
     private ModuleRevisionId[] toMrids(Collection path, IvyNode depNode) {
     	ModuleRevisionId[] ret = new ModuleRevisionId[path.size()+1];
     	int i=0;
diff --git a/test/java/fr/jayasoft/ivy/ResolveTest.java b/test/java/fr/jayasoft/ivy/ResolveTest.java
index b678d6802..99a37f843 100644
--- a/test/java/fr/jayasoft/ivy/ResolveTest.java
+++ b/test/java/fr/jayasoft/ivy/ResolveTest.java
@@ -582,6 +582,20 @@ public void testResolveMultipleExtends2() throws Exception {
         assertTrue(_ivy.getArchiveFileInCache(_cache, "org1", "mod1.2", "2.1", "mod1.2", "jar", "jar").exists());
     }
 
+    public void testResolveDefaultWithArtifacts() throws Exception {
+    	// mod1.6 depends on
+    	//   mod1.4, which depends on mod1.3 and selects one of its artifacts
+    	//   mod1.3 and selects two of its artifacts
+        ResolveReport report = _ivy.resolve(new File("test/repositories/1/org1/mod1.6/ivys/ivy-1.0.3.xml").toURL(),
+                null, new String[] {"*"}, _cache, null, true);
+        assertFalse(report.hasError());
+        
+        // dependencies
+        assertTrue(_ivy.getArchiveFileInCache(_cache, "org1", "mod1.3", "3.0", "mod1.3-A", "jar", "jar").exists());
+        assertTrue(_ivy.getArchiveFileInCache(_cache, "org1", "mod1.3", "3.0", "mod1.3-B", "jar", "jar").exists());
+    }
+    
+
     public void testResolveDefaultWithArtifactsConf1() throws Exception {
         // mod2.2 depends on mod1.3 and selects its artifacts
         ResolveReport report = _ivy.resolve(new File("test/repositories/1/org2/mod2.2/ivys/ivy-0.5.xml").toURL(),
diff --git a/test/repositories/1/org1/mod1.4/ivys/ivy-1.3.xml b/test/repositories/1/org1/mod1.4/ivys/ivy-1.3.xml
new file mode 100644
index 000000000..ef8114c22
--- /dev/null
+++ b/test/repositories/1/org1/mod1.4/ivys/ivy-1.3.xml
@@ -0,0 +1,13 @@
+<ivy-module version="1.0"> 
+	<info organisation="org1"
+	       module="mod1.4"
+	       revision="1.3"
+	       status="release"
+	/>
+	<publications />
+	<dependencies>
+		<dependency name="mod1.3" rev="3.0">
+			<artifact name="mod1.3-A" type="jar" />
+		</dependency>
+	</dependencies>
+</ivy-module>
diff --git a/test/repositories/1/org1/mod1.6/ivys/ivy-1.0.3.xml b/test/repositories/1/org1/mod1.6/ivys/ivy-1.0.3.xml
new file mode 100644
index 000000000..c6acb7022
--- /dev/null
+++ b/test/repositories/1/org1/mod1.6/ivys/ivy-1.0.3.xml
@@ -0,0 +1,13 @@
+<ivy-module version="1.0">
+	<info organisation="org1"
+	       module="mod1.6"
+	       revision="1.0.3"
+	/> 
+	<dependencies>
+		<dependency name="mod1.4" rev="1.3" />
+		<dependency name="mod1.3" rev="3.0">
+			<artifact name="mod1.3-A" type="jar" />
+			<artifact name="mod1.3-B" type="jar" />
+		</dependency>
+	</dependencies>
+</ivy-module>
