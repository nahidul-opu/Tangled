From c435354f3e1e8753abcdc6156e16d0a2c6b179da Mon Sep 17 00:00:00 2001
From: Mario Ivankovits <imario@apache.org>
Date: Mon, 19 Mar 2007 19:51:36 +0000
Subject: [PATCH] VFS-113: avoid npe in multithreaded environments

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@520072 13f79535-47bb-0310-9956-ffa450edef68
---
 .../vfs/provider/sftp/SftpFileObject.java     | 32 +++++++++++--------
 1 file changed, 18 insertions(+), 14 deletions(-)

diff --git a/core/src/main/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java b/core/src/main/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java
index 580209d195..9c5c1a9395 100644
--- a/core/src/main/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java
+++ b/core/src/main/java/org/apache/commons/vfs/provider/sftp/SftpFileObject.java
@@ -372,23 +372,27 @@ InputStream getInputStream(long filePointer) throws IOException
 	 */
 	protected InputStream doGetInputStream() throws Exception
 	{
-		final ChannelSftp channel = fileSystem.getChannel();
-		try
+		// VFS-113: avoid npe
+		synchronized(fileSystem)
 		{
-			// return channel.get(getName().getPath());
-			// hmmm - using the in memory method is soooo much faster ...
+			final ChannelSftp channel = fileSystem.getChannel();
+			try
+			{
+				// return channel.get(getName().getPath());
+				// hmmm - using the in memory method is soooo much faster ...
 
-			// TODO - Don't read the entire file into memory. Use the
-			// stream-based methods on ChannelSftp once they work properly
-			final ByteArrayOutputStream outstr = new ByteArrayOutputStream();
-			channel.get(relPath, outstr);
-			outstr.close();
-			return new ByteArrayInputStream(outstr.toByteArray());
+				// TODO - Don't read the entire file into memory. Use the
+				// stream-based methods on ChannelSftp once they work properly
+				final ByteArrayOutputStream outstr = new ByteArrayOutputStream();
+				channel.get(relPath, outstr);
+				outstr.close();
+				return new ByteArrayInputStream(outstr.toByteArray());
 
-		}
-		finally
-		{
-			fileSystem.putChannel(channel);
+			}
+			finally
+			{
+				fileSystem.putChannel(channel);
+			}
 		}
 	}
 
