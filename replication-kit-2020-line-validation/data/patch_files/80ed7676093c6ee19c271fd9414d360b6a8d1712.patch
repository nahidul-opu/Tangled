From 80ed7676093c6ee19c271fd9414d360b6a8d1712 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 27 Aug 2015 23:08:28 +0000
Subject: [PATCH] BCEL-195 addition of hashCode() to generic/Instruction.java
 breaks Targeters. Never make distinct BranchInstructions compare equal

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1698243 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  1 +
 .../bcel6/generic/InstructionComparator.java  | 19 ++++++-------------
 .../generic/InstructionHandleTestCase.java    |  8 ++++++++
 3 files changed, 15 insertions(+), 13 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index c46a2f7caa..699a1763e8 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -63,6 +63,7 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="6.0" date="TBA" description="Major release with Java 7 and 8 support">
+      <action issue="BCEL-195" type="fix">addition of hashCode() to generic/Instruction.java breaks Targeters. Never make distinct BranchInstructions compare equal</action>
       <action issue="BCEL-261" type="fix">Select constructor allows partially constructed instance to escape. Re-ordered code to delay the escape.</action>
       <action issue="BCEL-259" type="fix">Minor doc error in BranchInstruction.java</action>
       <action issue="BCEL-260" type="fix">ClassDumper example duplicates field attribute types</action>
diff --git a/src/main/java/org/apache/commons/bcel6/generic/InstructionComparator.java b/src/main/java/org/apache/commons/bcel6/generic/InstructionComparator.java
index 74d95d18a7..936f8d3126 100644
--- a/src/main/java/org/apache/commons/bcel6/generic/InstructionComparator.java
+++ b/src/main/java/org/apache/commons/bcel6/generic/InstructionComparator.java
@@ -35,20 +35,13 @@ public interface InstructionComparator {
 
         @Override
         public boolean equals( Instruction i1, Instruction i2 ) {
+            if (i1 == i2) {
+                return true; // shortcut for identical objects
+            }
             if (i1.getOpcode() == i2.getOpcode()) {
-                if (i1 instanceof Select) {
-                    InstructionHandle[] t1 = ((Select) i1).getTargets();
-                    InstructionHandle[] t2 = ((Select) i2).getTargets();
-                    if (t1.length == t2.length) {
-                        for (int i = 0; i < t1.length; i++) {
-                            if (t1[i] != t2[i]) {
-                                return false;
-                            }
-                        }
-                        return true;
-                    }
-                } else if (i1 instanceof BranchInstruction) {
-                    return ((BranchInstruction) i1).getTarget() == ((BranchInstruction) i2).getTarget();
+                if (i1 instanceof BranchInstruction) {
+                 // Different BIs are never equal to make targeters work correctly (BCEL-195)
+                    return false; // identity checked above
                 } else if (i1 instanceof ConstantPushInstruction) {
                     return ((ConstantPushInstruction) i1).getValue().equals(
                             ((ConstantPushInstruction) i2).getValue());
diff --git a/src/test/java/org/apache/commons/bcel6/generic/InstructionHandleTestCase.java b/src/test/java/org/apache/commons/bcel6/generic/InstructionHandleTestCase.java
index c7f19e1243..08a854dadd 100644
--- a/src/test/java/org/apache/commons/bcel6/generic/InstructionHandleTestCase.java
+++ b/src/test/java/org/apache/commons/bcel6/generic/InstructionHandleTestCase.java
@@ -35,4 +35,12 @@ public void testsetInstructionnotI() {
     public void testGetIHnull() {
         InstructionHandle.getInstructionHandle(null); 
     }
+
+    @Test
+    public void testBCEL195() {
+        InstructionList il = new InstructionList();
+        InstructionHandle ih = il.append(InstructionConstants.NOP);
+        new TABLESWITCH(new int[0], new InstructionHandle[0], ih);
+        new TABLESWITCH(new int[0], new InstructionHandle[0], ih);
+    }
 }
