From cf7243735eb232c81a918f5ef027b12304bc6293 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Mon, 1 Dec 2008 21:30:16 +0000
Subject: [PATCH] CONFIGURATION-321: The iterator returned by
 AbstractHierachicalConfiguration.getKeys(String prefix) now contains the
 prefix if this key is contained in the configuration. Ported the fix from
 trunk to configuration2 branch.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/branches/configuration2_experimental@722241 13f79535-47bb-0310-9956-ffa450edef68
---
 .../AbstractHierarchicalConfiguration.java    |  6 ++++
 .../TestInMemoryConfiguration.java            | 29 +++++++++++++++++++
 xdocs/changes.xml                             |  5 ++++
 3 files changed, 40 insertions(+)

diff --git a/src/main/java/org/apache/commons/configuration2/AbstractHierarchicalConfiguration.java b/src/main/java/org/apache/commons/configuration2/AbstractHierarchicalConfiguration.java
index d08fe2e37f..47052b69ce 100644
--- a/src/main/java/org/apache/commons/configuration2/AbstractHierarchicalConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/AbstractHierarchicalConfiguration.java
@@ -619,6 +619,12 @@ public Iterator<String> getKeys()
     public Iterator<String> getKeys(String prefix)
     {
         DefinedKeysVisitor visitor = new DefinedKeysVisitor(prefix);
+        if (containsKey(prefix))
+        {
+            // explicitly add the prefix
+            visitor.getKeyList().add(prefix);
+        }
+
         NodeList<T> nodes = fetchNodeList(prefix);
 
         for (int i = 0; i < nodes.size(); i++)
diff --git a/src/test/java/org/apache/commons/configuration2/TestInMemoryConfiguration.java b/src/test/java/org/apache/commons/configuration2/TestInMemoryConfiguration.java
index 9ddafce37c..c9f54d25b1 100644
--- a/src/test/java/org/apache/commons/configuration2/TestInMemoryConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/TestInMemoryConfiguration.java
@@ -349,6 +349,35 @@ public void testGetKeysString()
                 new String[] {"url", "user" });
     }
 
+    /**
+     * Tests getKeys() with a prefix when the prefix matches exactly a key.
+     */
+    public void testGetKeysWithKeyAsPrefix()
+    {
+        config.addProperty("order.key1", "value1");
+        config.addProperty("order.key2", "value2");
+        Iterator<String> it = config.getKeys("order.key1");
+        assertTrue("no key found", it.hasNext());
+        assertEquals("1st key", "order.key1", it.next());
+        assertFalse("more keys than expected", it.hasNext());
+    }
+
+    /**
+     * Tests getKeys() with a prefix when the prefix matches exactly a key, and
+     * there are multiple keys starting with this prefix.
+     */
+    public void testGetKeysWithKeyAsPrefixMultiple()
+    {
+        config.addProperty("order.key1", "value1");
+        config.addProperty("order.key1.test", "value2");
+        config.addProperty("order.key1.test.complex", "value2");
+        Iterator<String> it = config.getKeys("order.key1");
+        assertEquals("Wrong key 1", "order.key1", it.next());
+        assertEquals("Wrong key 2", "order.key1.test", it.next());
+        assertEquals("Wrong key 3", "order.key1.test.complex", it.next());
+        assertFalse("More keys than expected", it.hasNext());
+    }
+
     public void testAddProperty()
     {
         config.addProperty("tables.table(0).fields.field(-1).name", "phone");
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index ac9505647a..f80005d761 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -169,6 +169,11 @@
         ConfigurationDynaBean now works properly with indexed properties
         stored internally in the underlying configuration as arrays.
       </action>
+      <action dev="oheger" type="fix" issue="CONFIGURATION-321">
+        The iterator returned by HierarchicalConfiguration.getKeys(String prefix)
+        now also contains the prefix if this key is contained in the
+        configuration.
+      </action>
       <action dev="ebourg" type="fix" issue="CONFIGURATION-320">
         XMLPropertyListConfiguration is no longer limited to 32 bits integers.
       </action>
