From 41c68e9ef470696009d72133c7f05a20e2728e34 Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Tue, 1 Mar 2011 17:56:14 +0000
Subject: [PATCH] [CODEC-117] Caverphone encodes names starting and ending with
 "mb" incorrectly.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075947 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/codec/language/Caverphone.java    |   4 +-
 .../codec/language/CaverphoneTest.java        | 159 +++++++++---------
 2 files changed, 85 insertions(+), 78 deletions(-)

diff --git a/src/java/org/apache/commons/codec/language/Caverphone.java b/src/java/org/apache/commons/codec/language/Caverphone.java
index 6f7769e4d5..28505574fc 100644
--- a/src/java/org/apache/commons/codec/language/Caverphone.java
+++ b/src/java/org/apache/commons/codec/language/Caverphone.java
@@ -71,7 +71,9 @@ public String caverphone(String txt) {
         txt = txt.replaceAll("^enough", "enou2f");  // 2.0 only
         txt = txt.replaceAll("^trough", "trou2f");  // 2.0 only - note the spec says ^enough here again, c+p error I assume
         txt = txt.replaceAll("^gn", "2n");
-        txt = txt.replaceAll("^mb", "m2");
+
+        // End 
+        txt = txt.replaceAll("mb$", "m2");
 
         // 4. Handle replacements
         txt = txt.replaceAll("cq", "2q");
diff --git a/src/test/org/apache/commons/codec/language/CaverphoneTest.java b/src/test/org/apache/commons/codec/language/CaverphoneTest.java
index a4cb492fe3..00f7d964e4 100644
--- a/src/test/org/apache/commons/codec/language/CaverphoneTest.java
+++ b/src/test/org/apache/commons/codec/language/CaverphoneTest.java
@@ -164,83 +164,6 @@ public void testDavidHoodRevisitedRandomNameKLN1111111() throws EncoderException
             "Xylon"});
     }
 
-    /**
-     * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
-     * 
-     * @throws EncoderException
-     */
-    public void testDavidHoodRevisitedRandomNameTTA1111111() throws EncoderException {
-        this.checkEncodingVariations("TTA1111111", new String[]{
-            "Darda",
-            "Datha",
-            "Dedie",
-            "Deedee",
-            "Deerdre",
-            "Deidre",
-            "Deirdre",
-            "Detta",
-            "Didi",
-            "Didier",
-            "Dido",
-            "Dierdre",
-            "Dieter",
-            "Dita",
-            "Ditter",
-            "Dodi",
-            "Dodie",
-            "Dody",
-            "Doherty",
-            "Dorthea",
-            "Dorthy",
-            "Doti",
-            "Dotti",
-            "Dottie",
-            "Dotty",
-            "Doty",
-            "Doughty",
-            "Douty",
-            "Dowdell",
-            "Duthie",
-            "Tada",
-            "Taddeo",
-            "Tadeo",
-            "Tadio",
-            "Tati",
-            "Teador",
-            "Tedda",
-            "Tedder",
-            "Teddi",
-            "Teddie",
-            "Teddy",
-            "Tedi",
-            "Tedie",
-            "Teeter",
-            "Teodoor",
-            "Teodor",
-            "Terti",
-            "Theda",
-            "Theodor",
-            "Theodore",
-            "Theta",
-            "Thilda",
-            "Thordia",
-            "Tilda",
-            "Tildi",
-            "Tildie",
-            "Tildy",
-            "Tita",
-            "Tito",
-            "Tjader",
-            "Toddie",
-            "Toddy",
-            "Torto",
-            "Tuddor",
-            "Tudor",
-            "Turtle",
-            "Tuttle",
-            "Tutto"});
-    }
-
     /**
      * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
      * 
@@ -319,6 +242,83 @@ public void testDavidHoodRevisitedRandomNameTN11111111() throws EncoderException
             "Tyne"});
     }
 
+    /**
+     * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
+     * 
+     * @throws EncoderException
+     */
+    public void testDavidHoodRevisitedRandomNameTTA1111111() throws EncoderException {
+        this.checkEncodingVariations("TTA1111111", new String[]{
+            "Darda",
+            "Datha",
+            "Dedie",
+            "Deedee",
+            "Deerdre",
+            "Deidre",
+            "Deirdre",
+            "Detta",
+            "Didi",
+            "Didier",
+            "Dido",
+            "Dierdre",
+            "Dieter",
+            "Dita",
+            "Ditter",
+            "Dodi",
+            "Dodie",
+            "Dody",
+            "Doherty",
+            "Dorthea",
+            "Dorthy",
+            "Doti",
+            "Dotti",
+            "Dottie",
+            "Dotty",
+            "Doty",
+            "Doughty",
+            "Douty",
+            "Dowdell",
+            "Duthie",
+            "Tada",
+            "Taddeo",
+            "Tadeo",
+            "Tadio",
+            "Tati",
+            "Teador",
+            "Tedda",
+            "Tedder",
+            "Teddi",
+            "Teddie",
+            "Teddy",
+            "Tedi",
+            "Tedie",
+            "Teeter",
+            "Teodoor",
+            "Teodor",
+            "Terti",
+            "Theda",
+            "Theodor",
+            "Theodore",
+            "Theta",
+            "Thilda",
+            "Thordia",
+            "Tilda",
+            "Tildi",
+            "Tildie",
+            "Tildy",
+            "Tita",
+            "Tito",
+            "Tjader",
+            "Toddie",
+            "Toddy",
+            "Torto",
+            "Tuddor",
+            "Tudor",
+            "Turtle",
+            "Tuttle",
+            "Tutto"});
+    }
+
     /**
      * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
      * 
@@ -330,6 +330,11 @@ public void testDavidHoodRevisitedRandomWords() throws EncoderException {
         this.checkEncodingVariations("APA1111111", new String[]{"able", "appear"});
     }
 
+    public void testEndMb() throws EncoderException {
+        String[][] data = {{"mb", "M111111111"}, {"mbmb", "MPM1111111"}};
+        this.checkEncodings(data);
+    }
+
     // Caverphone Revisited
     public void testIsCaverphoneEquals() {
         Caverphone caverphone = new Caverphone();
