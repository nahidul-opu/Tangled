From 75a8d8c69a3da99e6ab553b4f9947aac44af6928 Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Tue, 30 Sep 2014 12:08:10 +0000
Subject: [PATCH] [BCEL-181]
 org.apache.bcel.util.ClassLoaderRepository.loadClass(String) leaks input
 streams.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1628409 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                              |  3 +++
 .../org/apache/bcel/util/ClassLoaderRepository.java  | 12 ++++++++----
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 1b74ae94ec..ef07141a67 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -63,6 +63,9 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="6.0" date="TBA" description="Major release with Java 7 and 8 support">
+      <action issue="BCEL-181" type="fix" dev="ggregory">
+        org.apache.bcel.util.ClassLoaderRepository.loadClass(String) leaks input streams.
+      </action>
       <action issue="BCEL-76" type="update">
         Add parent type processing for ClassPath class.
       </action>
diff --git a/src/main/java/org/apache/bcel/util/ClassLoaderRepository.java b/src/main/java/org/apache/bcel/util/ClassLoaderRepository.java
index ab305e65e4..39987176cc 100644
--- a/src/main/java/org/apache/bcel/util/ClassLoaderRepository.java
+++ b/src/main/java/org/apache/bcel/util/ClassLoaderRepository.java
@@ -88,10 +88,14 @@ public JavaClass loadClass( String className ) throws ClassNotFoundException {
             if (is == null) {
                 throw new ClassNotFoundException(className + " not found.");
             }
-            ClassParser parser = new ClassParser(is, className);
-            RC = parser.parse();
-            storeClass(RC);
-            return RC;
+            try {
+                ClassParser parser = new ClassParser(is, className);
+                RC = parser.parse();
+                storeClass(RC);
+                return RC;
+            } finally {
+                is.close();
+            }
         } catch (IOException e) {
             throw new ClassNotFoundException(className + " not found: " + e, e);
         }
