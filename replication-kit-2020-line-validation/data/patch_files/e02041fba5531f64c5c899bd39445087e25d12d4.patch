From e02041fba5531f64c5c899bd39445087e25d12d4 Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Thu, 8 Mar 2007 13:06:16 +0000
Subject: [PATCH] FIX: Incorrect pom parsing with profile (IVY-423)

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/core/trunk@516029 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 .../parser/m2/PomModuleDescriptorParser.java  | 13 +++-
 .../m2/PomModuleDescriptorParserTest.java     |  8 ++
 .../parser/m2/mule-module-builders-1.3.3.pom  | 75 +++++++++++++++++++
 4 files changed, 93 insertions(+), 4 deletions(-)
 create mode 100644 test/java/org/apache/ivy/plugins/parser/m2/mule-module-builders-1.3.3.pom

diff --git a/CHANGES.txt b/CHANGES.txt
index c9ce3f049..a0c16da16 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -18,6 +18,7 @@ for detailed view of each issue, please consult http://jira.jayasoft.org/
 
 - FIX: NPE when no organisation or no name is provided in module element of ivyconf (IVY-422)
 - FIX: FileUtil#copy(File src, File dest, CopyProgressListener l, boolean overwrite) (IVY-420)
+- FIX: Incorrect pom parsing with profile (IVY-423)
 - FIX: Ivy doesn't recognize maven2 classifiers (IVY-418)
 - FIX: Static revision replacement is not working when delivering an artifact with a dependency having extra attributes (IVY-415)
 - FIX: Static revision replacement is not working when delivering an artifact with a dependency on a branch (IVY-404)
diff --git a/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java b/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java
index 5030536df..025aa181e 100644
--- a/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java
+++ b/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java
@@ -101,9 +101,10 @@ public Parser(ModuleDescriptorParser parser, IvySettings settings, Resource res)
 
         public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
             _contextStack.push(qName);
+            String context = getContext();
             if ("optional".equals(qName)) {
                 _optional = true;
-            } else if ("exclusions".equals(qName)) {
+            } else if ("project/dependencies/dependency/exclusions".equals(context)) {
                 if (_dd == null) {
                     // stores dd now cause exclusions will override org and module
                     _dd = new DefaultDependencyDescriptor(_md, ModuleRevisionId.newInstance(_organisation, _module, _revision), true, false, true);
@@ -111,8 +112,11 @@ public void startElement(String uri, String localName, String qName, Attributes
                     _module = null;
                     _revision = null;
                 }
-            } else if (_md.getModuleRevisionId() == null  && ("project/dependencies/dependency".equals(getContext()))) {
-                fillMrid();
+            } else if (_md.getModuleRevisionId() == null) {
+            	if ("project/dependencies".equals(context)
+            			|| "project/profiles".equals(context)) {
+            		fillMrid();
+            	}
             }
         }
 
@@ -230,7 +234,8 @@ public void characters(char[] ch, int start, int length) throws SAXException {
             if (context.startsWith("project/parent")) {
                 return;
             }
-            if (_md.getModuleRevisionId() == null || context.startsWith("project/dependencies/dependency")) {
+            if (_md.getModuleRevisionId() == null
+            		 || context.startsWith("project/dependencies/dependency")) {
                 if (context.equals("project/groupId")) {
                     _organisation = txt;
                 } else if (_organisation == null && context.endsWith("groupId")) {
diff --git a/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java b/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java
index fd82c1a6c..0a636886f 100644
--- a/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java
+++ b/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java
@@ -169,6 +169,14 @@ public void testReal() throws Exception {
         assertEquals(ModuleRevisionId.newInstance("junit", "junit", "3.7"), dds[0].getDependencyRevisionId());
     }
     
+    public void testDependenciesInProfile() throws Exception {
+    	// test case for IVY-423
+        ModuleDescriptor md = PomModuleDescriptorParser.getInstance().parseDescriptor(new IvySettings(), getClass().getResource("mule-module-builders-1.3.3.pom"), false);
+        assertNotNull(md);
+        
+        assertEquals(ModuleRevisionId.newInstance("org.mule.modules", "mule-module-builders", "1.3.3"), md.getModuleRevisionId());
+    }
+    
     public void testOptional() throws Exception {
         ModuleDescriptor md = PomModuleDescriptorParser.getInstance().parseDescriptor(new IvySettings(), getClass().getResource("test-optional.pom"), false);
         assertNotNull(md);
diff --git a/test/java/org/apache/ivy/plugins/parser/m2/mule-module-builders-1.3.3.pom b/test/java/org/apache/ivy/plugins/parser/m2/mule-module-builders-1.3.3.pom
new file mode 100644
index 000000000..f8ca4c30e
--- /dev/null
+++ b/test/java/org/apache/ivy/plugins/parser/m2/mule-module-builders-1.3.3.pom
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="UTF-8"?><project>
+  <parent>
+    <artifactId>mule-modules</artifactId>
+    <groupId>org.mule.modules</groupId>
+    <version>1.3.3</version>
+  </parent>
+  <modelVersion>4.0.0</modelVersion>
+
+  <artifactId>mule-module-builders</artifactId>
+  <name>Mule Configuration Builders</name>
+  <version>1.3.3</version>
+  <description>Standard configuration builders for Mule</description>
+  <profiles>
+    <profile>
+      <id>java14</id>
+
+      <activation>
+        <jdk>1.4</jdk>
+      </activation>
+      <dependencies>
+        <dependency>
+          <groupId>xml-apis</groupId>
+          <artifactId>xml-apis</artifactId>
+
+          <version>1.3.03</version>
+        </dependency>
+        <dependency>
+          <groupId>xerces</groupId>
+          <artifactId>xercesImpl</artifactId>
+          <version>2.8.1</version>
+        </dependency>
+
+        <dependency>
+          <groupId>commons-digester</groupId>
+          <artifactId>commons-digester</artifactId>
+          <version>1.7</version>
+        </dependency>
+      </dependencies>
+    </profile>
+
+    <profile>
+      <id>java5</id>
+      <activation>
+        <jdk>1.5</jdk>
+      </activation>
+      <dependencies>
+        <dependency>
+          <groupId>commons-digester</groupId>
+
+          <artifactId>commons-digester</artifactId>
+          <version>1.7</version>
+          <exclusions>
+            <exclusion>
+              <artifactId>xml-apis</artifactId>
+              <groupId>xml-apis</groupId>
+            </exclusion>
+
+          </exclusions>
+        </dependency>
+      </dependencies>
+    </profile>
+  </profiles>
+  <dependencies>
+    <dependency>
+      <groupId>org.apache.geronimo.specs</groupId>
+
+      <artifactId>geronimo-servlet_2.4_spec</artifactId>
+      <version>1.0.1</version>
+    </dependency>
+  </dependencies>
+  <distributionManagement>
+    <status>deployed</status>
+  </distributionManagement>
+
+</project>
\ No newline at end of file
