From 27e738871f46f486aa8949e8827e81dd28e29205 Mon Sep 17 00:00:00 2001
From: Phil Steitz <psteitz@apache.org>
Date: Sun, 26 Jul 2015 01:23:38 +0000
Subject: [PATCH] Fixed logical connection leak in KeyedCPDSConnectionFactory.

JIRA: DBCP-442

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/dbcp/trunk@1692677 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                             |  4 ++++
 .../datasources/KeyedCPDSConnectionFactory.java     |  9 +++++++--
 .../dbcp2/cpdsadapter/TestDriverAdapterCPDS.java    | 13 +++++++++++++
 3 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 67e81f03f0..b1b1194c6f 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -61,6 +61,10 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="2.1.1" date="TBD" description="Bug fixes.">
+      <action issue="DBCP-442" dev="psteitz" type="fix">
+        SharedPoolDataSource getConnection fails when testOnBorrow is set with
+        a null validation query.
+      </action>
       <action issue="DBCP-438" dev="psteitz" type="fix" due-to="Raihan Kibria">
         Nested connections in a transaction (local) throws null pointer. 
       </action>
diff --git a/src/main/java/org/apache/commons/dbcp2/datasources/KeyedCPDSConnectionFactory.java b/src/main/java/org/apache/commons/dbcp2/datasources/KeyedCPDSConnectionFactory.java
index 848d0f3736..93a5eb81af 100644
--- a/src/main/java/org/apache/commons/dbcp2/datasources/KeyedCPDSConnectionFactory.java
+++ b/src/main/java/org/apache/commons/dbcp2/datasources/KeyedCPDSConnectionFactory.java
@@ -172,18 +172,23 @@ public boolean validateObject(UserPassKey key,
         }
         boolean valid = false;
         PooledConnection pconn = p.getObject().getPooledConnection();
+        Connection conn = null;
+        validatingSet.add(pconn);
         if (null == _validationQuery) {
             int timeout = _validationQueryTimeout;
             if (timeout < 0) {
                 timeout = 0;
             }
             try {
-                valid = pconn.getConnection().isValid(timeout);
+                conn = pconn.getConnection();
+                valid = conn.isValid(timeout);
             } catch (SQLException e) {
                 valid = false;
+            } finally {
+                Utils.closeQuietly(conn);
+                validatingSet.remove(pconn); 
             }
         } else {
-            Connection conn = null;
             Statement stmt = null;
             ResultSet rset = null;
             // logical Connection from the PooledConnection must be closed
diff --git a/src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java b/src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java
index 305c7ad266..d8adcd3e95 100644
--- a/src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java
+++ b/src/test/java/org/apache/commons/dbcp2/cpdsadapter/TestDriverAdapterCPDS.java
@@ -162,6 +162,19 @@ public void testSetProperties() throws Exception {
         pcds.getPooledConnection("foo", "bar").close();
         assertEquals("bar", pcds.getConnectionProperties().getProperty("password"));
     }
+    
+    /**
+     * JIRA: DBCP-442
+     */
+    @Test
+    public void testNullValidationQuery() throws Exception {
+        final SharedPoolDataSource spds = new SharedPoolDataSource();
+        spds.setConnectionPoolDataSource(pcds);
+        spds.setDefaultTestOnBorrow(true);
+        final Connection c = spds.getConnection();
+        c.close();
+        spds.close();
+    }
 
     // https://issues.apache.org/jira/browse/DBCP-376
     @Test
