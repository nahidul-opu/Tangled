From 29402ee9790273d3957f70bfe9b281d3630d2f38 Mon Sep 17 00:00:00 2001
From: Ate Douma <ate@apache.org>
Date: Sat, 2 Jan 2016 21:51:31 +0100
Subject: [PATCH] SCXML-239: Groovy Context lose sync after
 serialize/deserialize of SCinstance - see:
 https://issues.apache.org/jira/browse/SCXML-239 for details - 'quick and
 dirty' fix: only use 'plain' SimpleContext for protected SCXMLSystemContext
 internal Context and (by default) for root Context   This prevents custom
 variable (de)serialization logic as implemented in GroovyContext which causes
 'disconnected' duplicate deserialization of the SCInstance Status object -
 SCXML-247 will provide a more proper solution.

---
 .../java/org/apache/commons/scxml2/SCInstance.java | 10 ++++------
 .../org/apache/commons/scxml2/SCInstanceTest.java  | 14 --------------
 2 files changed, 4 insertions(+), 20 deletions(-)

diff --git a/src/main/java/org/apache/commons/scxml2/SCInstance.java b/src/main/java/org/apache/commons/scxml2/SCInstance.java
index 73051aba2..51fbbf573 100644
--- a/src/main/java/org/apache/commons/scxml2/SCInstance.java
+++ b/src/main/java/org/apache/commons/scxml2/SCInstance.java
@@ -363,9 +363,8 @@ protected void setRunning(final boolean running) throws IllegalStateException {
      * @return The root context.
      */
     public Context getRootContext() {
-        if (rootContext == null && evaluator != null) {
-            rootContext = Evaluator.NULL_DATA_MODEL.equals(evaluator.getSupportedDatamodel())
-                    ? new SimpleContext() : evaluator.newContext(null);
+        if (rootContext == null) {
+            rootContext = new SimpleContext();
         }
         return rootContext;
     }
@@ -380,7 +379,7 @@ protected void setRootContext(final Context context) {
         getRootContext();
         if (systemContext != null) {
             // re-parent the system context
-            systemContext.setSystemContext(evaluator.newContext(rootContext));
+            systemContext.setSystemContext(new SimpleContext(rootContext));
         }
     }
 
@@ -394,8 +393,7 @@ public Context getSystemContext() {
             // force initialization of rootContext
             getRootContext();
             if (rootContext != null) {
-                Context internalContext = Evaluator.NULL_DATA_MODEL.equals(evaluator.getSupportedDatamodel()) ?
-                        new SimpleContext() : evaluator.newContext(rootContext);
+                Context internalContext = new SimpleContext(rootContext);
                 systemContext = new SCXMLSystemContext(internalContext);
                 systemContext.getContext().set(SCXMLSystemContext.SESSIONID_KEY, UUID.randomUUID().toString());
                 String _name = stateMachine != null && stateMachine.getName() != null ? stateMachine.getName() : "";
diff --git a/src/test/java/org/apache/commons/scxml2/SCInstanceTest.java b/src/test/java/org/apache/commons/scxml2/SCInstanceTest.java
index b9a8ab69b..cb02475c4 100644
--- a/src/test/java/org/apache/commons/scxml2/SCInstanceTest.java
+++ b/src/test/java/org/apache/commons/scxml2/SCInstanceTest.java
@@ -40,11 +40,6 @@ public void setUp() {
         instance = executor.getSCInstance();
     }
     
-    @Test
-    public void testGetRootContextNull() {
-        Assert.assertNull(instance.getRootContext());
-    }
-    
     @Test
     public void testGetRootContext() {
         Context context = new SimpleContext();
@@ -54,15 +49,6 @@ public void testGetRootContext() {
         Assert.assertEquals("value", instance.getRootContext().get("name"));
     }
     
-    @Test
-    public void testGetRootContextEvaluator() throws Exception {
-        Evaluator evaluator = new JexlEvaluator();
-
-        executor.setEvaluator(evaluator);
-
-        Assert.assertTrue(instance.getRootContext() instanceof JexlContext);
-    }
-    
     @Test
     public void testGetContext() {
         State target = new State();
