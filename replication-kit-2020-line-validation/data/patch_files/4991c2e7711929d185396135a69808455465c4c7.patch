From 4991c2e7711929d185396135a69808455465c4c7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rn=20Kottmann?= <joern@apache.org>
Date: Tue, 1 Mar 2011 12:25:24 +0000
Subject: [PATCH] OPENNLP-138 Feature generation is now initialized correctly

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1075789 13f79535-47bb-0310-9956-ffa450edef68
---
 .../tools/namefind/DefaultNameContextGenerator.java       | 3 +++
 .../main/java/opennlp/tools/namefind/NameFinderME.java    | 8 ++++----
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/opennlp-tools/src/main/java/opennlp/tools/namefind/DefaultNameContextGenerator.java b/opennlp-tools/src/main/java/opennlp/tools/namefind/DefaultNameContextGenerator.java
index 3ae99785d..b0a2026c8 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/namefind/DefaultNameContextGenerator.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/namefind/DefaultNameContextGenerator.java
@@ -38,6 +38,7 @@ public class DefaultNameContextGenerator implements NameContextGenerator {
 
   private AdaptiveFeatureGenerator featureGenerators[];
 
+  @Deprecated
   private static AdaptiveFeatureGenerator windowFeatures = new CachedFeatureGenerator(
       new AdaptiveFeatureGenerator[]{
       new WindowFeatureGenerator(new TokenFeatureGenerator(), 2, 2),
@@ -49,7 +50,9 @@ public class DefaultNameContextGenerator implements NameContextGenerator {
 
   /**
    * Creates a name context generator.
+   * @deprecated use the other constructor and always provide the feature generators
    */
+  @Deprecated
   public DefaultNameContextGenerator() {
     this((AdaptiveFeatureGenerator[]) null);
   }
diff --git a/opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java b/opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java
index cffa6da45..56a3a1750 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java
@@ -125,12 +125,10 @@ public NameFinderME(TokenNameFinderModel model) {
   public NameFinderME(TokenNameFinderModel model, AdaptiveFeatureGenerator generator, int beamSize) {
     this.model = model.getNameFinderModel();
 
-    contextGenerator = new DefaultNameContextGenerator();
-
     if (generator != null) 
-      contextGenerator.addFeatureGenerator(generator);
+      contextGenerator = new DefaultNameContextGenerator(generator);
     else
-      contextGenerator.addFeatureGenerator(createFeatureGenerator());
+      contextGenerator = new DefaultNameContextGenerator(createFeatureGenerator());
     
     contextGenerator.addFeatureGenerator(
           new WindowFeatureGenerator(additionalContextFeatureGenerator, 8, 8));
@@ -148,6 +146,8 @@ public NameFinderME(TokenNameFinderModel model, int beamSize) {
    * Creates a new name finder with the specified model.
    * 
    * @param mod The model to be used to find names.
+   * 
+   * @deprecated Use the new model API! 
    */
   @Deprecated
   public NameFinderME(MaxentModel mod) {
