From 62e40452d71a4d7c0b6c237b905fa284c0e26363 Mon Sep 17 00:00:00 2001
From: Rory Winston <rwinston@apache.org>
Date: Thu, 29 Mar 2007 15:37:00 +0000
Subject: [PATCH] Fix NET-155

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/net/branches/JDK_1_5_BRANCH@523750 13f79535-47bb-0310-9956-ffa450edef68
---
 .../java/examples/nntp/ExtendedNNTPOps.java   |   4 +-
 .../java/examples/nntp/MessageThreading.java  |   4 +-
 src/main/java/examples/nntp/NNTPUtils.java    |   2 +-
 .../apache/commons/net/nntp/NNTPClient.java   |  10 +-
 .../commons/net/nntp/NewsgroupInfo.java       | 234 +++++++++---------
 src/site/xdoc/changes.xml                     |   3 +
 6 files changed, 127 insertions(+), 130 deletions(-)

diff --git a/src/main/java/examples/nntp/ExtendedNNTPOps.java b/src/main/java/examples/nntp/ExtendedNNTPOps.java
index 26cf4c0f8..bd5c2cace 100644
--- a/src/main/java/examples/nntp/ExtendedNNTPOps.java
+++ b/src/main/java/examples/nntp/ExtendedNNTPOps.java
@@ -57,8 +57,8 @@ public void demo(String host, String user, String password) {
 			// XOVER
 			NewsgroupInfo testGroup = new NewsgroupInfo();
 			client.selectNewsgroup("alt.test", testGroup);
-			int lowArticleNumber = testGroup.getFirstArticle();
-			int highArticleNumber = lowArticleNumber + 100;
+			long lowArticleNumber = testGroup.getFirstArticle();
+			long  highArticleNumber = lowArticleNumber + 100;
 			Article[] articles = NNTPUtils.getArticleInfo(client, lowArticleNumber, highArticleNumber);
 
 			for (int i = 0; i < articles.length; ++i) {
diff --git a/src/main/java/examples/nntp/MessageThreading.java b/src/main/java/examples/nntp/MessageThreading.java
index 50ee7785d..0c36d62ac 100644
--- a/src/main/java/examples/nntp/MessageThreading.java
+++ b/src/main/java/examples/nntp/MessageThreading.java
@@ -54,8 +54,8 @@ public static void main(String[] args) throws SocketException, IOException {
 		NewsgroupInfo group = new NewsgroupInfo();
 		client.selectNewsgroup("comp.lang.lisp", group);
 		
-		int lowArticleNumber = group.getFirstArticle();
-		int highArticleNumber = lowArticleNumber + 100;
+		long lowArticleNumber = group.getFirstArticle();
+		long highArticleNumber = lowArticleNumber + 100;
 		
 		System.out.println("Retrieving articles between [" + lowArticleNumber + "] and [" + highArticleNumber + "]");
 		Article[] articles = NNTPUtils.getArticleInfo(client, lowArticleNumber, highArticleNumber);
diff --git a/src/main/java/examples/nntp/NNTPUtils.java b/src/main/java/examples/nntp/NNTPUtils.java
index 18ca41740..bd570a277 100644
--- a/src/main/java/examples/nntp/NNTPUtils.java
+++ b/src/main/java/examples/nntp/NNTPUtils.java
@@ -42,7 +42,7 @@ public class NNTPUtils {
 	 * @return Article[] An array of Article
 	 * @throws IOException
 	 */
-	public  static Article[] getArticleInfo(NNTPClient client, int lowArticleNumber, int highArticleNumber)
+	public  static Article[] getArticleInfo(NNTPClient client, long lowArticleNumber, long highArticleNumber)
 			throws IOException {
 			Reader reader = null;
 			Article[] articles = null;
diff --git a/src/main/java/org/apache/commons/net/nntp/NNTPClient.java b/src/main/java/org/apache/commons/net/nntp/NNTPClient.java
index 96ec72539..cc9ace11b 100644
--- a/src/main/java/org/apache/commons/net/nntp/NNTPClient.java
+++ b/src/main/java/org/apache/commons/net/nntp/NNTPClient.java
@@ -176,7 +176,7 @@ private NewsgroupInfo __parseNewsgroupListEntry(String entry)
     {
         NewsgroupInfo result;
         StringTokenizer tokenizer;
-        int lastNum, firstNum;
+        long lastNum, firstNum;
         String last, first, permission;
 
         result = new NewsgroupInfo();
@@ -192,8 +192,8 @@ private NewsgroupInfo __parseNewsgroupListEntry(String entry)
 
         try
         {
-            lastNum = Integer.parseInt(last);
-            firstNum = Integer.parseInt(first);
+            lastNum = Long.valueOf(last);
+            firstNum = Long.valueOf(first);
             result._setFirstArticle(firstNum);
             result._setLastArticle(lastNum);
 
@@ -1212,8 +1212,8 @@ public Reader retrieveArticleInfo(int articleNumber) throws IOException
      * @return a DotTerminatedReader if successful, null otherwise
      * @throws IOException
      */
-    public Reader retrieveArticleInfo(int lowArticleNumber,
-                                      int highArticleNumber)
+    public Reader retrieveArticleInfo(long lowArticleNumber,
+                                      long highArticleNumber)
         throws IOException
     {
         return
diff --git a/src/main/java/org/apache/commons/net/nntp/NewsgroupInfo.java b/src/main/java/org/apache/commons/net/nntp/NewsgroupInfo.java
index dea53287e..538e11f61 100644
--- a/src/main/java/org/apache/commons/net/nntp/NewsgroupInfo.java
+++ b/src/main/java/org/apache/commons/net/nntp/NewsgroupInfo.java
@@ -32,124 +32,118 @@
  * @see NNTPClient
  ***/
 
-public final class NewsgroupInfo
-{
-    /***
-     * A constant indicating that the posting permission of a newsgroup is
-     * unknown.  For example, the NNTP GROUP command does not return posting
-     * information, so NewsgroupInfo instances obtained from that command
-     * willhave an UNKNOWN_POSTING_PERMISSION.
-     ***/
-    public static final int UNKNOWN_POSTING_PERMISSION = 0;
-
-    /*** A constant indicating that a newsgroup is moderated. ***/
-    public static final int MODERATED_POSTING_PERMISSION = 1;
-
-    /*** A constant indicating that a newsgroup is public and unmoderated. ***/
-    public static final int PERMITTED_POSTING_PERMISSION = 2;
-
-    /***
-     * A constant indicating that a newsgroup is closed for general posting.
-     ***/
-    public static final int PROHIBITED_POSTING_PERMISSION = 3;
-
-    private String __newsgroup;
-    private int __estimatedArticleCount;
-    private int __firstArticle, __lastArticle;
-    private int __postingPermission;
-
-    void _setNewsgroup(String newsgroup)
-    {
-        __newsgroup = newsgroup;
-    }
-
-    void _setArticleCount(int count)
-    {
-        __estimatedArticleCount = count;
-    }
-
-    void _setFirstArticle(int first)
-    {
-        __firstArticle = first;
-    }
-
-    void _setLastArticle(int last)
-    {
-        __lastArticle = last;
-    }
-
-    void _setPostingPermission(int permission)
-    {
-        __postingPermission = permission;
-    }
-
-    /***
-     * Get the newsgroup name.
-     * <p>
-     * @return The name of the newsgroup.
-     ***/
-    public String getNewsgroup()
-    {
-        return __newsgroup;
-    }
-
-    /***
-     * Get the estimated number of articles in the newsgroup.  The
-     * accuracy of this value will depend on the server implementation.
-     * <p>
-     * @return The estimated number of articles in the newsgroup.
-     ***/
-    public int getArticleCount()
-    {
-        return __estimatedArticleCount;
-    }
-
-    /***
-     * Get the number of the first article in the newsgroup.
-     * <p>
-     * @return The number of the first article in the newsgroup.
-     ***/
-    public int getFirstArticle()
-    {
-        return __firstArticle;
-    }
-
-    /***
-     * Get the number of the last article in the newsgroup.
-     * <p>
-     * @return The number of the last article in the newsgroup.
-     ***/
-    public int getLastArticle()
-    {
-        return __lastArticle;
-    }
-
-    /***
-     * Get the posting permission of the newsgroup.  This will be one of
-     * the <code> POSTING_PERMISSION </code> constants.
-     * <p>
-     * @return The posting permission status of the newsgroup.
-     ***/
-    public int getPostingPermission()
-    {
-        return __postingPermission;
-    }
-
-    /*
-    public String toString() {
-      StringBuffer buffer = new StringBuffer();
-      buffer.append(__newsgroup);
-      buffer.append(' ');
-      buffer.append(__lastArticle);
-      buffer.append(' ');
-      buffer.append(__firstArticle);
-      buffer.append(' ');
-      switch(__postingPermission) {
-        case 1: buffer.append('m'); break;
-        case 2: buffer.append('y'); break;
-        case 3: buffer.append('n'); break;
-      }
-      return buffer.toString();
-}
-    */
+public final class NewsgroupInfo {
+	/***
+	 * A constant indicating that the posting permission of a newsgroup is
+	 * unknown.  For example, the NNTP GROUP command does not return posting
+	 * information, so NewsgroupInfo instances obtained from that command
+	 * willhave an UNKNOWN_POSTING_PERMISSION.
+	 ***/
+	public static final int UNKNOWN_POSTING_PERMISSION = 0;
+
+	/*** A constant indicating that a newsgroup is moderated. ***/
+	public static final int MODERATED_POSTING_PERMISSION = 1;
+
+	/*** A constant indicating that a newsgroup is public and unmoderated. ***/
+	public static final int PERMITTED_POSTING_PERMISSION = 2;
+
+	/***
+	 * A constant indicating that a newsgroup is closed for general posting.
+	 ***/
+	public static final int PROHIBITED_POSTING_PERMISSION = 3;
+
+	private String __newsgroup;
+	private long __estimatedArticleCount;
+	private long __firstArticle, __lastArticle;
+	private int __postingPermission;
+
+	void _setNewsgroup(String newsgroup) {
+		__newsgroup = newsgroup;
+	}
+
+	void _setArticleCount(long count) {
+		__estimatedArticleCount = count;
+	}
+
+	void _setFirstArticle(long first) {
+		__firstArticle = first;
+	}
+
+	void _setLastArticle(long last) {
+		__lastArticle = last;
+	}
+
+	void _setPostingPermission(int permission) {
+		__postingPermission = permission;
+	}
+
+	/***
+	 * Get the newsgroup name.
+	 * <p>
+	 * @return The name of the newsgroup.
+	 ***/
+	public String getNewsgroup() {
+		return __newsgroup;
+	}
+
+	/***
+	 * Get the estimated number of articles in the newsgroup.  The
+	 * accuracy of this value will depend on the server implementation.
+	 * <p>
+	 * @return The estimated number of articles in the newsgroup.
+	 ***/
+	public long getArticleCount() {
+		return __estimatedArticleCount;
+	}
+
+	/***
+	 * Get the number of the first article in the newsgroup.
+	 * <p>
+	 * @return The number of the first article in the newsgroup.
+	 ***/
+	public long getFirstArticle() {
+		return __firstArticle;
+	}
+
+	/***
+	 * Get the number of the last article in the newsgroup.
+	 * <p>
+	 * @return The number of the last article in the newsgroup.
+	 ***/
+	public long getLastArticle() {
+		return __lastArticle;
+	}
+
+	/***
+	 * Get the posting permission of the newsgroup.  This will be one of
+	 * the <code> POSTING_PERMISSION </code> constants.
+	 * <p>
+	 * @return The posting permission status of the newsgroup.
+	 ***/
+	public int getPostingPermission() {
+		return __postingPermission;
+	}
+
+	public String toString() {
+		StringBuilder buffer = new StringBuilder();
+		buffer.append(__newsgroup);
+		buffer.append(' ');
+		buffer.append(__lastArticle);
+		buffer.append(' ');
+		buffer.append(__firstArticle);
+		buffer.append(' ');
+		switch (__postingPermission) {
+		case 1:
+			buffer.append('m');
+			break;
+		case 2:
+			buffer.append('y');
+			break;
+		case 3:
+			buffer.append('n');
+			break;
+		}
+		return buffer.toString();
+	}
+
 }
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index 94476548c..f4283d65f 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -23,6 +23,9 @@ limitations under the License.
 
 	<body>
 		<release version="2.0" date="" description="Java 5.0 release">
+			<action dev="rwinston" type="update" issue="NET-155">
+				Change NNTPClient/NewsgroupInfo article counts from int to long
+			</action>
 			<action dev="rwinston" type="update" issue="NET-151">
 				Add support for explictly overriding destination hosts for passive sessions. Thanks to &lt;neil@JAMMConsulting.com&gt;
 			</action>
