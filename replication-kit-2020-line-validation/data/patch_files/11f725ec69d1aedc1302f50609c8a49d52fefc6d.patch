From 11f725ec69d1aedc1302f50609c8a49d52fefc6d Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Mon, 23 May 2011 19:52:37 +0000
Subject: [PATCH] NET-409 FTPClient truncates file (storeFile method). Fix bug
 introduced in release 3.0.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1126692 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                 | 8 ++++++++
 src/main/java/org/apache/commons/net/ftp/FTPClient.java | 8 +++++---
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 613317ac1..fda314fb0 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -56,6 +56,14 @@ The <action> type attribute can be add,update,fix,remove.
      -->
 
     <body>
+        <release version="3.0.1" date="June 2011" description="
+This is a bug-fix release.
+        ">
+            <action issue="NET-409" dev="sebb" type="fix">
+            FTPClient truncates file (storeFile method).
+            Fix bug introduced in release 3.0.
+            </action>
+        </release>
         <release version="3.0" date="May 2011" description="
 This release fixes many bugs (see below), and adds new functionality:
   - basic support for IMAP and IMAPS
diff --git a/src/main/java/org/apache/commons/net/ftp/FTPClient.java b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
index 812b6417c..a823da205 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPClient.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
@@ -569,17 +569,19 @@ private boolean __storeFile(int command, String remote, InputStream local)
                     CopyStreamEvent.UNKNOWN_STREAM_SIZE, __mergeListeners(csl),
                     false);
         }
-        finally
+        catch (IOException e)
         {
-            Util.closeQuietly(socket);
+            Util.closeQuietly(socket); // ignore close errors here
+            throw e;
         }
 
+        output.close(); // ensure the file is fully written
+        socket.close(); // done writing the file
         // Get the transfer response
         boolean ok = completePendingCommand();
         if (csl != null) {
             csl.cleanUp(); // fetch any outstanding keepalive replies
         }
-        output.close(); // we want to know about close failure
         return ok;
     }
 
