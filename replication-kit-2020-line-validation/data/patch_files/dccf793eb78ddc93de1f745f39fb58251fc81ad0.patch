From dccf793eb78ddc93de1f745f39fb58251fc81ad0 Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Wed, 22 Dec 2010 23:03:20 +0000
Subject: [PATCH] =?UTF-8?q?IO-257=20Fix=20BOMInputStream's=20read(byte[])?=
 =?UTF-8?q?=20can=20return=200=20which=20it=20should=20not=20-=20thanks=20?=
 =?UTF-8?q?to=20Teemu=20L=C3=A5ng?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1052095 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/io/input/BOMInputStream.java    |  2 +-
 .../commons/io/input/BOMInputStreamTest.java       | 14 ++++++++++++++
 2 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/src/main/java/org/apache/commons/io/input/BOMInputStream.java b/src/main/java/org/apache/commons/io/input/BOMInputStream.java
index f46c4a5c610..5963ea0a233 100644
--- a/src/main/java/org/apache/commons/io/input/BOMInputStream.java
+++ b/src/main/java/org/apache/commons/io/input/BOMInputStream.java
@@ -284,7 +284,7 @@ public int read(byte[] buf, int off, int len) throws IOException {
             }
         }
         int secondCount = in.read(buf, off, len);
-        return (secondCount < 0) ? firstCount : firstCount + secondCount;
+        return (secondCount < 0) ? (firstCount > 0 ? firstCount : -1) : firstCount + secondCount;
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java b/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java
index 046fd1db6a5..577494edf5c 100644
--- a/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java
+++ b/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java
@@ -204,6 +204,20 @@ public void testReadWithMultipleBOM() throws Exception {
         assertEquals("getBOM", ByteOrderMark.UTF_8, in.getBOM());
     }
 
+    public void testEmptyBufferWithoutBOM() throws Exception {
+        byte[] data = new byte[] {};
+        InputStream in = new BOMInputStream(createDataStream(data, false));
+        byte[] buf = new byte[1024];
+        assertEquals(-1, in.read(buf));
+    }
+
+    public void testEmptyBufferWithBOM() throws Exception {
+        byte[] data = new byte[] {};
+        InputStream in = new BOMInputStream(createDataStream(data, true));
+        byte[] buf = new byte[1024];
+        assertEquals(-1, in.read(buf));
+    }
+
     public void testLargeBufferWithoutBOM() throws Exception {
         byte[] data = new byte[] { 'A', 'B', 'C' };
         InputStream in = new BOMInputStream(createDataStream(data, false));
