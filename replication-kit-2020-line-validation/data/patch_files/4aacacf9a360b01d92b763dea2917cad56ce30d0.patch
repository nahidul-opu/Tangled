From 4aacacf9a360b01d92b763dea2917cad56ce30d0 Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Tue, 4 Aug 2009 01:25:28 +0000
Subject: [PATCH] BEANUTILS-339 BeanUtilsBean.setProperty throws
 IllegalArgumentException if value is null - thanks to Alan Escreet

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@800648 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/beanutils/BeanUtilsBean.java      |   2 +-
 .../beanutils/bugs/Jira339TestCase.java       | 125 ++++++++++++++++++
 2 files changed, 126 insertions(+), 1 deletion(-)
 create mode 100644 src/test/org/apache/commons/beanutils/bugs/Jira339TestCase.java

diff --git a/src/java/org/apache/commons/beanutils/BeanUtilsBean.java b/src/java/org/apache/commons/beanutils/BeanUtilsBean.java
index d83d43490..a9ac122df 100644
--- a/src/java/org/apache/commons/beanutils/BeanUtilsBean.java
+++ b/src/java/org/apache/commons/beanutils/BeanUtilsBean.java
@@ -1000,7 +1000,7 @@ public void setProperty(Object bean, String name, Object value)
                 newValue = convert(value, type.getComponentType());
             }
         } else {                             // Value into scalar
-            if ((value instanceof String) || (value == null)) {
+            if (value instanceof String) {
                 newValue = getConvertUtils().convert((String) value, type);
             } else if (value instanceof String[]) {
                 newValue = getConvertUtils().convert(((String[]) value)[0],
diff --git a/src/test/org/apache/commons/beanutils/bugs/Jira339TestCase.java b/src/test/org/apache/commons/beanutils/bugs/Jira339TestCase.java
new file mode 100644
index 000000000..af2909106
--- /dev/null
+++ b/src/test/org/apache/commons/beanutils/bugs/Jira339TestCase.java
@@ -0,0 +1,125 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.beanutils.bugs;
+
+import java.util.Comparator;
+
+import junit.framework.Test;
+import junit.framework.TestCase;
+import junit.framework.TestSuite;
+
+import org.apache.commons.beanutils.BeanUtils;
+import org.apache.commons.beanutils.PropertyUtils;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+
+/**
+ * See https://issues.apache.org/jira/browse/BEANUTILS-339
+ * <p />
+ *
+ * @version $Revision$ $Date$
+ */
+public class Jira339TestCase extends TestCase {
+
+    private Log log = LogFactory.getLog(Jira339TestCase.class);
+
+    /**
+     * Create a test case with the specified name.
+     *
+     * @param name The name of the test
+     */
+    public Jira339TestCase(String name) {
+        super(name);
+    }
+
+    /**
+     * Run the Test.
+     *
+     * @param args Arguments
+     */
+    public static void main(String[] args) {
+        junit.textui.TestRunner.run(suite());
+    }
+
+    /**
+     * Create a test suite for this test.
+     *
+     * @return a test suite
+     */
+    public static Test suite() {
+        return (new TestSuite(Jira339TestCase.class));
+    }
+
+    /**
+     * Set up.
+     *
+     * @throws java.lang.Exception
+     */
+    protected void setUp() throws Exception {
+        super.setUp();
+    }
+
+    /**
+     * Tear Down.
+     *
+     * @throws java.lang.Exception
+     */
+    protected void tearDown() throws Exception {
+        super.tearDown();
+    }
+
+    /**
+     * Test {@link PropertyUtils#getProperty(Object, String)}
+     */
+    public void testIssue_BEANUTILS_339_BeanUtilsBean_setProperty() {
+        
+        TestBean bean = new TestBean();
+        try {
+            BeanUtils.setProperty(bean, "comparator", null);
+        } catch (Throwable t) {
+            log.error("Failed: " + t.getMessage(), t);
+            fail("Threw exception: " + t);
+        }
+        assertNull("TestBean comparator should be null", bean.getComparator());
+    }
+
+    /**
+     * Test Bean.
+     */
+    public static class TestBean {
+        private Comparator comparator;
+
+        /**
+         * Return the comparator.
+         *
+         * @return the comparator
+         */
+        public Comparator getComparator() {
+            return comparator;
+        }
+
+        /**
+         * Set the comparator.
+         *
+         * @param comparator the comparator
+         */
+        public void setComparator(Comparator comparator) {
+            this.comparator = comparator;
+        }
+        
+    }
+}
