From 0e035427fb7efb8892e15594810687a3d327a651 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Mon, 9 May 2011 17:20:56 +0000
Subject: [PATCH] IO-266 FileUtils.copyFile() throws IOException when copying
 large files to a shared directory

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1101118 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                            | 3 +++
 src/main/java/org/apache/commons/io/FileUtils.java | 6 +++---
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 9d872739e1f..c14d2a67fe5 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -41,6 +41,9 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
     <release version="1.4" date="Not yet released">
 
+      <action dev="sebb" type="fix" issue="IO-266" due-to="Igor Smereka">
+        FileUtils.copyFile() throws IOException when copying large files to a shared directory
+      </action>
       <action dev="sebb" type="add" issue="IO-251" due-to="Marco Albini">
         Add new read method "toByteArray" to handle InputStream with known size.
       </action>
diff --git a/src/main/java/org/apache/commons/io/FileUtils.java b/src/main/java/org/apache/commons/io/FileUtils.java
index 79cf4b1e120..d65f1567b9c 100644
--- a/src/main/java/org/apache/commons/io/FileUtils.java
+++ b/src/main/java/org/apache/commons/io/FileUtils.java
@@ -100,9 +100,9 @@ public FileUtils() {
     public static final long ONE_MB = ONE_KB * ONE_KB;
 
     /**
-     * The number of bytes in a 50 MB.
+     * The file copy buffer size (30 MB)
      */
-    private static final long FIFTY_MB = ONE_MB * 50;
+    private static final long FILE_COPY_BUFFER_SIZE = ONE_MB * 30;
 
     /**
      * The number of bytes in a gigabyte.
@@ -880,7 +880,7 @@ private static void doCopyFile(File srcFile, File destFile, boolean preserveFile
             long pos = 0;
             long count = 0;
             while (pos < size) {
-                count = (size - pos) > FIFTY_MB ? FIFTY_MB : (size - pos);
+                count = (size - pos) > FILE_COPY_BUFFER_SIZE ? FILE_COPY_BUFFER_SIZE : (size - pos);
                 pos += output.transferFrom(input, pos, count);
             }
         } finally {
