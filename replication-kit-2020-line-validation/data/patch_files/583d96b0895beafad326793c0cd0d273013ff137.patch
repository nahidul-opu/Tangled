From 583d96b0895beafad326793c0cd0d273013ff137 Mon Sep 17 00:00:00 2001
From: Thomas Neidhart <tn@apache.org>
Date: Tue, 17 Feb 2015 22:02:59 +0000
Subject: [PATCH] [COLLECTIONS-555] Added clarification to TreeBag#add(Object)
 wrt null arguments. Thanks to M Kim.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1660515 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  3 ++
 .../commons/collections4/bag/TreeBag.java     |  5 ++++
 .../commons/collections4/bag/TreeBagTest.java | 28 +++++++++++++++++++
 3 files changed, 36 insertions(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 43306a5ac9..7d9f7cb3f9 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,9 @@
   <body>
 
   <release version="4.1" date="TBD" description="">
+    <action issue="COLLECTIONS-555" dev="tn" type="fix" due-to="M Kim">
+      Added clarification to javadoc of "TreeBag#add(Object)" wrt null arguments.
+    </action>
     <action issue="COLLECTIONS-427" dev="tn" type="add" due-to="GonÃ§alo Marques">
       Added "toString(...)" methods to newly created "IteratorUtils" class to get a
       string representation of an Iterable instance similar to "Arrays#toString(...)".
diff --git a/src/main/java/org/apache/commons/collections4/bag/TreeBag.java b/src/main/java/org/apache/commons/collections4/bag/TreeBag.java
index 12a55bc1ea..7599d0b6aa 100644
--- a/src/main/java/org/apache/commons/collections4/bag/TreeBag.java
+++ b/src/main/java/org/apache/commons/collections4/bag/TreeBag.java
@@ -80,10 +80,15 @@ public TreeBag(final Collection<? extends E> coll) {
      *
      * @throws IllegalArgumentException if the object to be added does not implement
      * {@link Comparable} and the {@link TreeBag} is using natural ordering
+     * @throws NullPointerException if the specified key is null and this bag uses
+     * natural ordering, or its comparator does not permit null keys
      */
     @Override
     public boolean add(final E object) {
         if(comparator() == null && !(object instanceof Comparable)) {
+            if (object == null) {
+                throw new NullPointerException();
+            }
             throw new IllegalArgumentException("Objects of type " + object.getClass() + " cannot be added to " +
                                                "a naturally ordered TreeBag as it does not implement Comparable");
         }
diff --git a/src/test/java/org/apache/commons/collections4/bag/TreeBagTest.java b/src/test/java/org/apache/commons/collections4/bag/TreeBagTest.java
index 963352ef89..ff64bed0dd 100644
--- a/src/test/java/org/apache/commons/collections4/bag/TreeBagTest.java
+++ b/src/test/java/org/apache/commons/collections4/bag/TreeBagTest.java
@@ -16,6 +16,8 @@
  */
 package org.apache.commons.collections4.bag;
 
+import java.util.Comparator;
+
 import junit.framework.Test;
 
 import org.apache.commons.collections4.Bag;
@@ -65,6 +67,32 @@ public void testCollections265() {
         }
     }
 
+    public void testCollections555() {
+        final Bag<Object> bag = new TreeBag<Object>();
+        try {
+            bag.add(null);
+            fail("NullPointerException expected");
+        } catch(final NullPointerException npe) {
+            // expected;
+        }
+        
+        final Bag<String> bag2 = new TreeBag<String>(new Comparator<String>() {
+            @Override
+            public int compare(String o1, String o2) {
+                return o1.compareTo(o2);
+            }
+        });
+        try {
+            // jdk bug: adding null to an empty TreeMap works
+            // thus ensure that the bag is not empty before adding null
+            bag2.add("a");
+            bag2.add(null);
+            fail("NullPointerException expected");
+        } catch(final NullPointerException npe) {
+            // expected;
+        }
+    }
+
     public void testOrdering() {
         final Bag<T> bag = setupBag();
         assertEquals("Should get elements in correct order", "A", bag.toArray()[0]);
