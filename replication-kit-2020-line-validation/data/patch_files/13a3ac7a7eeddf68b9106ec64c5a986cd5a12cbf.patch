From 13a3ac7a7eeddf68b9106ec64c5a986cd5a12cbf Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Sun, 8 Nov 2009 17:38:19 +0000
Subject: [PATCH] [CONFIGURATION-399] Added EnvironmentLookup class.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@833896 13f79535-47bb-0310-9956-ffa450edef68
---
 .../interpol/EnvironmentLookup.java           | 64 ++++++++++++++++++
 .../interpol/TestEnvironmentLookup.java       | 66 +++++++++++++++++++
 2 files changed, 130 insertions(+)
 create mode 100644 src/java/org/apache/commons/configuration/interpol/EnvironmentLookup.java
 create mode 100644 src/test/org/apache/commons/configuration/interpol/TestEnvironmentLookup.java

diff --git a/src/java/org/apache/commons/configuration/interpol/EnvironmentLookup.java b/src/java/org/apache/commons/configuration/interpol/EnvironmentLookup.java
new file mode 100644
index 0000000000..d9b63bd5de
--- /dev/null
+++ b/src/java/org/apache/commons/configuration/interpol/EnvironmentLookup.java
@@ -0,0 +1,64 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.configuration.interpol;
+
+import org.apache.commons.configuration.EnvironmentConfiguration;
+import org.apache.commons.lang.text.StrLookup;
+
+/**
+ * <p>
+ * A specialized lookup implementation that allows access to environment
+ * variables.
+ * </p>
+ * <p>
+ * This implementation relies on {@link EnvironmentConfiguration} to resolve
+ * environment variables. It can be used for referencing environment variables
+ * in configuration files in an easy way, for instance:
+ *
+ * <pre>
+ * java.home = ${env:JAVA_HOME}
+ * </pre>
+ *
+ * </p>
+ * <p>
+ * <code>EnvironmentLookup</code> is one of the standard lookups that is
+ * registered per default for each configuration.
+ * </p>
+ *
+ * @author <a
+ *         href="http://commons.apache.org/configuration/team-list.html">Commons
+ *         Configuration team</a>
+ * @since 1.7
+ * @version $Id$
+ */
+public class EnvironmentLookup extends StrLookup
+{
+    /** Stores the underlying <code>EnvironmentConfiguration</code>. */
+    private final EnvironmentConfiguration environmentConfig = new EnvironmentConfiguration();
+
+    /**
+     * Performs a lookup for the specified variable. This implementation
+     * directly delegates to a <code>EnvironmentConfiguration</code>.
+     *
+     * @param key the key to lookup
+     * @return the value of this key or <b>null</b> if it cannot be resolved
+     */
+    public String lookup(String key)
+    {
+        return environmentConfig.getString(key);
+    }
+}
diff --git a/src/test/org/apache/commons/configuration/interpol/TestEnvironmentLookup.java b/src/test/org/apache/commons/configuration/interpol/TestEnvironmentLookup.java
new file mode 100644
index 0000000000..972b2ebd75
--- /dev/null
+++ b/src/test/org/apache/commons/configuration/interpol/TestEnvironmentLookup.java
@@ -0,0 +1,66 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.configuration.interpol;
+
+import java.util.Iterator;
+
+import junit.framework.TestCase;
+
+import org.apache.commons.configuration.EnvironmentConfiguration;
+
+/**
+ * Test class for EnvironmentLookup.
+ *
+ * @author <a
+ *         href="http://commons.apache.org/configuration/team-list.html">Commons
+ *         Configuration team</a>
+ * @version $Id$
+ */
+public class TestEnvironmentLookup extends TestCase
+{
+    /** The lookup to be tested. */
+    private EnvironmentLookup lookup;
+
+    protected void setUp() throws Exception
+    {
+        super.setUp();
+        lookup = new EnvironmentLookup();
+    }
+
+    /**
+     * Tests whether environment variables can be queried.
+     */
+    public void testLookup()
+    {
+        EnvironmentConfiguration envConf = new EnvironmentConfiguration();
+        for (Iterator it = envConf.getKeys(); it.hasNext();)
+        {
+            String var = (String) it.next();
+            assertEquals("Wrong value for " + var, envConf.getString(var),
+                    lookup.lookup(var));
+        }
+    }
+
+    /**
+     * Tries to lookup a non existing property.
+     */
+    public void testLookupNonExisting()
+    {
+        assertNull("Got result for non existing environment variable", lookup
+                .lookup("a non existing variable!"));
+    }
+}
