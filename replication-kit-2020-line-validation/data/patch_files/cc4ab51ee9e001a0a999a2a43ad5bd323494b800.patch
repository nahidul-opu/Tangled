From cc4ab51ee9e001a0a999a2a43ad5bd323494b800 Mon Sep 17 00:00:00 2001
From: Phil Steitz <psteitz@apache.org>
Date: Fri, 11 Jul 2014 19:22:18 +0000
Subject: [PATCH] Fixed BinomialDistribution to deal with degenerate cases
 correctly.

JIRA: MATH-1136
Reported and patched by Aleksei Dievskii.



git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1609775 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                        |  3 +++
 .../distribution/BinomialDistribution.java     |  3 +++
 .../distribution/BinomialDistributionTest.java | 18 ++++++++++++++++++
 3 files changed, 24 insertions(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index a50e33c54d..327fc0d7ff 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -73,6 +73,9 @@ Users are encouraged to upgrade to this version as this release not
   2. A few methods in the FastMath class are in fact slower that their
   counterpart in either Math or StrictMath (cf. MATH-740 and MATH-901).
 ">
+      <ation dev="psteitz" type="fix" issue="MATH-1136" due-to="Aleksei Dievskii">
+        Fixed BinomialDistribution to deal with degenerate cases correctly.
+      </action>
       <action dev="tn" type="fix" issue="MATH-1135" due-to="Guillaume Marceau">
         "MonotoneChain" failed to generate a convex hull if only a minimal hull
         shall be created (includeCollinearPoints=false) and collinear hull points
diff --git a/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java b/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
index 15747e13e7..9a882a05b0 100644
--- a/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
@@ -106,6 +106,9 @@ public double probability(int x) {
     /** {@inheritDoc} **/
     @Override
     public double logProbability(int x) {
+        if (numberOfTrials == 0) {
+            return (x == 0) ? 0. : Double.NEGATIVE_INFINITY;
+        }
         double ret;
         if (x < 0 || x > numberOfTrials) {
             ret = Double.NEGATIVE_INFINITY;
diff --git a/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java b/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
index df9232c839..7e9a8a4793 100644
--- a/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
+++ b/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
@@ -127,6 +127,24 @@ public void testDegenerate1() {
         Assert.assertEquals(dist.getSupportUpperBound(), 5);
     }
 
+    /** Test degenerate case n = 0 */
+    @Test
+    public void testDegenerate2() {
+        BinomialDistribution dist = new BinomialDistribution(0, 0.01d);
+        setDistribution(dist);
+        setCumulativeTestPoints(new int[] { -1, 0, 1, 2, 5, 10 });
+        setCumulativeTestValues(new double[] { 0d, 1d, 1d, 1d, 1d, 1d });
+        setDensityTestPoints(new int[] { -1, 0, 1, 2, 5, 10 });
+        setDensityTestValues(new double[] { 0d, 1d, 0d, 0d, 0d, 0d });
+        setInverseCumulativeTestPoints(new double[] { 0.1d, 0.5d });
+        setInverseCumulativeTestValues(new int[] { 0, 0 });
+        verifyDensities();
+        verifyCumulativeProbabilities();
+        verifyInverseCumulativeProbabilities();
+        Assert.assertEquals(dist.getSupportLowerBound(), 0);
+        Assert.assertEquals(dist.getSupportUpperBound(), 0);
+    }
+
     @Test
     public void testMoments() {
         final double tol = 1e-9;
