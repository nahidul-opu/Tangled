From 48dde3784e22e6cf886521e7ae17a327a461688e Mon Sep 17 00:00:00 2001
From: Luc Maisonobe <luc@apache.org>
Date: Fri, 15 Feb 2013 08:20:11 +0000
Subject: [PATCH] Fixed DerivativeStructure.atan2 for special cases when both
 arguments are +/-0.

JIRA: MATH-935

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1446473 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  3 +++
 .../analysis/differentiation/DSCompiler.java  |  3 +++
 .../DerivativeStructureTest.java              | 27 +++++++++++++++++++
 3 files changed, 33 insertions(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index f9ac147ac0..3820d35b71 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -55,6 +55,9 @@ This is a minor release: It combines bug fixes and new features.
   Changes to existing features were made in a backwards-compatible
   way such as to allow drop-in replacement of the v3.1[.1] JAR file.
 ">
+      <action dev="luc" type="fix" issue="MATH-935" >
+        Fixed DerivativeStructure.atan2 for special cases when both arguments are +/-0.
+      </action>
       <action dev="luc" type="add" >
         Added accurate linear combination of DerivativeStructure instances,
         avoiding cancellation.  
diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
index 9d0855530c..d5a3c18b8f 100644
--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
@@ -1415,6 +1415,9 @@ public void atan2(final double[] y, final int yOffset,
 
         }
 
+        // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly
+        result[resultOffset] = FastMath.atan2(y[yOffset], x[xOffset]);
+
     }
 
     /** Compute hyperbolic cosine of a derivative structure.
diff --git a/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java b/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
index 4da9b42200..1d357fd53d 100644
--- a/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
+++ b/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
@@ -807,6 +807,33 @@ public void testAtan2() {
         }
     }
 
+    @Test
+    public void testAtan2SpecialCases() {
+
+        DerivativeStructure pp =
+                DerivativeStructure.atan2(new DerivativeStructure(2, 2, 1, +0.0),
+                                          new DerivativeStructure(2, 2, 1, +0.0));
+        Assert.assertEquals(0, pp.getValue(), 1.0e-15);
+        Assert.assertEquals(+1, FastMath.copySign(1, pp.getValue()), 1.0e-15);
+
+        DerivativeStructure pn =
+                DerivativeStructure.atan2(new DerivativeStructure(2, 2, 1, +0.0),
+                                          new DerivativeStructure(2, 2, 1, -0.0));
+        Assert.assertEquals(FastMath.PI, pn.getValue(), 1.0e-15);
+
+        DerivativeStructure np =
+                DerivativeStructure.atan2(new DerivativeStructure(2, 2, 1, -0.0),
+                                          new DerivativeStructure(2, 2, 1, +0.0));
+        Assert.assertEquals(0, np.getValue(), 1.0e-15);
+        Assert.assertEquals(-1, FastMath.copySign(1, np.getValue()), 1.0e-15);
+
+        DerivativeStructure nn =
+                DerivativeStructure.atan2(new DerivativeStructure(2, 2, 1, -0.0),
+                                          new DerivativeStructure(2, 2, 1, -0.0));
+        Assert.assertEquals(-FastMath.PI, nn.getValue(), 1.0e-15);
+
+    }
+
     @Test
     public void testSinhDefinition() {
         double[] epsilon = new double[] { 3.0e-16, 3.0e-16, 5.0e-16, 2.0e-15, 6.0e-15 };
