From 3cc80010294829fa743b916f2e1efaff79a80ade Mon Sep 17 00:00:00 2001
From: Ralph Goers <rgoers@apache.org>
Date: Tue, 3 Nov 2009 17:36:07 +0000
Subject: [PATCH] Apply patch for VFS-289 provided by Kirill Safonov

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@832481 13f79535-47bb-0310-9956-ffa450edef68
---
 .../vfs/provider/ftp/FtpFileObject.java       | 84 +++++++++++--------
 xdocs/changes.xml                             |  3 +
 2 files changed, 54 insertions(+), 33 deletions(-)

diff --git a/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpFileObject.java b/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpFileObject.java
index aca92017cb..afb7f38d96 100644
--- a/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpFileObject.java
+++ b/core/src/main/java/org/apache/commons/vfs/provider/ftp/FtpFileObject.java
@@ -585,13 +585,19 @@ protected long doGetLastModifiedTime() throws Exception
     protected InputStream doGetInputStream() throws Exception
     {
         final FtpClient client = ftpFs.getClient();
-        final InputStream instr = client.retrieveFileStream(relPath);
-        // VFS-210
-        if (instr == null)
-        {
-            throw new FileNotFoundException(getName().toString());
+        try {
+            final InputStream instr = client.retrieveFileStream(relPath);
+            // VFS-210
+            if (instr == null)
+            {
+                throw new FileNotFoundException(getName().toString());
+            }
+            return new FtpInputStream(client, instr);
+        }
+        catch (Exception e) {
+            ftpFs.putClient(client);
+            throw e;
         }
-        return new FtpInputStream(client, instr);
     }
 
     protected RandomAccessContent doGetRandomAccessContent(final RandomAccessMode mode) throws Exception
@@ -606,26 +612,32 @@ protected OutputStream doGetOutputStream(boolean bAppend)
         throws Exception
     {
         final FtpClient client = ftpFs.getClient();
-        OutputStream out = null;
-        if (bAppend)
-        {
-            out = client.appendFileStream(relPath);
-        }
-        else
-        {
-            out = client.storeFileStream(relPath);
-        }
+        try {
+            OutputStream out = null;
+            if (bAppend)
+            {
+                out = client.appendFileStream(relPath);
+            }
+            else
+            {
+                out = client.storeFileStream(relPath);
+            }
 
-        if (out == null)
-        {
-            throw new FileSystemException("vfs.provider.ftp/output-error.debug", new Object[]
-                {
-                    this.getName(),
-                    client.getReplyString()
-                });
-        }
+            if (out == null)
+            {
+                throw new FileSystemException("vfs.provider.ftp/output-error.debug", new Object[]
+                    {
+                        this.getName(),
+                        client.getReplyString()
+                    });
+            }
 
-        return new FtpOutputStream(client, out);
+            return new FtpOutputStream(client, out);
+        }
+        catch (Exception e) {
+            ftpFs.putClient(client);
+            throw e;
+        }
     }
 
     String getRelPath()
@@ -636,16 +648,22 @@ String getRelPath()
     FtpInputStream getInputStream(long filePointer) throws IOException
     {
         final FtpClient client = ftpFs.getClient();
-        final InputStream instr = client.retrieveFileStream(relPath, filePointer);
-        if (instr == null)
-        {
-            throw new FileSystemException("vfs.provider.ftp/input-error.debug", new Object[]
-                {
-                    this.getName(),
-                    client.getReplyString()
-                });
+        try {
+            final InputStream instr = client.retrieveFileStream(relPath, filePointer);
+            if (instr == null)
+            {
+                throw new FileSystemException("vfs.provider.ftp/input-error.debug", new Object[]
+                    {
+                        this.getName(),
+                        client.getReplyString()
+                    });
+            }
+            return new FtpInputStream(client, instr);
+        }
+        catch (IOException e) {
+            ftpFs.putClient(client);
+            throw e;
         }
-        return new FtpInputStream(client, instr);
     }
 
     /**
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 6274567a12..ea23b76a8d 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,9 @@
 
   <body>
     <release version="2.0" date="in SVN" description="">
+      <action dev="rgoers" type="fix" issue="VFS-289" due-to="Kirill Safonov">
+        FTP connection is not released If exception is thrown out of FtpFileObject.doGetOutputStream().
+      </action>
       <action dev="rgoers" type="fix" issue="VFS-286" due-to="Kirill Safonov">
         SftpFileObject.doListChildrenResolved() changes the working dir before doing ChannelSftp.ls() call.
         If ls() throws an exception, the current directory is not reset. All the subsequent operations that rely on the
