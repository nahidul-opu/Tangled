From 51a3d06e965de66859209ef5afd7ede70b248866 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Tue, 17 Apr 2007 19:49:51 +0000
Subject: [PATCH] CONFIGURATION-263: Fix for problem with XMLConfiguration and
 attribute nodes when list values are involved

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/configuration/trunk@529734 13f79535-47bb-0310-9956-ffa450edef68
---
 conf/test.xml                                 |  7 +++
 .../configuration/XMLConfiguration.java       | 19 +++++-
 .../configuration/TestXMLConfiguration.java   | 63 +++++++++++++++++++
 xdocs/changes.xml                             |  4 ++
 4 files changed, 90 insertions(+), 3 deletions(-)

diff --git a/conf/test.xml b/conf/test.xml
index 6762a05a98..d58b1c4a57 100644
--- a/conf/test.xml
+++ b/conf/test.xml
@@ -78,4 +78,11 @@ And even longer.
          empty string as value.
     -->
     <empty/>
+    
+    <!-- List nodes with attributes -->
+    <attrList>
+      <a name="x">ABC</a>
+      <a name="y">1,2,3</a>
+      <a name="u,v,w" test="yes">value1,value2</a>
+    </attrList>
 </testconfig>
diff --git a/src/java/org/apache/commons/configuration/XMLConfiguration.java b/src/java/org/apache/commons/configuration/XMLConfiguration.java
index 11a3cf50ae..de2ea642ab 100644
--- a/src/java/org/apache/commons/configuration/XMLConfiguration.java
+++ b/src/java/org/apache/commons/configuration/XMLConfiguration.java
@@ -477,12 +477,25 @@ private void handleDelimiters(Node parent, Node child)
 
             if (values.size() > 1)
             {
-                // remove the original child
+                Iterator it = values.iterator();
+                // Create new node for the original child's first value
+                Node c = createNode(child.getName());
+                c.setValue(it.next());
+                // Copy original attributes to the new node
+                for (Iterator itAttrs = child.getAttributes().iterator(); itAttrs
+                        .hasNext();)
+                {
+                    Node ndAttr = (Node) itAttrs.next();
+                    ndAttr.setReference(null);
+                    c.addAttribute(ndAttr);
+                }
                 parent.remove(child);
+                parent.addChild(c);
+
                 // add multiple new children
-                for (Iterator it = values.iterator(); it.hasNext();)
+                while (it.hasNext())
                 {
-                    Node c = new XMLNode(child.getName(), null);
+                    c = new XMLNode(child.getName(), null);
                     c.setValue(it.next());
                     parent.addChild(c);
                 }
diff --git a/src/test/org/apache/commons/configuration/TestXMLConfiguration.java b/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
index 0c4c6f54d7..2134a90634 100644
--- a/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
@@ -962,6 +962,69 @@ public void testInitCopy() throws ConfigurationException
         checkSavedConfig(copy);
     }
 
+    /**
+     * Tests list nodes with multiple values and attributes.
+     */
+    public void testListWithAttributes()
+    {
+        assertEquals("Wrong number of <a> elements", 6, conf.getList(
+                "attrList.a").size());
+        assertEquals("Wrong value of first element", "ABC", conf
+                .getString("attrList.a(0)"));
+        assertEquals("Wrong value of first name attribute", "x", conf
+                .getString("attrList.a(0)[@name]"));
+        assertEquals("Wrong number of name attributes", 5, conf.getList(
+                "attrList.a[@name]").size());
+    }
+
+    /**
+     * Tests a list node with attributes that has multiple values separated by
+     * the list delimiter. In this scenario the attribute should be added to the
+     * node with the first value.
+     */
+    public void testListWithAttributesMultiValue()
+    {
+        assertEquals("Wrong value of 2nd element", "1", conf
+                .getString("attrList.a(1)"));
+        assertEquals("Wrong value of 2nd name attribute", "y", conf
+                .getString("attrList.a(1)[@name]"));
+        for (int i = 2; i <= 3; i++)
+        {
+            assertEquals("Wrong value of element " + (i + 1), i, conf
+                    .getInt("attrList.a(" + i + ")"));
+            assertFalse("element " + (i + 1) + " has attribute", conf
+                    .containsKey("attrList.a(2)[@name]"));
+        }
+    }
+
+    /**
+     * Tests a list node with a multi-value attribute and multiple values. All
+     * attribute values should be assigned to the node with the first value.
+     */
+    public void testListWithMultiAttributesMultiValue()
+    {
+        for (int i = 1; i <= 2; i++)
+        {
+            assertEquals("Wrong value of multi-valued node", "value" + i, conf
+                    .getString("attrList.a(" + (i + 3) + ")"));
+        }
+        List attrs = conf.getList("attrList.a(4)[@name]");
+        final String attrVal = "uvw";
+        assertEquals("Wrong number of name attributes", attrVal.length(), attrs
+                .size());
+        for (int i = 0; i < attrVal.length(); i++)
+        {
+            assertEquals("Wrong value for attribute " + i, String
+                    .valueOf(attrVal.charAt(i)), attrs.get(i));
+        }
+        assertEquals("Wrong value of test attribute", "yes", conf
+                .getString("attrList.a(4)[@test]"));
+        assertFalse("Name attribute for 2nd value", conf
+                .containsKey("attrList.a(5)[@name]"));
+        assertFalse("Test attribute for 2nd value", conf
+                .containsKey("attrList.a(5)[@test]"));
+    }
+
     /**
      * Prepares a configuration object for testing a reload operation.
      *
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index d89d3d81ce..04230a4bc0 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,10 @@
 
   <body>
     <release version="1.5-SNAPSHOT" date="in SVN" description="">
+      <action dev="oheger" type="fix" issue="CONFIGURATION-263">
+        XMLConfiguration used to drop attributes when an element's value was a
+        list. This has been fixed.
+      </action>
       <action dev="ebourg" type="add" issue="CONFIGURATION-249">
         File configurations can now be saved to FTP URLs, or any other URL
         protocol supporting data output.
