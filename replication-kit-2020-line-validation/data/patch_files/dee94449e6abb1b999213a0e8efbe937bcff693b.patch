From 474a837858a8e7a98316f97e9ed387d0161015f2 Mon Sep 17 00:00:00 2001
From: Jack <792626757@qq.com>
Date: Wed, 6 May 2015 11:10:11 +0800
Subject: [PATCH 1/4] add testConstructorWithNullObject case in
 ReflectionToStringBuilderTest.java

---
 .../lang3/builder/ReflectionToStringBuilderTest.java | 12 ++++++++++++
 1 file changed, 12 insertions(+)
 create mode 100644 src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderTest.java

diff --git a/src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderTest.java b/src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderTest.java
new file mode 100644
index 00000000000..2410216711b
--- /dev/null
+++ b/src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderTest.java
@@ -0,0 +1,12 @@
+package org.apache.commons.lang3.builder;
+
+import org.junit.Test;
+
+public class ReflectionToStringBuilderTest {
+
+    @Test(expected=IllegalArgumentException.class)
+    public void testConstructorWithNullObject() {
+        new ReflectionToStringBuilder(null, ToStringStyle.DEFAULT_STYLE, new StringBuffer());
+    }
+
+}

From 39380da86acc717f419da48f070f8cf7d9f9ec94 Mon Sep 17 00:00:00 2001
From: Jack <792626757@qq.com>
Date: Wed, 6 May 2015 11:43:03 +0800
Subject: [PATCH 2/4] add checkNotNull method in ReflectionToStringBuilder.java
 to fix #LANG-1132

---
 .../lang3/builder/ReflectionToStringBuilder.java  | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java b/src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java
index d172b1e1735..6c2199b736c 100644
--- a/src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java
+++ b/src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java
@@ -362,6 +362,13 @@ static String[] toNoNullStringArray(final Object[] array) {
     public static String toStringExclude(final Object object, final String... excludeFieldNames) {
         return new ReflectionToStringBuilder(object).setExcludeFieldNames(excludeFieldNames).toString();
     }
+    
+    private static Object checkNotNull(final Object obj) {
+        if (obj == null) {
+            throw new IllegalArgumentException("The Object passed in should not be null.");
+        }
+        return obj;
+    }
 
     /**
      * Whether or not to append static fields.
@@ -400,7 +407,7 @@ public static String toStringExclude(final Object object, final String... exclud
      *             if the Object passed in is <code>null</code>
      */
     public ReflectionToStringBuilder(final Object object) {
-        super(object);
+        super(checkNotNull(object));
     }
 
     /**
@@ -420,7 +427,7 @@ public ReflectionToStringBuilder(final Object object) {
      *             if the Object passed in is <code>null</code>
      */
     public ReflectionToStringBuilder(final Object object, final ToStringStyle style) {
-        super(object, style);
+        super(checkNotNull(object), style);
     }
 
     /**
@@ -446,7 +453,7 @@ public ReflectionToStringBuilder(final Object object, final ToStringStyle style)
      *             if the Object passed in is <code>null</code>
      */
     public ReflectionToStringBuilder(final Object object, final ToStringStyle style, final StringBuffer buffer) {
-        super(object, style, buffer);
+        super(checkNotNull(object), style, buffer);
     }
 
     /**
@@ -471,7 +478,7 @@ public ReflectionToStringBuilder(final Object object, final ToStringStyle style,
     public <T> ReflectionToStringBuilder(
             final T object, final ToStringStyle style, final StringBuffer buffer,
             final Class<? super T> reflectUpToClass, final boolean outputTransients, final boolean outputStatics) {
-        super(object, style, buffer);
+        super(checkNotNull(object), style, buffer);
         this.setUpToClass(reflectUpToClass);
         this.setAppendTransients(outputTransients);
         this.setAppendStatics(outputStatics);

From 0e266204f535aa48f74d4f2480b2268c13e26b22 Mon Sep 17 00:00:00 2001
From: Jack <792626757@qq.com>
Date: Wed, 6 May 2015 13:34:37 +0800
Subject: [PATCH 3/4] add expected=IllegalArgumentException.class to
 ToStringBuilderTest.testReflectionNull

---
 .../org/apache/commons/lang3/builder/ToStringBuilderTest.java   | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/test/java/org/apache/commons/lang3/builder/ToStringBuilderTest.java b/src/test/java/org/apache/commons/lang3/builder/ToStringBuilderTest.java
index 31010715cca..c55fe2f193a 100644
--- a/src/test/java/org/apache/commons/lang3/builder/ToStringBuilderTest.java
+++ b/src/test/java/org/apache/commons/lang3/builder/ToStringBuilderTest.java
@@ -1041,7 +1041,7 @@ class InheritedReflectionStaticFieldsFixture extends SimpleReflectionStaticField
         static final int staticInt2 = 67890;
     }
 
-    @Test
+    @Test(expected=IllegalArgumentException.class)
     public void testReflectionNull() {
         assertEquals("<null>", ReflectionToStringBuilder.toString(null));
     }

From d282015e73ffce5b6d08a5244e890c7ea1a73400 Mon Sep 17 00:00:00 2001
From: Benedikt Ritter <britter@apache.org>
Date: Thu, 7 May 2015 20:41:02 +0200
Subject: [PATCH 4/4] Add LANG-1132 to changes.xml

---
 src/changes/changes.xml | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index ab6245eb480..9692e350535 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,7 @@
   <body>
 
   <release version="3.5" date="tba" description="tba">
+    <action issue="LANG-1132" type="add" dev="britter" due-to="Jack Tan">ReflectionToStringBuilder doesn't throw IllegalArgumentException when the constructor's object param is null</action>
     <action issue="LANG-701" type="add" dev="britter" due-to="James Sawle">StringUtils join with var args</action>
     <action issue="LANG-1130" type="fix" dev="britter">Fix critical issues reported by SonarQube</action>
     <action issue="LANG-1131" type="fix" dev="britter">StrBuilder.equals(StrBuilder) doesn't check for null inputs</action>
