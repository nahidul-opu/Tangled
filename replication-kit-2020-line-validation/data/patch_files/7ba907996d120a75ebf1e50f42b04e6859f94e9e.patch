From 7ba907996d120a75ebf1e50f42b04e6859f94e9e Mon Sep 17 00:00:00 2001
From: Aaron Smuts <asmuts@apache.org>
Date: Fri, 17 Nov 2006 15:08:24 +0000
Subject: [PATCH] Fixing stupid error in the thread pool manager.  If you
 specify the useBoundary value, it would alwasy be false.  If you didn't then
 it would be true!

JCS-14

git-svn-id: https://svn.apache.org/repos/asf/jakarta/jcs/trunk@476169 13f79535-47bb-0310-9956-ffa450edef68
---
 src/test-conf/thread_pool.properties          | 10 ++++++++++
 .../threadpool/ThreadPoolManagerUnitTest.java | 20 ++++++++++++++++++-
 2 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/src/test-conf/thread_pool.properties b/src/test-conf/thread_pool.properties
index 2013d5622..aaab42a2c 100644
--- a/src/test-conf/thread_pool.properties
+++ b/src/test-conf/thread_pool.properties
@@ -36,6 +36,16 @@ thread_pool.waittest.keepAliveTime=1
 thread_pool.waittest.whenBlockedPolicy=WAIT
 thread_pool.waittest.startUpSize=1
 
+# with boundary test thread pool config
+thread_pool.withbound.useBoundary=true
+thread_pool.withbound.boundarySize=1000
+thread_pool.withbound.maximumPoolSize=11
+thread_pool.withbound.minimumPoolSize=1
+thread_pool.withbound.keepAliveTime=1
+thread_pool.withbound.whenBlockedPolicy=WAIT
+thread_pool.withbound.startUpSize=1
+
+
 # no boundary test thread pool config
 thread_pool.nobound.useBoundary=false
 thread_pool.nobound.boundarySize=1000
diff --git a/src/test/org/apache/jcs/utils/threadpool/ThreadPoolManagerUnitTest.java b/src/test/org/apache/jcs/utils/threadpool/ThreadPoolManagerUnitTest.java
index 8dc44bc2f..41b4db1b7 100644
--- a/src/test/org/apache/jcs/utils/threadpool/ThreadPoolManagerUnitTest.java
+++ b/src/test/org/apache/jcs/utils/threadpool/ThreadPoolManagerUnitTest.java
@@ -6,6 +6,7 @@
 
 import org.apache.jcs.utils.props.PropertyLoader;
 
+import EDU.oswego.cs.dl.util.concurrent.BoundedBuffer;
 import EDU.oswego.cs.dl.util.concurrent.LinkedQueue;
 
 /**
@@ -159,6 +160,23 @@ public void testNoBoundary()
         assertNotNull( "Should have gotten back a pool.", pool );
 
         assertTrue( "Should have a linked queue and not a bounded buffer.", pool.getQueue() instanceof LinkedQueue );
-
     }
+    
+    /**
+     * Verify that if we specify useBoundary=true that we get a BoundedBuffer.
+     *
+     */
+    public void testWithBoundary()
+    {
+        ThreadPoolManager.setPropsFileName( "thread_pool.properties" );
+        ThreadPoolManager mgr = ThreadPoolManager.getInstance();
+        // force config from new props file
+        mgr.configure();
+        assertNotNull( mgr );
+
+        ThreadPool pool = mgr.getPool( "withbound" );
+        assertNotNull( "Should have gotten back a pool.", pool );
+
+        assertTrue( "Should have a BoundedBuffer and not a linked queue.", pool.getQueue() instanceof BoundedBuffer );
+    }    
 }
