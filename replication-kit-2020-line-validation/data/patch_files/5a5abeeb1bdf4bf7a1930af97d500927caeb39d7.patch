From 5a5abeeb1bdf4bf7a1930af97d500927caeb39d7 Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Tue, 10 Jan 2017 17:51:35 +0100
Subject: [PATCH] COMPRESS-358 make block size configurable in framed snappy
 input

---
 src/changes/changes.xml                       |  5 +++++
 .../FramedSnappyCompressorInputStream.java    | 20 ++++++++++++++++++-
 2 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 6e6ee4a98b4..6b55698e2d2 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -51,6 +51,11 @@ The <action> type attribute can be add,update,fix,remove.
       <action issue="COMPRESS-246" type="add" date="2017-01-10">
         Added write support for Snappy.
       </action>
+      <action issue="COMPRESS-358" type="update" date="2017-01-10">
+        The blocksize for FramedSnappyCompressorInputStream can now be
+        configured as some IWA files seem to be using blocks larger
+        than the default 32k.
+      </action>
     </release>
     <release version="1.13" date="2016-12-29"
              description="Release 1.13 - API compatible to 1.12 but requires Java 7 at runtime.">
diff --git a/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java b/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java
index 245d4950fbb..3ed50983660 100644
--- a/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java
@@ -72,6 +72,7 @@ public class FramedSnappyCompressorInputStream extends CompressorInputStream {
 
     private int uncompressedBytesRemaining;
     private long expectedChecksum = -1;
+    private final int blockSize;
     private final PureJavaCrc32C checksum = new PureJavaCrc32C();
 
     /**
@@ -95,7 +96,24 @@ public FramedSnappyCompressorInputStream(final InputStream in) throws IOExceptio
     public FramedSnappyCompressorInputStream(final InputStream in,
                                              final FramedSnappyDialect dialect)
         throws IOException {
+        this(in, SnappyCompressorInputStream.DEFAULT_BLOCK_SIZE, dialect);
+    }
+
+    /**
+     * Constructs a new input stream that decompresses snappy-framed-compressed data
+     * from the specified input stream.
+     * @param in  the InputStream from which to read the compressed data
+     * @param blockSize the block size to use for the compressed stream
+     * @param dialect the dialect used by the compressed stream
+     * @throws IOException if reading fails
+     * @since 1.14
+     */
+    public FramedSnappyCompressorInputStream(final InputStream in,
+                                             final int blockSize,
+                                             final FramedSnappyDialect dialect)
+        throws IOException {
         this.in = new PushbackInputStream(in, 1);
+        this.blockSize = blockSize;
         this.dialect = dialect;
         if (dialect.hasStreamIdentifier()) {
             readStreamIdentifier();
@@ -211,7 +229,7 @@ private void readNextBlock() throws IOException {
                 expectedChecksum = -1;
             }
             currentCompressedChunk =
-                new SnappyCompressorInputStream(new BoundedInputStream(in, size));
+                new SnappyCompressorInputStream(new BoundedInputStream(in, size), blockSize);
             // constructor reads uncompressed size
             count(currentCompressedChunk.getBytesRead());
         } else {
