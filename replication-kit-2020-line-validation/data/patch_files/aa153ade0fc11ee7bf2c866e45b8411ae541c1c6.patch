From aa153ade0fc11ee7bf2c866e45b8411ae541c1c6 Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Tue, 27 Jan 2009 22:41:49 +0000
Subject: [PATCH] DBCP-264 Clear batch when passivating
 PoolablePreparedStatement - raised by Hauke Rabe

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/dbcp/trunk@738288 13f79535-47bb-0310-9956-ffa450edef68
---
 .../dbcp/PoolablePreparedStatement.java       | 23 +++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/src/java/org/apache/commons/dbcp/PoolablePreparedStatement.java b/src/java/org/apache/commons/dbcp/PoolablePreparedStatement.java
index 0817483c36..1713bd112a 100644
--- a/src/java/org/apache/commons/dbcp/PoolablePreparedStatement.java
+++ b/src/java/org/apache/commons/dbcp/PoolablePreparedStatement.java
@@ -49,6 +49,8 @@ public class PoolablePreparedStatement extends DelegatingPreparedStatement imple
      */
     protected Object _key = null;
 
+    private volatile boolean batchAdded = false;
+
     /**
      * Constructor
      * @param stmt my underlying {@link PreparedStatement}
@@ -68,6 +70,24 @@ public PoolablePreparedStatement(PreparedStatement stmt, Object key, KeyedObject
         }
     }
 
+    /**
+     * Add batch.
+     */
+    @Override
+    public void addBatch() throws SQLException {
+        super.addBatch();
+        batchAdded = true;
+    }
+
+    /**
+     * Clear Batch.
+     */
+    @Override
+    public void clearBatch() throws SQLException {
+        batchAdded = false;
+        super.clearBatch();
+    }
+
     /**
      * Return me to my pool.
      */
@@ -112,6 +132,9 @@ protected void passivate() throws SQLException {
             }
             clearTrace();
         }
+        if (batchAdded) {
+            clearBatch();
+        }
         
         super.passivate();
     }
