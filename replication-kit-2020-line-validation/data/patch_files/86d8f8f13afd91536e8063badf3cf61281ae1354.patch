From 86d8f8f13afd91536e8063badf3cf61281ae1354 Mon Sep 17 00:00:00 2001
From: Henry Saputra <henry.saputra@gmail.com>
Date: Tue, 29 Jul 2014 17:22:37 -0700
Subject: [PATCH] GORA-361 AvroUtils.deepClonePersistent needs to flush
 BinaryEncoder | patch by Gerhard Gossen

---
 CHANGES.txt                                   |  2 ++
 .../java/org/apache/gora/util/AvroUtils.java  |  1 +
 .../org/apache/gora/util/TestAvroUtils.java   | 29 +++++++++++++++++++
 3 files changed, 32 insertions(+)
 create mode 100644 gora-core/src/test/java/org/apache/gora/util/TestAvroUtils.java

diff --git a/CHANGES.txt b/CHANGES.txt
index c8bce24f3..d790e3205 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,6 +4,8 @@
 
 Current Development 0.5-SNAPSHOT
 
+* GORA-361 AvroUtils.deepClonePersistent needs to flush BinaryEncoder (Gerhard Gossen via hsaputra)
+
 * GORA-351 Multiple Slf4j logging implementations in parent pom.xml (lewismc)
 
 * GORA-234 Javadoc and java annotations in gora-core base (abstract) classes needs to be corrected (tpalsulich via lewismc)
diff --git a/gora-core/src/main/java/org/apache/gora/util/AvroUtils.java b/gora-core/src/main/java/org/apache/gora/util/AvroUtils.java
index cb13f57d6..1fd9a3df9 100644
--- a/gora-core/src/main/java/org/apache/gora/util/AvroUtils.java
+++ b/gora-core/src/main/java/org/apache/gora/util/AvroUtils.java
@@ -107,6 +107,7 @@ public static <T extends Persistent> T deepClonePersistent(T persistent) {
         persistent.getSchema());
     try {
       writer.write(persistent, enc);
+      enc.flush();
     } catch (IOException e) {
       throw new RuntimeException(
           "Unable to serialize avro object to byte buffer - "
diff --git a/gora-core/src/test/java/org/apache/gora/util/TestAvroUtils.java b/gora-core/src/test/java/org/apache/gora/util/TestAvroUtils.java
new file mode 100644
index 000000000..dea24d27f
--- /dev/null
+++ b/gora-core/src/test/java/org/apache/gora/util/TestAvroUtils.java
@@ -0,0 +1,29 @@
+package org.apache.gora.util;
+
+import java.nio.ByteBuffer;
+
+import org.apache.avro.util.Utf8;
+import org.apache.gora.examples.generated.WebPage;
+import org.junit.Test;
+
+import static org.hamcrest.CoreMatchers.*;
+import static org.junit.Assert.assertThat;
+
+public class TestAvroUtils {
+
+    @Test
+    public void testDeepClonePersistent() throws Exception {
+        CharSequence url = new Utf8("http://gora.apache.org/");
+        WebPage.Builder builder = WebPage.newBuilder()
+            .setUrl(url)
+            .setContent(ByteBuffer.wrap("Gora".getBytes("UTF-8")));
+        WebPage webPage = builder.build();
+        WebPage clonedWebPage = AvroUtils.deepClonePersistent(webPage);
+        assertThat(clonedWebPage, is(notNullValue()));
+        assertThat(clonedWebPage.getUrl(), is(equalTo(url)));
+        assertThat(clonedWebPage.getContent(), is(notNullValue()));
+        String clonedWebPageContent = new String(clonedWebPage.getContent().array(), "UTF-8");
+        assertThat(clonedWebPageContent, is(equalTo("Gora")));
+    }
+
+}
