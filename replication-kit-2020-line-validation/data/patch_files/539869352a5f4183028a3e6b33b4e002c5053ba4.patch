From 539869352a5f4183028a3e6b33b4e002c5053ba4 Mon Sep 17 00:00:00 2001
From: Kristian Rosenvold <krosenvold@apache.org>
Date: Sat, 20 Jun 2015 06:31:39 +0000
Subject: [PATCH] IO-428 BOMInputStream.skip returns wrong count if stream
 contains no BOM

Patch by Stefan Gmeiner, applied with minor changes

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1686527 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/io/input/BOMInputStream.java      |  7 ++--
 .../commons/io/input/BOMInputStreamTest.java  | 39 ++++++++++++++-----
 2 files changed, 34 insertions(+), 12 deletions(-)

diff --git a/src/main/java/org/apache/commons/io/input/BOMInputStream.java b/src/main/java/org/apache/commons/io/input/BOMInputStream.java
index 3bd323ba0c5..943084780a6 100644
--- a/src/main/java/org/apache/commons/io/input/BOMInputStream.java
+++ b/src/main/java/org/apache/commons/io/input/BOMInputStream.java
@@ -399,9 +399,10 @@ public synchronized void reset() throws IOException {
      */
     @Override
     public long skip(long n) throws IOException {
-        while (n > 0 && readFirstBytes() >= 0) {
-            n--;
+        int skipped = 0;
+        while ((n > skipped) && (readFirstBytes() >= 0)) {
+            skipped++;
         }
-        return in.skip(n);
+        return in.skip(n - skipped) + skipped;
     }
 }
diff --git a/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java b/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java
index c766770e7ad..9fdf506d86b 100644
--- a/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java
+++ b/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java
@@ -16,22 +16,15 @@
  */
 package org.apache.commons.io.input;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
+import static org.junit.Assert.*;
 
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.Reader;
+import java.nio.ByteBuffer;
 import java.nio.charset.Charset;
 
-import javax.xml.parsers.DocumentBuilderFactory;
-import javax.xml.parsers.ParserConfigurationException;
-
 import org.apache.commons.io.ByteOrderMark;
 import org.apache.commons.io.Charsets;
 import org.junit.Assert;
@@ -41,6 +34,9 @@
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+
 /**
  * Test case for {@link BOMInputStream}.
  *
@@ -385,6 +381,31 @@ public void testNoBoms() throws Exception {
         }
     }
 
+    private static InputStream createInputStream(boolean addBOM) {
+        ByteBuffer bb = ByteBuffer.allocate(64);
+        if (addBOM) {
+            // UTF-8 BOM
+            bb.put(new byte[]{(byte) 0xEF, (byte) 0xBB, (byte) 0xBF});
+        }
+        bb.put((byte) 0x31);
+        bb.put((byte) 0x32);
+        bb.put((byte) 0x33);
+        return new ByteArrayInputStream(bb.array());
+    }
+
+    @Test
+    public void lengthWithNoBOM() throws IOException {
+        BOMInputStream is1 = new BOMInputStream(createInputStream(true));
+        assertEquals(2, is1.skip(2));
+        assertEquals((byte) 0x33, is1.read());
+
+        BOMInputStream is2 = new BOMInputStream(createInputStream(false));
+        assertEquals(2, is2.skip(2)); // fails here - skip returns 0
+        assertEquals((byte) 0x33, is2.read());
+    }
+
+
+
     @Test
     public void testReadEmpty() throws Exception {
         final byte[] data = new byte[] {};
