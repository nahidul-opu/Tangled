From 9b71bf1406e0eb9892915542232211ef47602227 Mon Sep 17 00:00:00 2001
From: Ate Douma <ate@apache.org>
Date: Sat, 11 Oct 2014 11:06:42 +0000
Subject: [PATCH] SCXML-211: fix for bug in current SCXML specification for
 addDescendantStatesToEnter algorithm

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/scxml/trunk@1631037 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/scxml2/semantics/SCXMLSemanticsImpl.java | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/main/java/org/apache/commons/scxml2/semantics/SCXMLSemanticsImpl.java b/src/main/java/org/apache/commons/scxml2/semantics/SCXMLSemanticsImpl.java
index 5700157af..85c2e5843 100644
--- a/src/main/java/org/apache/commons/scxml2/semantics/SCXMLSemanticsImpl.java
+++ b/src/main/java/org/apache/commons/scxml2/semantics/SCXMLSemanticsImpl.java
@@ -476,11 +476,15 @@ public void addDescendantStatesToEnter(final SCXMLExecutionContext exctx, final
                 step.getDefaultHistoryTransitions().put(h.getParent(), h.getTransition());
                 for (TransitionTarget dtt : h.getTransition().getTargets()) {
                     addDescendantStatesToEnter(exctx, step, dtt);
+                }
+                for (TransitionTarget dtt : h.getTransition().getTargets()) {
                     addAncestorStatesToEnter(exctx, step, dtt, tt.getParent());
                 }
             } else {
                 for (TransitionTarget dtt : lastConfiguration) {
                     addDescendantStatesToEnter(exctx, step, dtt);
+                }
+                for (TransitionTarget dtt : lastConfiguration) {
                     addAncestorStatesToEnter(exctx, step, dtt, tt.getParent());
                 }
             }
@@ -499,6 +503,8 @@ else if (es instanceof State && ((State) es).isComposite()) {
                 step.getDefaultEntrySet().add(es);
                 for (TransitionTarget dtt : ((State)es).getInitial().getTransition().getTargets()) {
                     addDescendantStatesToEnter(exctx, step, dtt);
+                }
+                for (TransitionTarget dtt : ((State)es).getInitial().getTransition().getTargets()) {
                     addAncestorStatesToEnter(exctx, step, dtt, tt);
                 }
             }
