From f2710413f0d9d2209d4688ceb421e700fa57a990 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Fri, 4 Apr 2008 20:56:22 +0000
Subject: [PATCH] FIX: Memory leak in ModuleRevisionId.java (IVY-791)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@644911 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                      |  1 +
 .../ivy/core/module/id/ModuleRevisionId.java     | 16 ++++++++++++----
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index 95c9c8e8d..e9d881b53 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -78,6 +78,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Change allownomd and skipbuildwithoutivy into a more semantically correct name (IVY-297)
 - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher
 
+- FIX: Memory leak in ModuleRevisionId.java (IVY-791)
 - FIX: conflict manager scoping does not work as expected (IVY-465)
 - FIX: ivy.original.xml file using artifact pattern in cache and causing problems (IVY-787)
 - FIX: ivy:retrieve with sync="true" removes the .svn directory (IVY-763)
diff --git a/src/java/org/apache/ivy/core/module/id/ModuleRevisionId.java b/src/java/org/apache/ivy/core/module/id/ModuleRevisionId.java
index 040abd1c7..3ddc320ac 100644
--- a/src/java/org/apache/ivy/core/module/id/ModuleRevisionId.java
+++ b/src/java/org/apache/ivy/core/module/id/ModuleRevisionId.java
@@ -17,6 +17,7 @@
  */
 package org.apache.ivy.core.module.id;
 
+import java.lang.ref.WeakReference;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Map;
@@ -143,12 +144,19 @@ public static ModuleRevisionId newInstance(ModuleRevisionId mrid, String rev) {
      * @return an interned ModuleRevisionId
      */
     public static ModuleRevisionId intern(ModuleRevisionId moduleRevisionId) {
-        ModuleRevisionId r = (ModuleRevisionId) CACHE.get(moduleRevisionId);
-        if (r == null) {
-            r = moduleRevisionId;
-            CACHE.put(r, r);
+        ModuleRevisionId r = null;
 
+        synchronized (CACHE) {
+            WeakReference ref = (WeakReference) CACHE.get(moduleRevisionId);
+            if (ref != null) {
+                r = (ModuleRevisionId) ref.get();
+            }
+            if (r == null) {
+                r = moduleRevisionId;
+                CACHE.put(r, new WeakReference(r));
+            }
         }
+     
         return r;
     }
 
