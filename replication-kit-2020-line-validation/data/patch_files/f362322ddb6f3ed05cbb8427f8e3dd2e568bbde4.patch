From f362322ddb6f3ed05cbb8427f8e3dd2e568bbde4 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Tue, 5 Apr 2011 22:22:22 +0000
Subject: [PATCH] NET-399 ftp data connection does not use connectTimeout

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1089272 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                 | 3 +++
 src/main/java/org/apache/commons/net/ftp/FTPClient.java | 4 +++-
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 41df15a5f..7b4ed0734 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -67,6 +67,9 @@ This release is binary-compatible with 2.2, but there are some minor changes to
   - ftp.FTPSClient ctors no longer throw NoSuchAlgorithmException
   All users are recommended to upgrade.
 ">
+            <action issue="NET-399" dev="sebb" type="fix" due-to="Noah Levitt">
+            ftp data connection does not use connectTimeout.
+            </action>
             <action issue="NET-400" dev="sebb" type="update" due-to="David Kocher">
             Option to override SSL negotiation. Make FTPSClient#execAuth() and FTPSClient#sslNegotiation() protected
             </action>
diff --git a/src/main/java/org/apache/commons/net/ftp/FTPClient.java b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
index 5c3ea94f9..7f1cbb428 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPClient.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
@@ -26,6 +26,7 @@
 import java.io.OutputStreamWriter;
 import java.net.Inet6Address;
 import java.net.InetAddress;
+import java.net.InetSocketAddress;
 import java.net.ServerSocket;
 import java.net.Socket;
 import java.net.SocketException;
@@ -704,7 +705,8 @@ protected Socket _openDataConnection_(int command, String arg)
                 __parsePassiveModeReply(_replyLines.get(0));
             }
 
-            socket = _socketFactory_.createSocket(__passiveHost, __passivePort);
+            socket = _socketFactory_.createSocket();
+            socket.connect(new InetSocketAddress(__passiveHost, __passivePort), connectTimeout);
             if ((__restartOffset > 0) && !restart(__restartOffset))
             {
                 socket.close();
