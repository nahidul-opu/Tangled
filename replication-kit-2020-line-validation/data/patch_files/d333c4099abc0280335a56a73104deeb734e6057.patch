From d333c4099abc0280335a56a73104deeb734e6057 Mon Sep 17 00:00:00 2001
From: Avery Ching <aching@fb.com>
Date: Thu, 20 Jun 2013 11:28:05 -0700
Subject: [PATCH] GIRAPH-694 Setting configuration in GiraphConfiguration
 causes non thread safe copies (aching)

---
 CHANGELOG                                     |  3 +++
 .../giraph/conf/GiraphConfiguration.java      | 19 ++++++++++---------
 2 files changed, 13 insertions(+), 9 deletions(-)

diff --git a/CHANGELOG b/CHANGELOG
index dda130ea0..342faecd8 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -1,6 +1,9 @@
 Giraph Change Log
 
 Release 1.1.0 - unreleased
+  GIRAPH-694 Setting configuration in GiraphConfiguration causes 
+  non thread safe copies (aching)
+
   GIRAPH-683: Jython for Computation (nitay)
 
   GIRAPH-673: Input superstep should support aggregators like any 
diff --git a/giraph-core/src/main/java/org/apache/giraph/conf/GiraphConfiguration.java b/giraph-core/src/main/java/org/apache/giraph/conf/GiraphConfiguration.java
index 87c4c183e..2d232a6ac 100644
--- a/giraph-core/src/main/java/org/apache/giraph/conf/GiraphConfiguration.java
+++ b/giraph-core/src/main/java/org/apache/giraph/conf/GiraphConfiguration.java
@@ -988,7 +988,7 @@ public boolean isStaticGraph() {
    *
    * @param conf Configuration
    */
-  public void updateConfiguration(Configuration conf) {
+  public synchronized void updateConfiguration(Configuration conf) {
     if (this != conf) {
       for (Map.Entry<String, String> parameter : giraphSetParameters) {
         conf.set(parameter.getKey(), parameter.getValue());
@@ -997,49 +997,50 @@ public void updateConfiguration(Configuration conf) {
   }
 
   @Override
-  public void set(String name, String value) {
+  public synchronized void set(String name, String value) {
     super.set(name, value);
     giraphSetParameters.set(name, value);
   }
 
   @Override
-  public void setIfUnset(String name, String value) {
+  public synchronized void setIfUnset(String name, String value) {
     super.setIfUnset(name, value);
     giraphSetParameters.set(name, get(name, value));
   }
 
   @Override
-  public void setInt(String name, int value) {
+  public synchronized void setInt(String name, int value) {
     super.setInt(name, value);
     giraphSetParameters.setInt(name, value);
   }
 
   @Override
-  public void setLong(String name, long value) {
+  public synchronized void setLong(String name, long value) {
     super.setLong(name, value);
     giraphSetParameters.setLong(name, value);
   }
 
   @Override
-  public void setFloat(String name, float value) {
+  public synchronized void setFloat(String name, float value) {
     super.setFloat(name, value);
     giraphSetParameters.setFloat(name, value);
   }
 
   @Override
-  public void setBoolean(String name, boolean value) {
+  public synchronized void setBoolean(String name, boolean value) {
     super.setBoolean(name, value);
     giraphSetParameters.setBoolean(name, value);
   }
 
   @Override
-  public void setBooleanIfUnset(String name, boolean value) {
+  public synchronized void setBooleanIfUnset(String name, boolean value) {
     super.setBooleanIfUnset(name, value);
     giraphSetParameters.setBoolean(name, getBoolean(name, value));
   }
 
   @Override
-  public void setClass(String name, Class<?> theClass, Class<?> xface) {
+  public synchronized void setClass(String name, Class<?> theClass,
+                                    Class<?> xface) {
     super.setClass(name, theClass, xface);
     giraphSetParameters.setClass(name, theClass, xface);
   }
