From bfbc68c3988bfd8e097fa229a29621ff93087cfb Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Fri, 21 Sep 2012 19:08:18 +0000
Subject: [PATCH] [CONFIGURATION-504] Changed return type of configurationsAt()
 method.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@1388625 13f79535-47bb-0310-9956-ffa450edef68
---
 .../configuration/DefaultConfigurationBuilder.java        | 8 ++++----
 .../configuration/DynamicCombinedConfiguration.java       | 2 +-
 .../commons/configuration/HierarchicalConfiguration.java  | 4 ++--
 .../configuration/MultiFileHierarchicalConfiguration.java | 2 +-
 .../configuration/PatternSubtreeConfigurationWrapper.java | 2 +-
 .../configuration/beanutils/XMLBeanDeclaration.java       | 8 ++++----
 .../configuration/TestDefaultConfigurationBuilder.java    | 6 +++---
 .../configuration/TestHierarchicalConfiguration.java      | 2 +-
 .../commons/configuration/TestXMLConfiguration.java       | 2 +-
 9 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/src/main/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java b/src/main/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
index f8452e72a7..94d96bb5d3 100644
--- a/src/main/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
+++ b/src/main/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
@@ -745,8 +745,8 @@ protected void registerDefaultProviders()
      */
     protected void registerConfiguredProviders() throws ConfigurationException
     {
-        List<HierarchicalConfiguration> nodes = configurationsAt(KEY_CONFIGURATION_PROVIDERS);
-        for (HierarchicalConfiguration config : nodes)
+        List<SubnodeConfiguration> nodes = configurationsAt(KEY_CONFIGURATION_PROVIDERS);
+        for (SubnodeConfiguration config : nodes)
         {
             XMLBeanDeclaration decl = new XMLBeanDeclaration(config);
             String key = config.getString(KEY_PROVIDER_KEY);
@@ -762,8 +762,8 @@ protected void registerConfiguredProviders() throws ConfigurationException
      */
     protected void registerConfiguredLookups() throws ConfigurationException
     {
-        List<HierarchicalConfiguration> nodes = configurationsAt(KEY_CONFIGURATION_LOOKUPS);
-        for (HierarchicalConfiguration config : nodes)
+        List<SubnodeConfiguration> nodes = configurationsAt(KEY_CONFIGURATION_LOOKUPS);
+        for (SubnodeConfiguration config : nodes)
         {
             XMLBeanDeclaration decl = new XMLBeanDeclaration(config);
             String key = config.getString(KEY_LOOKUP_KEY);
diff --git a/src/main/java/org/apache/commons/configuration/DynamicCombinedConfiguration.java b/src/main/java/org/apache/commons/configuration/DynamicCombinedConfiguration.java
index 86e168198a..39570c0ff3 100644
--- a/src/main/java/org/apache/commons/configuration/DynamicCombinedConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/DynamicCombinedConfiguration.java
@@ -610,7 +610,7 @@ public SubnodeConfiguration configurationAt(String key)
     }
 
     @Override
-    public List<HierarchicalConfiguration> configurationsAt(String key)
+    public List<SubnodeConfiguration> configurationsAt(String key)
     {
         return this.getCurrentConfig().configurationsAt(key);
     }
diff --git a/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java b/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
index 037dea66f1..4df63b47a6 100644
--- a/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
@@ -585,10 +585,10 @@ public SubnodeConfiguration configurationAt(String key)
      * configuration represents one of the nodes selected by the passed in key
      * @since 1.3
      */
-    public List<HierarchicalConfiguration> configurationsAt(String key)
+    public List<SubnodeConfiguration> configurationsAt(String key)
     {
         List<ConfigurationNode> nodes = fetchNodeList(key);
-        List<HierarchicalConfiguration> configs = new ArrayList<HierarchicalConfiguration>(nodes.size());
+        List<SubnodeConfiguration> configs = new ArrayList<SubnodeConfiguration>(nodes.size());
         for (ConfigurationNode node : nodes)
         {
             configs.add(createSubnodeConfiguration(node));
diff --git a/src/main/java/org/apache/commons/configuration/MultiFileHierarchicalConfiguration.java b/src/main/java/org/apache/commons/configuration/MultiFileHierarchicalConfiguration.java
index d09b28d690..a43038b422 100644
--- a/src/main/java/org/apache/commons/configuration/MultiFileHierarchicalConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/MultiFileHierarchicalConfiguration.java
@@ -511,7 +511,7 @@ public SubnodeConfiguration configurationAt(String key)
     }
 
     @Override
-    public List<HierarchicalConfiguration> configurationsAt(String key)
+    public List<SubnodeConfiguration> configurationsAt(String key)
     {
         return this.getConfiguration().configurationsAt(key);
     }
diff --git a/src/main/java/org/apache/commons/configuration/PatternSubtreeConfigurationWrapper.java b/src/main/java/org/apache/commons/configuration/PatternSubtreeConfigurationWrapper.java
index 19006e6eca..1f77ab6904 100644
--- a/src/main/java/org/apache/commons/configuration/PatternSubtreeConfigurationWrapper.java
+++ b/src/main/java/org/apache/commons/configuration/PatternSubtreeConfigurationWrapper.java
@@ -388,7 +388,7 @@ public SubnodeConfiguration configurationAt(String key)
     }
 
     @Override
-    public List<HierarchicalConfiguration> configurationsAt(String key)
+    public List<SubnodeConfiguration> configurationsAt(String key)
     {
         return config.configurationsAt(makePath(key));
     }
diff --git a/src/main/java/org/apache/commons/configuration/beanutils/XMLBeanDeclaration.java b/src/main/java/org/apache/commons/configuration/beanutils/XMLBeanDeclaration.java
index 66eb867ecf..e56075f90d 100644
--- a/src/main/java/org/apache/commons/configuration/beanutils/XMLBeanDeclaration.java
+++ b/src/main/java/org/apache/commons/configuration/beanutils/XMLBeanDeclaration.java
@@ -394,17 +394,17 @@ protected boolean isReservedNode(ConfigurationNode nd)
      */
     protected BeanDeclaration createBeanDeclaration(ConfigurationNode node)
     {
-        List<HierarchicalConfiguration> list = getConfiguration().configurationsAt(node.getName());
+        List<SubnodeConfiguration> list = getConfiguration().configurationsAt(node.getName());
         if (list.size() == 1)
         {
-            return new XMLBeanDeclaration((SubnodeConfiguration) list.get(0), node);
+            return new XMLBeanDeclaration(list.get(0), node);
         }
         else
         {
-            Iterator<HierarchicalConfiguration> iter = list.iterator();
+            Iterator<SubnodeConfiguration> iter = list.iterator();
             while (iter.hasNext())
             {
-                SubnodeConfiguration config = (SubnodeConfiguration) iter.next();
+                SubnodeConfiguration config = iter.next();
                 if (config.getRootNode().equals(node))
                 {
                     return new XMLBeanDeclaration(config, node);
diff --git a/src/test/java/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java b/src/test/java/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
index 72946efe60..558086edb4 100644
--- a/src/test/java/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
+++ b/src/test/java/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
@@ -1131,11 +1131,11 @@ public void testMerge() throws Exception
         CombinedConfiguration config = factory.getConfiguration(true);
         assertTrue("Incorrect configuration", config instanceof DynamicCombinedConfiguration);
 
-        List<HierarchicalConfiguration> list = config.configurationsAt("colors/*");
-        Iterator<HierarchicalConfiguration> iter = list.iterator();
+        List<SubnodeConfiguration> list = config.configurationsAt("colors/*");
+        Iterator<SubnodeConfiguration> iter = list.iterator();
         while (iter.hasNext())
         {
-            SubnodeConfiguration sub = (SubnodeConfiguration)iter.next();
+            SubnodeConfiguration sub = iter.next();
             ConfigurationNode node = sub.getRootNode();
             String value = (node.getValue() == null) ? "null" : node.getValue().toString();
             if (map.containsKey(node.getName()))
diff --git a/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java b/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
index e1cc3b5962..623e0734f6 100644
--- a/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestHierarchicalConfiguration.java
@@ -627,7 +627,7 @@ public void testConfigurationAtClearAndDetach()
     @Test
     public void testConfigurationsAt()
     {
-        List<HierarchicalConfiguration> lstFlds = config.configurationsAt("tables.table(1).fields.field");
+        List<SubnodeConfiguration> lstFlds = config.configurationsAt("tables.table(1).fields.field");
         assertEquals("Wrong size of fields", fields[1].length, lstFlds.size());
         for (int i = 0; i < fields[1].length; i++)
         {
diff --git a/src/test/java/org/apache/commons/configuration/TestXMLConfiguration.java b/src/test/java/org/apache/commons/configuration/TestXMLConfiguration.java
index 8c14e0ae89..bdf34aee76 100644
--- a/src/test/java/org/apache/commons/configuration/TestXMLConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestXMLConfiguration.java
@@ -1174,7 +1174,7 @@ public void testConfigurationAtWithReload() throws ConfigurationException
     public void testConfigurationsAtWithReload() throws ConfigurationException
     {
         XMLConfiguration c = setUpReloadTest();
-        List<HierarchicalConfiguration> configs = c.configurationsAt("test");
+        List<SubnodeConfiguration> configs = c.configurationsAt("test");
         assertEquals("New value not read", "newValue",
                 configs.get(0).getString("entity"));
     }
