From 98556fedcce9e7e4375f994cc171d4803e6c0ee9 Mon Sep 17 00:00:00 2001
From: Phil Steitz <psteitz@apache.org>
Date: Wed, 3 Aug 2011 04:16:23 +0000
Subject: [PATCH] Fixed bugs in AbstractRandomGenerator nextInt() and
 nextLong() default implementations.  Prior to the fix for this issue, these
 methods generated only positive values.

JIRA: MATH-640

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1153338 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/math/random/AbstractRandomGenerator.java |  4 ++--
 src/site/xdoc/changes.xml                            |  5 +++++
 .../math/random/AbstractRandomGeneratorTest.java     | 12 +-----------
 3 files changed, 8 insertions(+), 13 deletions(-)

diff --git a/src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java b/src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java
index 85768473da..10c8f3881a 100644
--- a/src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java
+++ b/src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java
@@ -134,7 +134,7 @@ public void nextBytes(byte[] bytes) {
      *  value from this random number generator's sequence
      */
     public int nextInt() {
-        return (int) (nextDouble() * Integer.MAX_VALUE);
+        return (int) ((2d * nextDouble() - 1d) * Integer.MAX_VALUE);
     }
 
     /**
@@ -176,7 +176,7 @@ public int nextInt(int n) {
      *value from this random number generator's sequence
      */
     public long nextLong() {
-        return (long) (nextDouble() * Long.MAX_VALUE);
+        return (long) ((2d * nextDouble() - 1d) * Long.MAX_VALUE);
     }
 
     /**
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index 2533d6b619..a498206e65 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -52,6 +52,11 @@ The <action> type attribute can be add,update,fix,remove.
     If the output is not quite correct, check for invisible trailing spaces!
      -->
     <release version="3.0" date="TBD" description="TBD">
+      <action dev="psteitz" type="fix" issue="MATH-640">
+        Fixed bugs in AbstractRandomGenerator nextInt() and nextLong() default
+        implementations.  Prior to the fix for this issue, these methods
+        generated only positive values.
+      </action>
       <action dev="erans" type="add" issue="MATH-637">
         Simple benchmark utility (new class "PerfTestUtils" added to test sources in src/test).
       </action>
diff --git a/src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java b/src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java
index 4c3cf046f6..1382fb3f9f 100644
--- a/src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java
+++ b/src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java
@@ -23,16 +23,6 @@
  */
 
 public class AbstractRandomGeneratorTest extends RandomGeneratorAbstractTest {
-    
-    @Override
-    public void testNextInt2() {
-        // Currently broken.  Remove this stub when MATH-640 is resolved
-    }
-    
-    @Override
-    public void testNextLong2() {
-        // Currently broken.  Remove this stub when MATH-640 is resolved
-    }
 
     public AbstractRandomGeneratorTest() {
         super();
@@ -40,7 +30,7 @@ public AbstractRandomGeneratorTest() {
     
     protected RandomGenerator makeGenerator() {
         RandomGenerator generator = new TestRandomGenerator();
-        generator.setSeed(1000);
+        generator.setSeed(1001);
         return generator;
     }
     
