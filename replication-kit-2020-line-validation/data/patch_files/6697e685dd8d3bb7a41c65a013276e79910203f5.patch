From 6697e685dd8d3bb7a41c65a013276e79910203f5 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Tue, 7 Feb 2017 23:23:36 +0000
Subject: [PATCH] NET-602 Failure to parse times from SYST_L8 systems that
 report as "WINDOWS Type: L8"

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1782089 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                              |  3 +++
 .../org/apache/commons/net/ftp/FTPClientConfig.java  | 11 +++++++++++
 .../ftp/parser/DefaultFTPFileEntryParserFactory.java | 12 ++++++++----
 3 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 87cd59337..c902431ea 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -87,6 +87,9 @@ without checking it if is a space.
   The POP3Mail examples can now get password from console, stdin or an environment variable.
   
 ">
+            <action issue="NET-602" type="fix" dev="sebb" due-to="Ross Braithwaite">
+            Failure to parse times from SYST_L8 systems that report as "WINDOWS Type: L8"
+            </action>
             <action issue="NET-604" type="fix" dev="sebb" due-to="Frank Delporte">
             TFTP send & receive don't have progress indication
             </action>
diff --git a/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java b/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
index ea1740213..6b7f6999f 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
@@ -351,6 +351,17 @@ public FTPClientConfig(String systemKey,
         this.shortMonthNames = config.shortMonthNames;
     }
 
+    public FTPClientConfig(FTPClientConfig config) {
+        this.serverSystemKey = config.serverSystemKey;
+        this.defaultDateFormatStr = config.defaultDateFormatStr;
+        this.lenientFutureDates = config.lenientFutureDates;
+        this.recentDateFormatStr = config.recentDateFormatStr;
+        this.saveUnparseableEntries = config.saveUnparseableEntries;
+        this.serverLanguageCode = config.serverLanguageCode;
+        this.serverTimeZoneId = config.serverTimeZoneId;
+        this.shortMonthNames = config.shortMonthNames;
+    }
+
     private static final Map<String, Object> LANGUAGE_CODE_MAP = new TreeMap<String, Object>();
     static {
 
diff --git a/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java b/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
index 75f200197..19e4c8e33 100644
--- a/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
+++ b/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
@@ -240,11 +240,13 @@ private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config)
         {
             return new NTFTPEntryParser(config);
         } else {
+            // clone the config as it may be changed by the parsers (NET-602)
+            final FTPClientConfig config2 =  (config != null) ? new FTPClientConfig(config) : null;
             return new CompositeFileEntryParser(new FTPFileEntryParser[]
                    {
                        new NTFTPEntryParser(config),
-                       new UnixFTPEntryParser(config,
-                               config != null && FTPClientConfig.SYST_UNIX_TRIM_LEADING.equals(config.getServerSystemKey()))
+                       new UnixFTPEntryParser(config2,
+                               config2 != null && FTPClientConfig.SYST_UNIX_TRIM_LEADING.equals(config2.getServerSystemKey()))
                    });
         }
     }
@@ -273,11 +275,13 @@ private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config)
         {
             return new OS400FTPEntryParser(config);
         } else {
+            // clone the config as it may be changed by the parsers (NET-602)
+            final FTPClientConfig config2 =  (config != null) ? new FTPClientConfig(config) : null;
             return new CompositeFileEntryParser(new FTPFileEntryParser[]
                 {
                     new OS400FTPEntryParser(config),
-                    new UnixFTPEntryParser(config,
-                            config != null && FTPClientConfig.SYST_UNIX_TRIM_LEADING.equals(config.getServerSystemKey()))
+                    new UnixFTPEntryParser(config2,
+                            config2 != null && FTPClientConfig.SYST_UNIX_TRIM_LEADING.equals(config2.getServerSystemKey()))
                 });
         }
     }
