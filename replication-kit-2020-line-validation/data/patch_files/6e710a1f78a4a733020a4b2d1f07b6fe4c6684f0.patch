From 6e710a1f78a4a733020a4b2d1f07b6fe4c6684f0 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Tue, 2 Sep 2008 20:13:38 +0000
Subject: [PATCH] FIX: Invalid URL when using dynamic ranges (IVY-885)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@691363 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 .../apache/ivy/util/url/BasicURLHandler.java  | 31 +++++++++++++++++++
 2 files changed, 32 insertions(+)

diff --git a/CHANGES.txt b/CHANGES.txt
index ea1a9c8fa..77944d6db 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -110,6 +110,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Add a memory cache for the module descriptor that are parsed from the cache (IVY-883)
 - IMPROVEMENT: Improve performance (IVY-872)
 
+- FIX: Invalid URL when using dynamic ranges (IVY-885)
 - FIX: can't use gotoNode with a node which has not been visited yet (IVY-874)
 - FIX: Ivy Publish Task Fails When XML Comments Exist Next to Dependency Declarations (IVY-888)
 - FIX: Incorrect directory path resolve when running from a different directory (IVY-232)
diff --git a/src/java/org/apache/ivy/util/url/BasicURLHandler.java b/src/java/org/apache/ivy/util/url/BasicURLHandler.java
index b2dc21d8b..7229acd64 100644
--- a/src/java/org/apache/ivy/util/url/BasicURLHandler.java
+++ b/src/java/org/apache/ivy/util/url/BasicURLHandler.java
@@ -19,9 +19,14 @@
 
 import java.io.*;
 import java.net.HttpURLConnection;
+import java.net.MalformedURLException;
+import java.net.URI;
+import java.net.URISyntaxException;
 import java.net.URL;
 import java.net.URLConnection;
 import java.net.UnknownHostException;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 
 import org.apache.ivy.Ivy;
 import org.apache.ivy.util.CopyProgressListener;
@@ -32,6 +37,8 @@
  * 
  */
 public class BasicURLHandler extends AbstractURLHandler {
+    
+    private static final Pattern ESCAPE_PATTERN = Pattern.compile("%25([0-9a-fA-F][0-9a-fA-F])");
 
     private static final int BUFFER_SIZE = 64 * 1024;
 
@@ -58,6 +65,7 @@ public URLInfo getURLInfo(URL url) {
     public URLInfo getURLInfo(URL url, int timeout) {
         URLConnection con = null;
         try {
+            url = normalize(url);
             con = url.openConnection();
             con.setRequestProperty("User-Agent", "Apache Ivy/" + Ivy.getIvyVersion());
             if (con instanceof HttpURLConnection) {
@@ -86,6 +94,26 @@ public URLInfo getURLInfo(URL url, int timeout) {
         return UNAVAILABLE;
     }
 
+    private URL normalize(URL url) throws IOException {
+        if ("http".equals(url.getProtocol()) || "https".equals(url.getProtocol())) {
+            try { 
+                URI uri = new URI(url.getProtocol(), url.getUserInfo(), url.getHost(), 
+                        url.getPort(), url.getPath(), url.getQuery(), url.getRef());
+                
+                // it is possible that the original url was already (partial) escaped,
+                // so we must unescape all '%' followed by 2 hexadecimals...
+                String uriString = uri.toString();
+                url = new URL(ESCAPE_PATTERN.matcher(uriString).replaceAll("%$1"));
+            } catch (URISyntaxException e) {
+                IOException ioe = new MalformedURLException("Couldn't convert '" + 
+                    url.toString() + "' to a valid URI"); 
+                ioe.initCause(e); 
+                throw ioe;
+            }
+        }
+        return url;
+    }
+
     private boolean checkStatusCode(URL url, HttpURLConnection con) throws IOException {
         int status = con.getResponseCode();
         if (status == HttpStatus.SC_OK) {
@@ -108,6 +136,7 @@ public InputStream openStream(URL url) throws IOException {
         URLConnection conn = null;
         InputStream inStream = null;
         try {
+            url = normalize(url);
             conn = url.openConnection();
             conn.setRequestProperty("User-Agent", "Apache Ivy/" + Ivy.getIvyVersion());
             if (conn instanceof HttpURLConnection) {
@@ -139,6 +168,7 @@ public InputStream openStream(URL url) throws IOException {
     public void download(URL src, File dest, CopyProgressListener l) throws IOException {
         URLConnection srcConn = null;
         try {
+            src = normalize(src);
             srcConn = src.openConnection();
             srcConn.setRequestProperty("User-Agent", "Apache Ivy/" + Ivy.getIvyVersion());
             if (srcConn instanceof HttpURLConnection) {
@@ -174,6 +204,7 @@ public void upload(File source, URL dest, CopyProgressListener l) throws IOExcep
 
         HttpURLConnection conn = null;
         try {
+            dest = normalize(dest);
             conn = (HttpURLConnection) dest.openConnection();
             conn.setDoOutput(true);
             conn.setRequestMethod("PUT");
