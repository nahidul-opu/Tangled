From f584ed909815d3020e718c8dd9c1f335c7a1543d Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 22 Mar 2012 21:13:00 +0000
Subject: [PATCH] IO-311 IOUtils.read(InputStream/Reader) ignores the offset
 parameter

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1304066 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                        |  3 +++
 .../java/org/apache/commons/io/IOUtils.java    |  4 ++--
 .../org/apache/commons/io/IOUtilsTestCase.java | 18 ++++++++++++++++++
 3 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index ee8482cbd7f..e83c310a29f 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -40,6 +40,9 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="2.2" date="TBA" description="">
+      <action issue="IO-311" dev="sebb" type="fix" due-to="Robert Muir">
+        IOUtils.read(InputStream/Reader) ignores the offset parameter
+      </action>        
       <action issue="IO-312" dev="sebb" type="fix">
         CharSequenceInputStream(CharSequence s, Charset charset, int bufferSize) ignores bufferSize
       </action>        
diff --git a/src/main/java/org/apache/commons/io/IOUtils.java b/src/main/java/org/apache/commons/io/IOUtils.java
index c16a50f637f..329d92f9fb6 100644
--- a/src/main/java/org/apache/commons/io/IOUtils.java
+++ b/src/main/java/org/apache/commons/io/IOUtils.java
@@ -1977,7 +1977,7 @@ public static int read(Reader input, char[] buffer, int offset, int length) thro
         int remaining = length;
         while (remaining > 0) {
             int location = length - remaining;
-            int count = input.read(buffer, location, remaining);
+            int count = input.read(buffer, offset + location, remaining);
             if (EOF == count) { // EOF
                 break;
             }
@@ -2023,7 +2023,7 @@ public static int read(InputStream input, byte[] buffer, int offset, int length)
         int remaining = length;
         while (remaining > 0) {
             int location = length - remaining;
-            int count = input.read(buffer, location, remaining);
+            int count = input.read(buffer, offset + location, remaining);
             if (EOF == count) { // EOF
                 break;
             }
diff --git a/src/test/java/org/apache/commons/io/IOUtilsTestCase.java b/src/test/java/org/apache/commons/io/IOUtilsTestCase.java
index 6e300286938..34d65ee5e6a 100644
--- a/src/test/java/org/apache/commons/io/IOUtilsTestCase.java
+++ b/src/test/java/org/apache/commons/io/IOUtilsTestCase.java
@@ -30,6 +30,7 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.Reader;
+import java.io.StringReader;
 import java.net.URI;
 import java.net.URL;
 import java.nio.channels.Selector;
@@ -732,6 +733,23 @@ public void testReadReader() throws Exception {
         }
         IOUtils.closeQuietly(input);
     }
+    
+    public void testReadReaderWithOffset() throws Exception {
+        Reader reader = new StringReader("abcd1234");
+        char[] buffer = "wx00000000".toCharArray();
+        IOUtils.readFully(reader, buffer, 2, 8);
+        assertEquals("wxabcd1234", new String(buffer));
+        IOUtils.closeQuietly(reader);
+    }
+    
+    public void testReadStreamWithOffset() throws Exception {
+        byte[] bytes = "abcd1234".getBytes("UTF-8");
+        ByteArrayInputStream stream = new ByteArrayInputStream(bytes);
+        byte[] buffer = "wx00000000".getBytes("UTF-8");
+        IOUtils.readFully(stream, buffer, 2, 8);
+        assertEquals("wxabcd1234", new String(buffer, 0, buffer.length, "UTF-8"));
+        IOUtils.closeQuietly(stream);
+    }
 
     // Tests from IO-305
     
