From 7e9b1a447f277ac07267710aa96f42cabf3b49b5 Mon Sep 17 00:00:00 2001
From: Rory Winston <rwinston@apache.org>
Date: Tue, 4 Mar 2008 07:39:17 +0000
Subject: [PATCH] Remove specific isLeapYear() check, to handle other cases
 (such as Apr 26 02:00 in US/Central timezone). See NET-188

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@633380 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/net/ftp/parser/FTPTimestampParserImpl.java  | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java b/src/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java
index 4fd32cb7f..64b3cf65d 100644
--- a/src/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java
+++ b/src/java/org/apache/commons/net/ftp/parser/FTPTimestampParserImpl.java
@@ -101,8 +101,7 @@ public Calendar parseTimestamp(String timestampStr) throws ParseException {
 			// e.g. Java's DateFormatter will assume that "Feb 29 12:00" refers to 
 			// Feb 29 1970 (an invalid date) rather than a potentially valid leap year date.
 			// This is pretty bad hack to work around the deficiencies of the JDK date/time classes.
-			if (recentDateFormat != null && 
-					new GregorianCalendar().isLeapYear(now.get(Calendar.YEAR))) {
+			if (recentDateFormat != null) {
 				pp = new ParsePosition(0);
 				int year = Calendar.getInstance().get(Calendar.YEAR);
 				String timeStampStrPlusYear = timestampStr + " " + year;
