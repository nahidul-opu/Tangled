From d270055e874148a2742604be36ab977eec030fba Mon Sep 17 00:00:00 2001
From: Luc Maisonobe <luc@apache.org>
Date: Mon, 3 Jun 2013 07:15:00 +0000
Subject: [PATCH] Fixed NullPointerException in 2D and 3D sub-line
 intersections.

Patch contributed by Andeas Huber.

JIRA: MATH-988

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1488866 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                   | 3 +++
 .../commons/math3/geometry/euclidean/threed/SubLine.java  | 3 +++
 .../commons/math3/geometry/euclidean/twod/SubLine.java    | 3 +++
 .../math3/geometry/euclidean/threed/SubLineTest.java      | 8 ++++++++
 .../math3/geometry/euclidean/twod/SubLineTest.java        | 8 ++++++++
 5 files changed, 25 insertions(+)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index a50812f4bb..1b0155445a 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -51,6 +51,9 @@ If the output is not quite correct, check for invisible trailing spaces!
   </properties>
   <body>
     <release version="x.y" date="TBD" description="TBD">
+      <action dev="luc" type="fix" issue="MATH-988" due-to="Andreas Huber">
+        Fixed NullPointerException in 2D and 3D sub-line intersections.
+      </action>
       <action dev="psteitz" type="update" issue="MATH-987" due-to="Ajo Fod">
         Added append method to SimpleRegression, making this class map/reducible.
       </action>
diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
index a146cb661b..aad7b65a54 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
@@ -111,6 +111,9 @@ public Vector3D intersection(final SubLine subLine, final boolean includeEndPoin
 
         // compute the intersection on infinite line
         Vector3D v1D = line.intersection(subLine.line);
+        if (v1D == null) {
+            return null;
+        }
 
         // check location of point with respect to first sub-line
         Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));
diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
index a9d621a44e..ea9e96a490 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
@@ -115,6 +115,9 @@ public Vector2D intersection(final SubLine subLine, final boolean includeEndPoin
 
         // compute the intersection on infinite line
         Vector2D v2D = line1.intersection(line2);
+        if (v2D == null) {
+            return null;
+        }
 
         // check location of point with respect to first sub-line
         Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));
diff --git a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
index f060cfb8f1..b941ffae71 100644
--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
@@ -152,5 +152,13 @@ public void testIntersectionOutsideOutside() throws MathIllegalArgumentException
         Assert.assertNull(sub1.intersection(sub2, true));
         Assert.assertNull(sub1.intersection(sub2, false));
     }
+    
+    @Test
+    public void testIntersectionNotIntersecting() throws MathIllegalArgumentException {
+        SubLine sub1 = new SubLine(new Vector3D(1, 1, 1), new Vector3D(1.5, 1, 1));
+        SubLine sub2 = new SubLine(new Vector3D(2, 3, 0), new Vector3D(2, 3, 0.5));
+        Assert.assertNull(sub1.intersection(sub2, true));
+        Assert.assertNull(sub1.intersection(sub2, false));
+    }
 
 }
diff --git a/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java b/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
index bc276d1301..7a9defe564 100644
--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
@@ -144,4 +144,12 @@ public void testIntersectionOutsideOutside() {
         Assert.assertNull(sub1.intersection(sub2, false));
     }
 
+    @Test
+    public void testIntersectionParallel() {
+        final SubLine sub1 = new SubLine(new Vector2D(0, 1), new Vector2D(0, 2));
+        final SubLine sub2 = new SubLine(new Vector2D(66, 3), new Vector2D(66, 4));
+        Assert.assertNull(sub1.intersection(sub2, true));
+        Assert.assertNull(sub1.intersection(sub2, false));
+    }
+
 }
