From b30f3d55562471055862c3be42fb3a1a5c5d341a Mon Sep 17 00:00:00 2001
From: Sebastien Brisard <celestin@apache.org>
Date: Fri, 22 Jun 2012 07:06:28 +0000
Subject: [PATCH] MATH-803 : deprecated RealVector.ebeMultiply() and
 RealVector.ebeDivide(), and updated unit tests accordingly.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1352782 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/math3/linear/RealVector.java      | 20 +++++++++++++++++++
 .../math3/linear/RealVectorAbstractTest.java  | 16 +++++++++++++--
 .../UnmodifiableRealVectorAbstractTest.java   |  2 ++
 3 files changed, 36 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/apache/commons/math3/linear/RealVector.java b/src/main/java/org/apache/commons/math3/linear/RealVector.java
index 6e89a3aee8..377fadb45a 100644
--- a/src/main/java/org/apache/commons/math3/linear/RealVector.java
+++ b/src/main/java/org/apache/commons/math3/linear/RealVector.java
@@ -336,7 +336,17 @@ public double cosine(RealVector v) {
      * @return a vector containing this[i] / v[i] for all i.
      * @throws org.apache.commons.math3.exception.DimensionMismatchException
      * if {@code v} is not the same size as this vector.
+     * @deprecated As of version 3.1, this method is deprecated, and will be
+     * removed in version 4.0. This decision follows the discussion reported in
+     * <a href="https://issues.apache.org/jira/browse/MATH-803?focusedCommentId=13399150#comment-13399150">MATH-803</a>.
+     * Uses of this method involving sparse implementations of
+     * {@link RealVector} might lead to wrong results. Since there is no
+     * satisfactory correction to this bug, this method is deprecated. Users who
+     * want to preserve this feature are advised to implement
+     * {@link RealVectorPreservingVisitor} (possibly ignoring corner cases for
+     * the sake of efficiency).
      */
+    @Deprecated
     public abstract RealVector ebeDivide(RealVector v);
 
     /**
@@ -346,7 +356,17 @@ public double cosine(RealVector v) {
      * @return a vector containing this[i] * v[i] for all i.
      * @throws org.apache.commons.math3.exception.DimensionMismatchException
      * if {@code v} is not the same size as this vector.
+     * @deprecated As of version 3.1, this method is deprecated, and will be
+     * removed in version 4.0. This decision follows the discussion reported in
+     * <a href="https://issues.apache.org/jira/browse/MATH-803?focusedCommentId=13399150#comment-13399150">MATH-803</a>.
+     * Uses of this method involving sparse implementations of
+     * {@link RealVector} might lead to wrong results. Since there is no
+     * satisfactory correction to this bug, this method is deprecated. Users who
+     * want to preserve this feature are advised to implement
+     * {@link RealVectorPreservingVisitor} (possibly ignoring corner cases for
+     * the sake of efficiency).
      */
+    @Deprecated
     public abstract RealVector ebeMultiply(RealVector v);
 
     /**
diff --git a/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java b/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
index b6a0fc859b..4631adc707 100644
--- a/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
+++ b/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
@@ -53,6 +53,7 @@
 import org.apache.commons.math3.util.FastMath;
 import org.apache.commons.math3.util.MathArrays;
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 
 
@@ -463,9 +464,14 @@ private void doTestEbeBinaryOperation(final BinaryOperation op, final boolean mi
          *
          * The values to be considered are: x, y, z, x * x.
          *
-         * Also to be considered NaN, POSITIVE_INFINITY, NEGATIVE_INFINITY.
+         * Also to be considered NaN, POSITIVE_INFINITY, NEGATIVE_INFINITY,
+         * +0.0, -0.0.
          */
-        final double[] values = {x, y, z, 2 * x, -x, 1 / x, x * x, x + y, x - y, y - x};
+        final double[] values =
+            {
+                Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY,
+                0d, -0d, x, y, z, 2 * x, -x, 1 / x, x * x, x + y, x - y, y - x
+            };
         final double[] data1 = new double[values.length * values.length];
         final double[] data2 = new double[values.length * values.length];
         int k = 0;
@@ -570,31 +576,37 @@ public void testSubtractDimensionMismatch() {
         doTestEbeBinaryOperationDimensionMismatch(BinaryOperation.SUB);
     }
 
+    @Ignore("ebeMultiply(RealVector) is known to be faulty (MATH-803) and is deprecated.")
     @Test
     public void testEbeMultiplySameType() {
         doTestEbeBinaryOperation(BinaryOperation.MUL, false);
     }
 
+    @Ignore("ebeMultiply(RealVector) is known to be faulty (MATH-803) and is deprecated.")
     @Test
     public void testEbeMultiplyMixedTypes() {
         doTestEbeBinaryOperation(BinaryOperation.MUL, true);
     }
 
+    @Ignore("ebeMultiply(RealVector) is known to be faulty (MATH-803) and is deprecated.")
     @Test(expected = DimensionMismatchException.class)
     public void testEbeMultiplyDimensionMismatch() {
         doTestEbeBinaryOperationDimensionMismatch(BinaryOperation.MUL);
     }
 
+    @Ignore("ebeDivide(RealVector) is known to be faulty (MATH-803) and is deprecated.")
     @Test
     public void testEbeDivideSameType() {
         doTestEbeBinaryOperation(BinaryOperation.DIV, false);
     }
 
+    @Ignore("ebeDivide(RealVector) is known to be faulty (MATH-803) and is deprecated.")
     @Test
     public void testEbeDivideMixedTypes() {
         doTestEbeBinaryOperation(BinaryOperation.DIV, true);
     }
 
+    @Ignore("ebeDivide(RealVector) is known to be faulty (MATH-803) and is deprecated.")
     @Test(expected = DimensionMismatchException.class)
     public void testEbeDivideDimensionMismatch() {
         doTestEbeBinaryOperationDimensionMismatch(BinaryOperation.DIV);
diff --git a/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java b/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
index 79f9b32e1b..1ace6f4fbb 100644
--- a/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
+++ b/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
@@ -64,6 +64,8 @@ public abstract class UnmodifiableRealVectorAbstractTest {
         EXCLUDE.add("sparseIterator");
         EXCLUDE.add("walkInDefaultOrder");
         EXCLUDE.add("walkInOptimizedOrder");
+        EXCLUDE.add("ebeDivide");
+        EXCLUDE.add("ebeMultiply");
 
         // Excluded because they are inherited from "Object".
         for (Method m : Object.class.getMethods()) {
