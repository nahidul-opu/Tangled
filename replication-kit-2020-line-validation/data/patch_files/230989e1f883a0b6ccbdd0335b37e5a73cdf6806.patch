From 230989e1f883a0b6ccbdd0335b37e5a73cdf6806 Mon Sep 17 00:00:00 2001
From: Thomas Vandahl <tv@apache.org>
Date: Mon, 6 Jan 2014 17:23:51 +0000
Subject: [PATCH] Add a test for JCS-102

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/jcs/trunk@1555926 13f79535-47bb-0310-9956-ffa450edef68
---
 .../jcs/access/CacheAccessUnitTest.java       | 47 +++++++++++++++++++
 1 file changed, 47 insertions(+)

diff --git a/src/test/org/apache/commons/jcs/access/CacheAccessUnitTest.java b/src/test/org/apache/commons/jcs/access/CacheAccessUnitTest.java
index 39e1a3974..b1eb21ba4 100644
--- a/src/test/org/apache/commons/jcs/access/CacheAccessUnitTest.java
+++ b/src/test/org/apache/commons/jcs/access/CacheAccessUnitTest.java
@@ -360,4 +360,51 @@ public void testGetMatchingElements_Normal()
             assertTrue( "Should be a cache element.", value instanceof ICacheElement );
         }
     }
+
+    /**
+     * Verify we can use the group cache.
+     * <p>
+     * @throws Exception
+     */
+    public void testGroupCache()
+        throws Exception
+    {
+        GroupCacheAccess<String, Integer> access = JCS.getGroupCacheInstance( "testGroup" );
+        String groupName1 = "testgroup1";
+        String groupName2 = "testgroup2";
+
+        Set<String> keys1 = access.getGroupKeys( groupName1 );
+        assertNotNull(keys1);
+        assertEquals(0, keys1.size());
+
+        Set<String> keys2 = access.getGroupKeys( groupName2 );
+        assertNotNull(keys2);
+        assertEquals(0, keys2.size());
+
+        // DO WORK
+        int numToInsertGroup1 = 10;
+        // insert with prefix1
+        for ( int i = 0; i < numToInsertGroup1; i++ )
+        {
+            access.putInGroup(String.valueOf( i ), groupName1, Integer.valueOf( i ) );
+        }
+
+        int numToInsertGroup2 = 50;
+        // insert with prefix1
+        for ( int i = 0; i < numToInsertGroup2; i++ )
+        {
+            access.putInGroup(String.valueOf( i ), groupName2, Integer.valueOf( i + 1 ) );
+        }
+
+        keys1 = access.getGroupKeys( groupName1 ); // Test for JCS-102
+        assertNotNull(keys1);
+        assertEquals("Wrong number returned 1:", 10, keys1.size());
+
+        keys2 = access.getGroupKeys( groupName2 );
+        assertNotNull(keys2);
+        assertEquals("Wrong number returned 2:", 50, keys2.size());
+
+        assertEquals(Integer.valueOf(5), access.getFromGroup("5", groupName1));
+        assertEquals(Integer.valueOf(6), access.getFromGroup("5", groupName2));
+    }
 }
