From cf64557bb2e1db1c46158a28a0010f279708e3d6 Mon Sep 17 00:00:00 2001
From: Christian Grobmeier <grobmeier@apache.org>
Date: Mon, 13 Apr 2009 15:20:24 +0000
Subject: [PATCH] COMPRESS-69: Applied patch from Uwe Schindler. Writing magic
 BZ is now done by the stream again. COMPRESS-69: Updated docs

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@764503 13f79535-47bb-0310-9956-ffa450edef68
---
 .../bzip2/BZip2CompressorOutputStream.java    | 31 ++++++-------------
 1 file changed, 10 insertions(+), 21 deletions(-)

diff --git a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
index 6737ee10d7a..ada545d9c3d 100644
--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
@@ -543,13 +543,7 @@ public static int chooseBlockSize(long inputLength) {
     /**
      * Constructs a new <tt>CBZip2OutputStream</tt> with a blocksize of 900k.
      *
-     * <p>
-     * <b>Attention: </b>The caller is resonsible to write the two BZip2 magic
-     * bytes <tt>"BZ"</tt> to the specified stream prior to calling this
-     * constructor.
-     * </p>
-     *
-     * @param out *
+     * @param out 
      *            the destination stream.
      *
      * @throws IOException
@@ -565,13 +559,6 @@ public BZip2CompressorOutputStream(final OutputStream out)
     /**
      * Constructs a new <tt>CBZip2OutputStream</tt> with specified blocksize.
      *
-     * <p>
-     * <b>Attention: </b>The caller is resonsible to write the two BZip2 magic
-     * bytes <tt>"BZ"</tt> to the specified stream prior to calling this
-     * constructor.
-     * </p>
-     *
-     *
      * @param out
      *            the destination stream.
      * @param blockSize
@@ -708,17 +695,19 @@ public void flush() throws IOException {
         }
     }
 
+    /**
+     * Writes magic bytes like BZ on the first position of the stream
+     * and bytes indiciating the file-format, which is 
+     * huffmanised, followed by a digit indicating blockSize100k.
+     * @throws IOException if the magic bytes could not been written
+     */
     private void init() throws IOException {
-        // write magic: done by caller who created this stream
-        // this.out.write('B');
-        // this.out.write('Z');
+        bsPutUByte('B');
+        bsPutUByte('Z');
 
         this.data = new Data(this.blockSize100k);
 
-        /*
-         * Write `magic' bytes h indicating file-format == huffmanised, followed
-         * by a digit indicating blockSize100k.
-         */
+        // huffmanised magic bytes
         bsPutUByte('h');
         bsPutUByte('0' + this.blockSize100k);
 
