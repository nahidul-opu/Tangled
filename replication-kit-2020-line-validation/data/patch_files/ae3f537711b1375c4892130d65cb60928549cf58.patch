From ae3f537711b1375c4892130d65cb60928549cf58 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Sat, 30 Nov 2013 16:22:52 +0000
Subject: [PATCH] [BEANUTILS-454] BeanUtilsBean.copyProperties() handles null
 values differently.

No longer a ConversionException is thrown for null values for certain data
types. A special handling for null values was added in the copy method.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@1546736 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/beanutils/BeanUtilsBean.java      | 17 ++++++-
 .../beanutils/bugs/Jira454TestCase.java       | 50 +++++++++++++++++++
 2 files changed, 65 insertions(+), 2 deletions(-)
 create mode 100644 src/test/java/org/apache/commons/beanutils/bugs/Jira454TestCase.java

diff --git a/src/main/java/org/apache/commons/beanutils/BeanUtilsBean.java b/src/main/java/org/apache/commons/beanutils/BeanUtilsBean.java
index 37df70989..0fc465140 100644
--- a/src/main/java/org/apache/commons/beanutils/BeanUtilsBean.java
+++ b/src/main/java/org/apache/commons/beanutils/BeanUtilsBean.java
@@ -410,7 +410,7 @@ public void copyProperty(Object bean, String name, Object value)
 
         // Convert the specified value to the required type and store it
         if (index >= 0) {                    // Destination must be indexed
-            value = convert(value, type.getComponentType());
+            value = convertForCopy(value, type.getComponentType());
             try {
                 getPropertyUtils().setIndexedProperty(target, propName,
                                                  index, value);
@@ -430,7 +430,7 @@ public void copyProperty(Object bean, String name, Object value)
                     (e, "Cannot set " + propName);
             }
         } else {                             // Destination must be simple
-            value = convert(value, type);
+            value = convertForCopy(value, type);
             try {
                 getPropertyUtils().setSimpleProperty(target, propName, value);
             } catch (NoSuchMethodException e) {
@@ -1075,6 +1075,19 @@ protected Object convert(Object value, Class<?> type) {
         }
     }
 
+    /**
+     * Performs a type conversion of a property value before it is copied to a target
+     * bean. This method delegates to {@link #convert(Object, Class)}, but <b>null</b>
+     * values are not converted. This causes <b>null</b> values to be copied verbatim.
+     *
+     * @param value the value to be converted and copied
+     * @param type the target type of the conversion
+     * @return the converted value
+     */
+    private Object convertForCopy(Object value, Class<?> type) {
+        return (value != null) ? convert(value, type) : value;
+    }
+
     /**
      * Returns a <code>Method<code> allowing access to
      * {@link Throwable#initCause(Throwable)} method of {@link Throwable},
diff --git a/src/test/java/org/apache/commons/beanutils/bugs/Jira454TestCase.java b/src/test/java/org/apache/commons/beanutils/bugs/Jira454TestCase.java
new file mode 100644
index 000000000..459d6e980
--- /dev/null
+++ b/src/test/java/org/apache/commons/beanutils/bugs/Jira454TestCase.java
@@ -0,0 +1,50 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.beanutils.bugs;
+
+import java.util.Date;
+
+import junit.framework.TestCase;
+
+import org.apache.commons.beanutils.BeanUtils;
+
+/**
+ * copyProperties() throws a ConversionException : No value specified for 'Date'
+ * when the field is a java.util.Date with a null value
+ *
+ * @version $Id: $
+ */
+public class Jira454TestCase extends TestCase {
+    public void testCopyProperties() throws Exception {
+        TestBean bean = new TestBean();
+        TestBean b2 = new TestBean();
+        BeanUtils.copyProperties(b2, bean);
+        assertNull("Got a creation date", b2.getCreatedAt());
+    }
+
+    public static class TestBean {
+        private Date createdAt;
+
+        public Date getCreatedAt() {
+            return createdAt;
+        }
+
+        public void setCreatedAt(Date createdAt) {
+            this.createdAt = createdAt;
+        }
+    }
+}
