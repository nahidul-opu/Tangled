From ce40dc79f59688d738c04e9079bf0e36ad258375 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rn=20Kottmann?= <joern@apache.org>
Date: Wed, 29 Jul 2015 08:26:01 +0000
Subject: [PATCH] OPENNLP-799

The NewlineSentenceDetector does not work because of a small comparison error.
The patch fixes the problem, and also adds a class with some tests.

Thanks to Gustavo Knuppe for providing a patch.


git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1693208 13f79535-47bb-0310-9956-ffa450edef68
---
 .../sentdetect/NewlineSentenceDetector.java   |  2 +-
 .../NewlineSentenceDetectorTest.java          | 55 +++++++++++++++++++
 2 files changed, 56 insertions(+), 1 deletion(-)
 create mode 100644 opennlp-tools/src/test/java/opennlp/tools/sentdetect/NewlineSentenceDetectorTest.java

diff --git a/opennlp-tools/src/main/java/opennlp/tools/sentdetect/NewlineSentenceDetector.java b/opennlp-tools/src/main/java/opennlp/tools/sentdetect/NewlineSentenceDetector.java
index eeba3475c..2f7100b3f 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/sentdetect/NewlineSentenceDetector.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/sentdetect/NewlineSentenceDetector.java
@@ -42,7 +42,7 @@ public Span[] sentPosDetect(String s) {
       char c = s.charAt(i);
 
       if (c == '\n' || c == '\r') {
-        if (start - i > 0) {
+        if (i - start > 0) {
           Span span = new Span(start, i).trim(s);
           if (span.length() > 0) {
             sentences.add(span);
diff --git a/opennlp-tools/src/test/java/opennlp/tools/sentdetect/NewlineSentenceDetectorTest.java b/opennlp-tools/src/test/java/opennlp/tools/sentdetect/NewlineSentenceDetectorTest.java
new file mode 100644
index 000000000..3c42a609f
--- /dev/null
+++ b/opennlp-tools/src/test/java/opennlp/tools/sentdetect/NewlineSentenceDetectorTest.java
@@ -0,0 +1,55 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package opennlp.tools.sentdetect;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Tests for the {@link NewlineSentenceDetector} class.
+ */
+public class NewlineSentenceDetectorTest {
+
+
+  private static void testSentenceValues(String sentences){
+    NewlineSentenceDetector sd = new NewlineSentenceDetector();
+
+    String results[] = sd.sentDetect(sentences);
+
+    assertEquals(3, results.length);
+    assertEquals("one.", results[0]);
+    assertEquals("two.", results[1]);
+    assertEquals("three.", results[2]);
+  }
+
+  @Test
+  public void testNewlineCr() {
+    testSentenceValues("one.\rtwo. \r\r three.\r");
+  }
+
+  @Test
+  public void testNewlineLf() {
+    testSentenceValues("one.\ntwo. \n\n three.\n");
+  }
+
+  @Test
+  public void testNewlineCrLf() {
+    testSentenceValues("one.\r\ntwo. \r\n\r\n three.\r\n");
+  }
+}
