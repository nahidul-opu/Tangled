From 7e4989ff111562d9bc562200d0c5bc5b41af18b9 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Sat, 28 Oct 2006 15:11:02 +0000
Subject: [PATCH] Updated CompositeConfiguration.getList() to fully support
 interpolation; fix for CONFIGURATION-233; thanks to Rainer Jung for the patch

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/configuration/trunk@468694 13f79535-47bb-0310-9956-ffa450edef68
---
 .../configuration/CompositeConfiguration.java  |  7 +++++++
 .../TestCompositeConfiguration.java            | 18 ++++++++++++++++++
 xdocs/changes.xml                              |  5 +++++
 3 files changed, 30 insertions(+)

diff --git a/src/java/org/apache/commons/configuration/CompositeConfiguration.java b/src/java/org/apache/commons/configuration/CompositeConfiguration.java
index 6b8220fb9c..0df59e88a0 100644
--- a/src/java/org/apache/commons/configuration/CompositeConfiguration.java
+++ b/src/java/org/apache/commons/configuration/CompositeConfiguration.java
@@ -22,6 +22,7 @@
 import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
+import java.util.ListIterator;
 
 /**
  * This Configuration class allows you to add multiple different types of Configuration
@@ -320,6 +321,12 @@ public List getList(String key, List defaultValue)
         {
             return defaultValue;
         }
+        
+        ListIterator lit = list.listIterator();
+        while (lit.hasNext())
+        {
+        	lit.set(interpolate(lit.next()));
+        }
 
         return list;
     }
diff --git a/src/test/org/apache/commons/configuration/TestCompositeConfiguration.java b/src/test/org/apache/commons/configuration/TestCompositeConfiguration.java
index 13cf78b506..a88a8074d3 100644
--- a/src/test/org/apache/commons/configuration/TestCompositeConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestCompositeConfiguration.java
@@ -440,6 +440,24 @@ public void testStringArrayInterpolation()
         assertEquals("2nd element", "foo.bar2", array[1]);
         assertEquals("3rd element", "foo.bar3", array[2]);
     }
+    
+    /**
+     * Tests whether global interpolation works with lists.
+     */
+    public void testListInterpolation()
+    {
+        PropertiesConfiguration c1 = new PropertiesConfiguration();
+        c1.addProperty("c1.value", "test1");
+        c1.addProperty("c1.value", "${c2.value}");
+        cc.addConfiguration(c1);
+        PropertiesConfiguration c2 = new PropertiesConfiguration();
+        c2.addProperty("c2.value", "test2");
+        cc.addConfiguration(c2);
+        List lst = cc.getList("c1.value");
+        assertEquals("Wrong list size", 2, lst.size());
+        assertEquals("Wrong first element", "test1", lst.get(0));
+        assertEquals("Wrong second element", "test2", lst.get(1));
+    }
 
     public void testInstanciateWithCollection()
     {
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 761b3e3b5b..66315530a1 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,11 @@
 
   <body>
     <release version="1.4-dev" date="in SVN">
+      <action dev="oheger" type="update" issue="CONFIGURATION-233" due-to="Rainer Jung">
+        The getList() method of CompositeConfiguration does now fully support
+        variable interpolation. So it is possible to refer to a variable in
+        one (sub) configuration that is defined in another configuration.
+      </action>
       <action dev="oheger" type="update" issue="CONFIGURATION-230">
         XPathExpressionEngine used to create wrong keys for attribute nodes.
         This caused some operations on XMLConfiguration to fail when such an
