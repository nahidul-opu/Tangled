From 45da20f49abafa125ff4f616e8312b89fbd1f139 Mon Sep 17 00:00:00 2001
From: zhangminglei <zml13856086071@163.com>
Date: Mon, 11 Feb 2019 23:26:03 +0800
Subject: [PATCH] [BCEL-297] Fix NPE in BCELComparator concrete
 implementations. (#20)

---
 src/main/java/org/apache/bcel/classfile/Constant.java |  3 ++-
 src/main/java/org/apache/bcel/classfile/Field.java    |  5 +++--
 .../java/org/apache/bcel/classfile/JavaClass.java     |  5 +++--
 src/main/java/org/apache/bcel/classfile/Method.java   |  5 +++--
 src/main/java/org/apache/bcel/generic/ClassGen.java   |  3 ++-
 src/main/java/org/apache/bcel/generic/FieldGen.java   |  5 +++--
 src/main/java/org/apache/bcel/generic/MethodGen.java  | 11 ++++++-----
 7 files changed, 22 insertions(+), 15 deletions(-)

diff --git a/src/main/java/org/apache/bcel/classfile/Constant.java b/src/main/java/org/apache/bcel/classfile/Constant.java
index dac281906a..a352fe06f8 100644
--- a/src/main/java/org/apache/bcel/classfile/Constant.java
+++ b/src/main/java/org/apache/bcel/classfile/Constant.java
@@ -20,6 +20,7 @@
 import java.io.DataInput;
 import java.io.DataOutputStream;
 import java.io.IOException;
+import java.util.Objects;
 
 import org.apache.bcel.Const;
 import org.apache.bcel.util.BCELComparator;
@@ -39,7 +40,7 @@ public abstract class Constant implements Cloneable, Node {
         public boolean equals( final Object o1, final Object o2 ) {
             final Constant THIS = (Constant) o1;
             final Constant THAT = (Constant) o2;
-            return THIS.toString().equals(THAT.toString());
+            return Objects.equals(THIS.toString(), THAT.toString());
         }
 
 
diff --git a/src/main/java/org/apache/bcel/classfile/Field.java b/src/main/java/org/apache/bcel/classfile/Field.java
index 600b3147fc..ebdea958fc 100644
--- a/src/main/java/org/apache/bcel/classfile/Field.java
+++ b/src/main/java/org/apache/bcel/classfile/Field.java
@@ -19,6 +19,7 @@
 
 import java.io.DataInput;
 import java.io.IOException;
+import java.util.Objects;
 
 import org.apache.bcel.Const;
 import org.apache.bcel.generic.Type;
@@ -38,8 +39,8 @@ public final class Field extends FieldOrMethod {
         public boolean equals( final Object o1, final Object o2 ) {
             final Field THIS = (Field) o1;
             final Field THAT = (Field) o2;
-            return THIS.getName().equals(THAT.getName())
-                    && THIS.getSignature().equals(THAT.getSignature());
+            return Objects.equals(THIS.getName(), THAT.getName())
+                    && Objects.equals(THIS.getSignature(), THAT.getSignature());
         }
 
 
diff --git a/src/main/java/org/apache/bcel/classfile/JavaClass.java b/src/main/java/org/apache/bcel/classfile/JavaClass.java
index 8c5712b724..be18dbe7ab 100644
--- a/src/main/java/org/apache/bcel/classfile/JavaClass.java
+++ b/src/main/java/org/apache/bcel/classfile/JavaClass.java
@@ -24,9 +24,10 @@
 import java.io.IOException;
 import java.io.OutputStream;
 import java.util.ArrayList;
+import java.util.Objects;
+import java.util.StringTokenizer;
 import java.util.List;
 import java.util.Set;
-import java.util.StringTokenizer;
 import java.util.TreeSet;
 
 import org.apache.bcel.Const;
@@ -79,7 +80,7 @@ public class JavaClass extends AccessFlags implements Cloneable, Node, Comparabl
         public boolean equals( final Object o1, final Object o2 ) {
             final JavaClass THIS = (JavaClass) o1;
             final JavaClass THAT = (JavaClass) o2;
-            return THIS.getClassName().equals(THAT.getClassName());
+            return Objects.equals(THIS.getClassName(), THAT.getClassName());
         }
 
 
diff --git a/src/main/java/org/apache/bcel/classfile/Method.java b/src/main/java/org/apache/bcel/classfile/Method.java
index 322d503f7a..e19522c0a3 100644
--- a/src/main/java/org/apache/bcel/classfile/Method.java
+++ b/src/main/java/org/apache/bcel/classfile/Method.java
@@ -19,6 +19,7 @@
 
 import java.io.DataInput;
 import java.io.IOException;
+import java.util.Objects;
 
 import org.apache.bcel.Const;
 import org.apache.bcel.generic.Type;
@@ -39,8 +40,8 @@ public final class Method extends FieldOrMethod {
         public boolean equals( final Object o1, final Object o2 ) {
             final Method THIS = (Method) o1;
             final Method THAT = (Method) o2;
-            return THIS.getName().equals(THAT.getName())
-                    && THIS.getSignature().equals(THAT.getSignature());
+            return Objects.equals(THIS.getName(), THAT.getName())
+                    && Objects.equals(THIS.getSignature(), THAT.getSignature());
         }
 
 
diff --git a/src/main/java/org/apache/bcel/generic/ClassGen.java b/src/main/java/org/apache/bcel/generic/ClassGen.java
index 5362afd162..5fad2d3d8f 100644
--- a/src/main/java/org/apache/bcel/generic/ClassGen.java
+++ b/src/main/java/org/apache/bcel/generic/ClassGen.java
@@ -19,6 +19,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Objects;
 
 import org.apache.bcel.Const;
 import org.apache.bcel.classfile.AccessFlags;
@@ -66,7 +67,7 @@ public class ClassGen extends AccessFlags implements Cloneable {
         public boolean equals( final Object o1, final Object o2 ) {
             final ClassGen THIS = (ClassGen) o1;
             final ClassGen THAT = (ClassGen) o2;
-            return THIS.getClassName().equals(THAT.getClassName());
+            return Objects.equals(THIS.getClassName(), THAT.getClassName());
         }
 
 
diff --git a/src/main/java/org/apache/bcel/generic/FieldGen.java b/src/main/java/org/apache/bcel/generic/FieldGen.java
index 878ca2ad6c..4ddf44a471 100644
--- a/src/main/java/org/apache/bcel/generic/FieldGen.java
+++ b/src/main/java/org/apache/bcel/generic/FieldGen.java
@@ -19,6 +19,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Objects;
 
 import org.apache.bcel.Const;
 import org.apache.bcel.classfile.AnnotationEntry;
@@ -49,8 +50,8 @@ public class FieldGen extends FieldGenOrMethodGen {
         public boolean equals( final Object o1, final Object o2 ) {
             final FieldGen THIS = (FieldGen) o1;
             final FieldGen THAT = (FieldGen) o2;
-            return THIS.getName().equals(THAT.getName())
-                    && THIS.getSignature().equals(THAT.getSignature());
+            return Objects.equals(THIS.getName(), THAT.getName())
+                    && Objects.equals(THIS.getSignature(), THAT.getSignature());
         }
 
 
diff --git a/src/main/java/org/apache/bcel/generic/MethodGen.java b/src/main/java/org/apache/bcel/generic/MethodGen.java
index 4100dc8eb1..e497d347df 100644
--- a/src/main/java/org/apache/bcel/generic/MethodGen.java
+++ b/src/main/java/org/apache/bcel/generic/MethodGen.java
@@ -18,11 +18,12 @@
 package org.apache.bcel.generic;
 
 import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Comparator;
-import java.util.Hashtable;
+import java.util.Objects;
 import java.util.List;
 import java.util.Stack;
+import java.util.Hashtable;
+import java.util.Arrays;
+import java.util.Comparator;
 
 import org.apache.bcel.Const;
 import org.apache.bcel.classfile.AnnotationEntry;
@@ -83,8 +84,8 @@ public class MethodGen extends FieldGenOrMethodGen {
         public boolean equals( final Object o1, final Object o2 ) {
             final MethodGen THIS = (MethodGen) o1;
             final MethodGen THAT = (MethodGen) o2;
-            return THIS.getName().equals(THAT.getName())
-                    && THIS.getSignature().equals(THAT.getSignature());
+            return Objects.equals(THIS.getName(), THAT.getName())
+                    && Objects.equals(THIS.getSignature(), THAT.getSignature());
         }
 
 
