From 9dbf8388c5bfa0c7beb15e835b3a5e6fc74ecbf8 Mon Sep 17 00:00:00 2001
From: Thomas Neidhart <tn@apache.org>
Date: Thu, 1 Jan 2015 21:10:46 +0000
Subject: [PATCH] [COLLECTIONS-525] Fix PatriciaTrie.prefixMap(). Thanks to
 Zigler Zhang.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1648941 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  4 ++++
 .../trie/AbstractPatriciaTrie.java            |  8 +++----
 .../collections4/trie/PatriciaTrieTest.java   | 21 ++++++++++++++++++-
 3 files changed, 28 insertions(+), 5 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 608d2f0550..857239812f 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,10 @@
   <body>
 
   <release version="4.1" date="TBD" description="">
+    <action issue="COLLECTIONS-525" dev="tn" type="fix" due-to="Zigler Zhang">
+      The map returned by "PatriciaTrie#prefixMap()" did not contain all keys
+      that are prefixed by the given search key in some rare cases.
+    </action>
     <action issue="COLLECTIONS-511" dev="tn" type="add" due-to="Nathan Blomquist, Brent Worden">
       Added new methods "CollectionUtils#partition(...)" to partition an input collection
       into separate output collections based on evaluation of one or more predicates.
diff --git a/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
index b79b7d0840..613eade59a 100644
--- a/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
+++ b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
@@ -1088,7 +1088,7 @@ TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int length
         TrieEntry<K, V> current = root.left;
         TrieEntry<K, V> path = root;
         while(true) {
-            if (current.bitIndex <= path.bitIndex || lengthInBits < current.bitIndex) {
+            if (current.bitIndex <= path.bitIndex || lengthInBits <= current.bitIndex) {
                 break;
             }
 
@@ -1120,8 +1120,8 @@ TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int length
 
         // Found key's length-th bit differs from our key
         // which means it cannot be the prefix...
-        if (isBitSet(prefix, endIndexInBits, endIndexInBits)
-                != isBitSet(entry.key, lengthInBits, lengthInBits(entry.key))) {
+        if (isBitSet(prefix, endIndexInBits - 1, endIndexInBits)
+                != isBitSet(entry.key, lengthInBits - 1, lengthInBits(entry.key))) {
             return null;
         }
 
@@ -2264,7 +2264,7 @@ public Iterator<Map.Entry<K,V>> iterator() {
             if (prefixStart == null) {
                 final Set<Map.Entry<K,V>> empty = Collections.emptySet();
                 return empty.iterator();
-            } else if (delegate.lengthInBits >= prefixStart.bitIndex) {
+            } else if (delegate.lengthInBits > prefixStart.bitIndex) {
                 return new SingletonIterator(prefixStart);
             } else {
                 return new EntryIterator(prefixStart, delegate.prefix, delegate.offsetInBits, delegate.lengthInBits);
diff --git a/src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java b/src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java
index 1cf483a46f..def26b9bfc 100755
--- a/src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java
+++ b/src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java
@@ -26,7 +26,6 @@
 
 import org.apache.commons.collections4.BulkTest;
 import org.apache.commons.collections4.map.AbstractSortedMapTest;
-
 import org.junit.Assert;
 
 /**
@@ -326,6 +325,26 @@ public void testPrefixMapRemoval() {
         Assert.assertFalse(iter.hasNext());
     }
 
+    public void testPrefixMapSizes() {
+        // COLLECTIONS-525
+        PatriciaTrie<String> aTree = new PatriciaTrie<String>();
+        aTree.put("点评", "测试");
+        aTree.put("书评", "测试");
+        assertTrue(aTree.prefixMap("点").containsKey("点评"));
+        assertEquals("测试", aTree.prefixMap("点").get("点评"));
+        assertFalse(aTree.prefixMap("点").isEmpty());
+        assertEquals(1, aTree.prefixMap("点").size());
+        assertEquals(1, aTree.prefixMap("点").keySet().size());
+        assertEquals(1, aTree.prefixMap("点").entrySet().size());
+        assertEquals(1, aTree.prefixMap("点评").values().size());
+
+        aTree.clear();
+        aTree.put("点评", "联盟");
+        aTree.put("点版", "定向");
+        assertEquals(2, aTree.prefixMap("点").keySet().size());
+        assertEquals(2, aTree.prefixMap("点").values().size());
+    }
+
     //-----------------------------------------------------------------------
 
     @Override
