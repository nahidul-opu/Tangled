From 80bd3fdb42a5d816ded9d9111c7dac3ce57c3101 Mon Sep 17 00:00:00 2001
From: Duncan Jones <djones@apache.org>
Date: Thu, 13 Mar 2014 21:40:26 +0000
Subject: [PATCH] LANG-987: DateUtils.getFragmentInDays(Date, Calendar.MONTH)
 returns wrong days, reported by Jay Xu.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1577332 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  1 +
 .../apache/commons/lang3/time/DateUtils.java  |  6 ++--
 .../lang3/time/DateUtilsFragmentTest.java     | 28 +++++++++++++++++++
 3 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index ecbb657f30b..59bef45bf80 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,7 @@
   <body>
 
   <release version="3.4" date="TBA" description="TBA">
+    <action issue="LANG-987" type="fix" dev="djones">DateUtils.getFragmentInDays(Date, Calendar.MONTH) returns wrong days</action>
     <action issue="LANG-983" type="fix" dev="sebb">DurationFormatUtils does not describe format string fully</action>
     <action issue="LANG-981" type="fix" dev="sebb">DurationFormatUtils#lexx does not detect unmatched quote char</action>
     <action issue="LANG-984" type="fix" dev="sebb">DurationFormatUtils does not handle large durations correctly</action>
diff --git a/src/main/java/org/apache/commons/lang3/time/DateUtils.java b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
index e57b5376528..60bb0d0d6ac 100644
--- a/src/main/java/org/apache/commons/lang3/time/DateUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
@@ -1690,13 +1690,15 @@ private static long getFragment(final Calendar calendar, final int fragment, fin
         final long millisPerUnit = getMillisPerUnit(unit);
         long result = 0;
         
+        int offset = (unit == Calendar.DAY_OF_YEAR) ? 0 : 1;
+        
         // Fragments bigger than a day require a breakdown to days
         switch (fragment) {
             case Calendar.YEAR:
-                result += ((calendar.get(Calendar.DAY_OF_YEAR) -1) * MILLIS_PER_DAY) / millisPerUnit;
+                result += ((calendar.get(Calendar.DAY_OF_YEAR) - offset) * MILLIS_PER_DAY) / millisPerUnit;
                 break;
             case Calendar.MONTH:
-                result += ((calendar.get(Calendar.DAY_OF_MONTH) -1) * MILLIS_PER_DAY) / millisPerUnit;
+                result += ((calendar.get(Calendar.DAY_OF_MONTH) - offset) * MILLIS_PER_DAY) / millisPerUnit;
                 break;
             default:
                 break;
diff --git a/src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java b/src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java
index dfd2e274177..de9d7c6f266 100644
--- a/src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java
+++ b/src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java
@@ -561,4 +561,32 @@ public void testHoursOfYearWithCalendar() {
                         / DateUtils.MILLIS_PER_HOUR,
                 testResult);
     }
+    
+    @Test
+    public void testDaysOfMonthWithCalendar() throws Exception {
+        final long testResult = DateUtils.getFragmentInDays(aCalendar, Calendar.MONTH);
+        assertEquals(days, testResult);
+    }
+    
+    @Test
+    public void testDaysOfMonthWithDate() throws Exception {
+        final long testResult = DateUtils.getFragmentInDays(aDate, Calendar.MONTH);
+        final Calendar cal = Calendar.getInstance();
+        cal.setTime(aDate);
+        assertEquals(cal.get(Calendar.DAY_OF_MONTH), testResult);
+    }    
+    
+    @Test
+    public void testDaysOfYearWithCalendar() throws Exception {
+        final long testResult = DateUtils.getFragmentInDays(aCalendar, Calendar.YEAR);
+        assertEquals(aCalendar.get(Calendar.DAY_OF_YEAR), testResult);
+    }
+    
+    @Test
+    public void testDaysOfYearWithDate() throws Exception {
+        final long testResult = DateUtils.getFragmentInDays(aDate, Calendar.YEAR);
+        final Calendar cal = Calendar.getInstance();
+        cal.setTime(aDate);
+        assertEquals(cal.get(Calendar.DAY_OF_YEAR), testResult);
+    }
 }
