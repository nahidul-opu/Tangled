From b4eb29107afb3cad68d3acadd6dccaa63ceef9a9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rn=20Kottmann?= <joern@apache.org>
Date: Fri, 21 Apr 2017 15:45:53 +0200
Subject: [PATCH] OPENNLP-1042: Correctly tokenize reference parse text

Closes #180
---
 .../main/java/opennlp/tools/parser/Parse.java    | 16 ++++++++++++++++
 .../opennlp/tools/parser/ParserEvaluator.java    | 11 +++++------
 2 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java b/opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java
index 5ee4f0ace..d4265cf2e 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java
@@ -972,6 +972,22 @@ public Parse[] getTagNodes() {
     return tags.toArray(new Parse[tags.size()]);
   }
 
+  public Parse[] getTokenNodes() {
+    List<Parse> tokens = new LinkedList<>();
+    List<Parse> nodes = new LinkedList<>();
+    nodes.addAll(this.parts);
+    while (nodes.size() != 0) {
+      Parse p = nodes.remove(0);
+      if (p.getType().equals(AbstractBottomUpParser.TOK_NODE)) {
+        tokens.add(p);
+      }
+      else {
+        nodes.addAll(0, p.parts);
+      }
+    }
+    return tokens.toArray(new Parse[tokens.size()]);
+  }
+
   /**
    * Returns the deepest shared parent of this node and the specified node.
    * If the nodes are identical then their parent is returned.
diff --git a/opennlp-tools/src/main/java/opennlp/tools/parser/ParserEvaluator.java b/opennlp-tools/src/main/java/opennlp/tools/parser/ParserEvaluator.java
index 64b2b4269..013a6c170 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/parser/ParserEvaluator.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/parser/ParserEvaluator.java
@@ -89,15 +89,14 @@ private static Span[] getConstituencySpans(final Parse parse) {
     return consts.toArray(new Span[consts.size()]);
   }
 
-  /* (non-Javadoc)
-   * @see opennlp.tools.util.eval.Evaluator#processSample(java.lang.Object)
-   */
   @Override
   protected final Parse processSample(final Parse reference) {
+    List<String> tokens = new ArrayList<>();
+    for (Parse token : reference.getTokenNodes()) {
+      tokens.add(token.getSpan().getCoveredText(reference.getText()).toString());
+    }
 
-    String sentenceText = reference.getText();
-
-    Parse[] predictions = ParserTool.parseLine(sentenceText, parser, 1);
+    Parse[] predictions = ParserTool.parseLine(String.join(" ", tokens), parser, 1);
 
     Parse prediction = null;
     if (predictions.length > 0) {
