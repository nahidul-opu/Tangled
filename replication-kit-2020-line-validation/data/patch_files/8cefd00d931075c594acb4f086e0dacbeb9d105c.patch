From 8cefd00d931075c594acb4f086e0dacbeb9d105c Mon Sep 17 00:00:00 2001
From: James Kosin <jkosin@apache.org>
Date: Tue, 20 Mar 2012 03:30:22 +0000
Subject: [PATCH] OPENNLP-471: addressed tests and the proper names being
 tested. Thanks again to William for this.

git-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1302767 13f79535-47bb-0310-9956-ffa450edef68
---
 .../DictionaryNameFinderEvaluatorTest.java    |  2 +-
 .../namefind/NameSampleDataStreamTest.java    | 35 ++++++++++---------
 2 files changed, 19 insertions(+), 18 deletions(-)

diff --git a/opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java b/opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java
index 2bb6bcc91..b8d35250d 100644
--- a/opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java
+++ b/opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java
@@ -53,7 +53,7 @@ public void testEvaluator() throws IOException, URISyntaxException {
     sample.close();
     FMeasure fmeasure = evaluator.getFMeasure();
 
-    // TODO: change to F-Measure when fix OPENNLP-471
+    assertTrue(fmeasure.getFMeasure() == 1);
     assertTrue(fmeasure.getRecallScore() == 1);
   }
 
diff --git a/opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleDataStreamTest.java b/opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleDataStreamTest.java
index 723ecdbd7..0bcdde327 100644
--- a/opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleDataStreamTest.java
+++ b/opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleDataStreamTest.java
@@ -85,11 +85,11 @@ public void testWithoutNameTypes() throws Exception {
     NameSample ns = ds.read();
 
     String[] expectedNames = { "Alan McKennedy", "Julie", "Marie Clara",
-        "Stefanie Schmidt", "Mike", "Stefanie Schmidt", "George", "Luise",
-        "Alisa Fernandes", "Alisa", "Mike Sander", "Stefan Miller",
-        "Stefan Miller", "Stefan Miller", "Elenor Meier", "Gina Schneider",
-        "Bruno Schulz", "Michel Seile", "George Miller", "Miller",
-        "Peter Schubert", "Natalie" };
+        "Stefanie Schmidt", "Mike", "Stefanie Schmidt", "George", "Luise", 
+        "George Bauer", "Alisa Fernandes", "Alisa", "Mike Sander", 
+        "Stefan Miller", "Stefan Miller", "Stefan Miller", "Elenor Meier", 
+        "Gina Schneider", "Bruno Schulz", "Michel Seile", "George Miller", 
+        "Miller", "Peter Schubert", "Natalie" };
 
     List<String> names = new ArrayList<String>();
     List<Span> spans = new ArrayList<Span>();
@@ -111,20 +111,21 @@ public void testWithoutNameTypes() throws Exception {
     assertEquals(createDefaultSpan(4,6), spans.get(5));
     assertEquals(createDefaultSpan(2,3), spans.get(6));
     assertEquals(createDefaultSpan(16,17), spans.get(7));
-    assertEquals(createDefaultSpan(0,2), spans.get(8));
-    assertEquals(createDefaultSpan(0,1), spans.get(9));
-    assertEquals(createDefaultSpan(3,5), spans.get(10));
+    assertEquals(createDefaultSpan(18,20), spans.get(8));
+    assertEquals(createDefaultSpan(0,2), spans.get(9));
+    assertEquals(createDefaultSpan(0,1), spans.get(10));
     assertEquals(createDefaultSpan(3,5), spans.get(11));
-    assertEquals(createDefaultSpan(10,12), spans.get(12));
-    assertEquals(createDefaultSpan(1,3), spans.get(13));
-    assertEquals(createDefaultSpan(6,8), spans.get(14));
+    assertEquals(createDefaultSpan(3,5), spans.get(12));
+    assertEquals(createDefaultSpan(10,12), spans.get(13));
+    assertEquals(createDefaultSpan(1,3), spans.get(14));
     assertEquals(createDefaultSpan(6,8), spans.get(15));
-    assertEquals(createDefaultSpan(8,10), spans.get(16));
-    assertEquals(createDefaultSpan(12,14), spans.get(17));
-    assertEquals(createDefaultSpan(1,3), spans.get(18));
-    assertEquals(createDefaultSpan(0,1), spans.get(19));
-    assertEquals(createDefaultSpan(2,4), spans.get(20));
-    assertEquals(createDefaultSpan(5,6), spans.get(21));
+    assertEquals(createDefaultSpan(6,8), spans.get(16));
+    assertEquals(createDefaultSpan(8,10), spans.get(17));
+    assertEquals(createDefaultSpan(12,14), spans.get(18));
+    assertEquals(createDefaultSpan(1,3), spans.get(19));
+    assertEquals(createDefaultSpan(0,1), spans.get(20));
+    assertEquals(createDefaultSpan(2,4), spans.get(21));
+    assertEquals(createDefaultSpan(5,6), spans.get(22));
   }
   
   private Span createDefaultSpan(int s, int e) {
