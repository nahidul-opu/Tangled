From ade32ac54654a63b461868ea3e020f5228b89a48 Mon Sep 17 00:00:00 2001
From: Mario Ivankovits <imario@apache.org>
Date: Tue, 3 Oct 2006 19:10:37 +0000
Subject: [PATCH] VFS-78: fixed (hopefully) detection of deleted children if
 they already existed before the DefaultFileMonitor has been started

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/vfs/trunk@452596 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/vfs/impl/DefaultFileMonitor.java  | 33 ++++++++++++++++---
 1 file changed, 29 insertions(+), 4 deletions(-)

diff --git a/src/java/org/apache/commons/vfs/impl/DefaultFileMonitor.java b/src/java/org/apache/commons/vfs/impl/DefaultFileMonitor.java
index c63f40ceab..40a90e7917 100644
--- a/src/java/org/apache/commons/vfs/impl/DefaultFileMonitor.java
+++ b/src/java/org/apache/commons/vfs/impl/DefaultFileMonitor.java
@@ -164,13 +164,38 @@ FileListener getFileListener()
      * Adds a file to be monitored.
      */
     public void addFile(final FileObject file)
+    {
+        _addFile(file);
+        try
+        {
+            // add all direct children too
+            if (file.getType().hasChildren())
+            {
+                // Traverse the children
+                final FileObject[] children = file.getChildren();
+                for (int i = 0; i < children.length; i++)
+                {
+                    _addFile(children[i]);
+                }
+            }
+        }
+        catch (FileSystemException fse)
+        {
+            log.error(fse.getLocalizedMessage(), fse);
+        }
+    }
+
+    /**
+     * Adds a file to be monitored.
+     */
+    private void _addFile(final FileObject file)
     {
         synchronized (this.monitorMap)
         {
             if (this.monitorMap.get(file.getName()) == null)
             {
                 this.monitorMap.put(file.getName(), new FileMonitorAgent(this,
-                        file));
+                    file));
 
                 try
                 {
@@ -276,7 +301,7 @@ public int getChecksPerRun()
     /**
      * set the number of files to check per run.
      * a additional delay will be added if there are more files to check
-     *  
+     *
      * @param checksPerRun a value less than 1 will disable this feature
      */
     public void setChecksPerRun(int checksPerRun)
@@ -537,7 +562,7 @@ private void checkForNewChildren()
                                 Object()); // null ?
                             // If the child's not there
                             if
-                            (!this.children.containsKey(newChildren[i].getName()))
+                                (!this.children.containsKey(newChildren[i].getName()))
                             {
                                 missingChildren.push(newChildren[i]);
                             }
@@ -612,7 +637,7 @@ else if (this.exists && this.file.exists())
 
                     // Check the timestamp to see if it has been modified
                     if (this.timestamp !=
-                            this.file.getContent().getLastModifiedTime())
+                        this.file.getContent().getLastModifiedTime())
                     {
                         this.timestamp =
                             this.file.getContent().getLastModifiedTime();
