From eb9318d8fda86d26eb3c6cbcd691f6820abf972b Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Mon, 21 Oct 2013 16:19:46 +0000
Subject: [PATCH] [COMPRESS-240] ZipEncodingHelper.isUTF8(String) does not
 check all UTF-8 aliases.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1534265 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  4 +++
 .../archivers/zip/ZipEncodingHelper.java      | 30 +++++++++++--------
 2 files changed, 22 insertions(+), 12 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 9a15cc80805..d24f6845b16 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -44,6 +44,10 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
     <release version="1.6" date="not released, yet"
              description="Release 1.6">
+      <action type="fix" date="2013-10-21" issue="COMPRESS-240"
+              due-to="Gary Gregory">
+        ZipEncodingHelper.isUTF8(String) does not check all UTF-8 aliases.
+      </action>
       <action type="fix" date="2013-04-25" issue="COMPRESS-223"
               due-to="Jeremy Gustie">
         TarBuffer.tryToConsumeSecondEOFRecord could throw a
diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java
index caae774b71e..4967c62a78c 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java
@@ -23,9 +23,11 @@
 import java.nio.charset.UnsupportedCharsetException;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.Locale;
 import java.util.Map;
 
 import org.apache.commons.compress.utils.CharsetNames;
+import org.apache.commons.compress.utils.Charsets;
 
 /**
  * Static helper functions for robustly encoding filenames in zip files. 
@@ -195,11 +197,6 @@ static void appendSurrogate(ByteBuffer bb, char c) {
      */
     static final String UTF8 = "UTF8";
 
-    /**
-     * variant name of the encoding UTF-8 used for comparisions.
-     */
-    private static final String UTF_DASH_8 = CharsetNames.UTF_8;
-
     /**
      * name of the encoding UTF-8
      */
@@ -240,15 +237,24 @@ public static ZipEncoding getZipEncoding(String name) {
     }
 
     /**
-     * Whether a given encoding - or the platform's default encoding
-     * if the parameter is null - is UTF-8.
+     * Returns whether a given encoding is UTF-8. If the given name is null, then check the platform's default encoding.
+     * 
+     * @param charsetName
+     *            If the given name is null, then check the platform's default encoding.
      */
-    static boolean isUTF8(String encoding) {
-        if (encoding == null) {
+    static boolean isUTF8(String charsetName) {
+        if (charsetName == null) {
             // check platform's default encoding
-            encoding = System.getProperty("file.encoding");
+            charsetName = System.getProperty("file.encoding");
+        }
+        if (Charsets.UTF_8.name().equalsIgnoreCase(charsetName)) {
+            return true;
+        }
+        for (String alias : Charsets.UTF_8.aliases()) {
+            if (alias.equalsIgnoreCase(charsetName)) {
+                return true;
+            }
         }
-        return UTF8.equalsIgnoreCase(encoding)
-            || UTF_DASH_8.equalsIgnoreCase(encoding);
+        return false;
     }
 }
