From 34f4d7a7d73cbbaaf3f0a9e79036a1a8179f27d8 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Mon, 30 Apr 2007 23:07:07 +0000
Subject: [PATCH] FIX: Post-Resolve task shouldn't set the 'resolveid'
 (IVY-489)

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/core/trunk@533873 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 .../apache/ivy/ant/IvyPostResolveTask.java    |  8 +--
 .../apache/ivy/ant/IvyArtifactReportTest.java | 65 +++++++++++++++++++
 3 files changed, 67 insertions(+), 7 deletions(-)
 create mode 100644 test/java/org/apache/ivy/ant/IvyArtifactReportTest.java

diff --git a/CHANGES.txt b/CHANGES.txt
index e4fda5254..2e88ccdb9 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -50,6 +50,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 
 - FIX: ivy:install ant task does not fail on error (IVY-475) (thanks to Jeffrey Blatttman)
 - FIX: Credentials are shown in build log even if debug is not enabled (IVY-486) (thanks to Gilles Scokart)
+- FIX: Post-Resolve task shouldn't set the 'resolveid' (IVY-489)
 
    2.0.0-alpha1-incubating
 =====================================
diff --git a/src/java/org/apache/ivy/ant/IvyPostResolveTask.java b/src/java/org/apache/ivy/ant/IvyPostResolveTask.java
index 96e89a718..eaab8420a 100644
--- a/src/java/org/apache/ivy/ant/IvyPostResolveTask.java
+++ b/src/java/org/apache/ivy/ant/IvyPostResolveTask.java
@@ -95,9 +95,6 @@ protected void prepareAndCheck() {
             }
             if (_module == null) {
                 throw new BuildException("no module name provided for ivy cache task in inline mode: It can either be set explicitely via the attribute 'module' or via 'ivy.module' property");
-            }
-            if (_resolveId == null) {
-            	_resolveId = ResolveOptions.getDefaultResolveId(getResolvedModuleId());
             }
         	String[] toResolve = getConfsToResolve(getOrganisation(), getModule()+"-caller", _conf, true);
         	if (toResolve.length > 0) {        		
@@ -109,7 +106,7 @@ protected void prepareAndCheck() {
         		resolve.setInline(true);
         		resolve.setConf(_conf);
         		resolve.setCache(_cache);
-//        		resolve.setResolveId(_resolveId);  TODO
+        		resolve.setResolveId(_resolveId);
         		resolve.execute();
         	} else {
         		Message.verbose("inline resolve already done for "+getOrganisation()+" "+getModule()+" "+getRevision()+" ("+_conf+")");
@@ -147,9 +144,6 @@ protected void prepareAndCheck() {
         if (_conf == null) {
             throw new BuildException("no conf provided for ivy cache task: It can either be set explicitely via the attribute 'conf' or via 'ivy.resolved.configurations' property or a prior call to <resolve/>");
         }
-        if (_resolveId == null) {
-        	_resolveId = ResolveOptions.getDefaultResolveId(getResolvedModuleId());
-        }
         
         _artifactFilter = FilterHelper.getArtifactTypeFilter(_type);
     }
diff --git a/test/java/org/apache/ivy/ant/IvyArtifactReportTest.java b/test/java/org/apache/ivy/ant/IvyArtifactReportTest.java
new file mode 100644
index 000000000..ed4049cf3
--- /dev/null
+++ b/test/java/org/apache/ivy/ant/IvyArtifactReportTest.java
@@ -0,0 +1,65 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ *
+ */
+package org.apache.ivy.ant;
+
+import java.io.File;
+
+import junit.framework.TestCase;
+
+import org.apache.tools.ant.Project;
+import org.apache.tools.ant.taskdefs.Delete;
+
+public class IvyArtifactReportTest extends TestCase {
+    private File _cache;
+    private IvyArtifactReport _prop;
+    private Project _project;
+    
+    protected void setUp() throws Exception {
+        createCache();
+        _project = new Project();
+        _project.setProperty("ivy.settings.file", "test/repositories/ivysettings.xml");
+
+        _prop = new IvyArtifactReport();
+        _prop.setProject(_project);
+        _prop.setCache(_cache);
+    }
+
+    private void createCache() {
+        _cache = new File("build/cache");
+        _cache.mkdirs();
+    }
+    
+    protected void tearDown() throws Exception {
+        cleanCache();
+    }
+
+    private void cleanCache() {
+        Delete del = new Delete();
+        del.setProject(new Project());
+        del.setDir(_cache);
+        del.execute();
+    }
+
+    public void testSimple() throws Exception {
+        _prop.setTofile(new File("build/test-artifact-report.xml"));
+        _prop.setFile(new File("test/java/org/apache/ivy/ant/ivy-simple.xml"));
+        _prop.execute();
+        
+        assertTrue(new File("build/test-artifact-report.xml").exists());
+    }
+}
