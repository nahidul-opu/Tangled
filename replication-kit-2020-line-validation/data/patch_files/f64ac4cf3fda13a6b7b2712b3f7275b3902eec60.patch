From f64ac4cf3fda13a6b7b2712b3f7275b3902eec60 Mon Sep 17 00:00:00 2001
From: Rahul Akolkar <rahul@apache.org>
Date: Thu, 6 Dec 2007 07:37:48 +0000
Subject: [PATCH] Add test from SCXML-53 for wildcard testing, thanks to Ingmar
 Kliche <ingmar dot kliche at googlemail dot com>.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/scxml/trunk@601643 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/scxml/WildcardTest.java    | 19 +++++++++--
 .../commons/scxml/env/jexl/wildcard-02.xml    | 32 +++++++++++++++++++
 2 files changed, 49 insertions(+), 2 deletions(-)
 create mode 100644 src/test/java/org/apache/commons/scxml/env/jexl/wildcard-02.xml

diff --git a/src/test/java/org/apache/commons/scxml/WildcardTest.java b/src/test/java/org/apache/commons/scxml/WildcardTest.java
index 00a045649..8296f68e1 100644
--- a/src/test/java/org/apache/commons/scxml/WildcardTest.java
+++ b/src/test/java/org/apache/commons/scxml/WildcardTest.java
@@ -45,7 +45,7 @@ public static Test suite() {
     }
 
     // Test data
-    private URL wildcard01;
+    private URL wildcard01, wildcard02;
     private SCXMLExecutor exec;
 
     /**
@@ -54,13 +54,15 @@ public static Test suite() {
     public void setUp() {
         wildcard01 = this.getClass().getClassLoader().
             getResource("org/apache/commons/scxml/env/jexl/wildcard-01.xml");
+        wildcard02 = this.getClass().getClassLoader().
+            getResource("org/apache/commons/scxml/env/jexl/wildcard-02.xml");
     }
 
     /**
      * Tear down instance variables required by this test case.
      */
     public void tearDown() {
-        wildcard01 = null;
+        wildcard01 = wildcard02 = null;
     }
 
     /**
@@ -84,6 +86,19 @@ public void testWildcard01Sample() {
         }
     }
 
+    public void testWildcard02Sample() {
+        exec = SCXMLTestHelper.getExecutor(SCXMLTestHelper.parse(wildcard02));
+        assertNotNull(exec);
+        try {
+            Set currentStates = exec.getCurrentStatus().getStates();
+            assertEquals(1, currentStates.size());
+            assertEquals("state2", ((State)currentStates.iterator().
+                next()).getId());
+        } catch (Exception e) {
+            fail(e.getMessage());
+        }
+    }
+
     public static void main(String args[]) {
         TestRunner.run(suite());
     }
diff --git a/src/test/java/org/apache/commons/scxml/env/jexl/wildcard-02.xml b/src/test/java/org/apache/commons/scxml/env/jexl/wildcard-02.xml
new file mode 100644
index 000000000..d039f69ae
--- /dev/null
+++ b/src/test/java/org/apache/commons/scxml/env/jexl/wildcard-02.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+-->
+<scxml xmlns="http://www.w3.org/2005/07/scxml"
+      version="1.0"
+      initialstate="state1">
+
+    <state id="state1">
+      <onentry>
+        <event name="success.start"/>
+      </onentry>
+      <transition event="success.*" target="state2"/>
+    </state>
+
+    <state id="state2"/>
+
+</scxml>
+
