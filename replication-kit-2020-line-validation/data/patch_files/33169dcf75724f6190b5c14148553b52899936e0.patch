From 33169dcf75724f6190b5c14148553b52899936e0 Mon Sep 17 00:00:00 2001
From: Mikkel Meyer Andersen <mikl@apache.org>
Date: Fri, 8 Jun 2012 11:04:11 +0000
Subject: [PATCH] MATH-790: Patch applied to fix the overflow issue.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1348024 13f79535-47bb-0310-9956-ffa450edef68
---
 .../math3/stat/inference/MannWhitneyUTest.java       |  6 +++---
 .../math3/stat/inference/MannWhitneyUTestTest.java   | 12 ++++++++++++
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java b/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
index a4acf2f634..a16173723e 100644
--- a/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
+++ b/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
@@ -170,11 +170,11 @@ private double calculateAsymptoticPValue(final double Umin,
                                              final int n2)
         throws ConvergenceException, MaxCountExceededException {
 
-        final int n1n2prod = n1 * n2;
+        final double n1n2prod = n1 * n2;
 
         // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
-        final double EU = (double) n1n2prod / 2.0;
-        final double VarU = (double) (n1n2prod * (n1 + n2 + 1)) / 12.0;
+        final double EU = n1n2prod / 2.0;
+        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
         final double z = (Umin - EU) / FastMath.sqrt(VarU);
 
diff --git a/src/test/java/org/apache/commons/math3/stat/inference/MannWhitneyUTestTest.java b/src/test/java/org/apache/commons/math3/stat/inference/MannWhitneyUTestTest.java
index 8032922054..0255208679 100644
--- a/src/test/java/org/apache/commons/math3/stat/inference/MannWhitneyUTestTest.java
+++ b/src/test/java/org/apache/commons/math3/stat/inference/MannWhitneyUTestTest.java
@@ -100,4 +100,16 @@ public void testMannWhitneyUInputValidation() throws Exception {
             // expected
         }
     }
+    
+    @Test
+    public void testBigDataSet() throws Exception {
+        double[] d1 = new double[1500];
+        double[] d2 = new double[1500];
+        for (int i = 0; i < 1500; i++) {
+            d1[i] = 2 * i;
+            d2[i] = 2 * i + 1;
+        }
+        double result = testStatistic.mannWhitneyUTest(d1, d2);
+        Assert.assertTrue(result > 0.1);
+    }
 }
