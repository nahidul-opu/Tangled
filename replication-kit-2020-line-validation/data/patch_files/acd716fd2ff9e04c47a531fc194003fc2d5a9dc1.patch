From acd716fd2ff9e04c47a531fc194003fc2d5a9dc1 Mon Sep 17 00:00:00 2001
From: Sergey Edunov <edunov@fb.com>
Date: Tue, 4 Nov 2014 21:47:44 -0800
Subject: [PATCH] GIRAPH-963 Aggregators may not be initialized properly

Summary: Aggregators may fail with IllegalArgumentException upon deserialization

Test Plan: Run same job

Reviewers: majakabiljo, pavanka, pavanka.26, maja.kabiljo

Reviewed By: maja.kabiljo

Differential Revision: https://reviews.facebook.net/D28227
---
 CHANGELOG                                                     | 2 ++
 .../giraph/master/AggregatorToGlobalCommTranslation.java      | 4 +++-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/CHANGELOG b/CHANGELOG
index cdfd666d4..af7c7333f 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -1,6 +1,8 @@
 Giraph Change Log
 
 Release 1.1.0 - unreleased
+  GIRAPH-963: Aggregators may not be initialized properly (edunov via majakabiljo)
+
   GIRAPH-955: Allow vertex/edge/message value to be configurable (ikabiljo via majakabiljo)
 
   GIRAPH-938: Allow fast working with primitives generically (ikabiljo via pavanka)
diff --git a/giraph-core/src/main/java/org/apache/giraph/master/AggregatorToGlobalCommTranslation.java b/giraph-core/src/main/java/org/apache/giraph/master/AggregatorToGlobalCommTranslation.java
index c13d7bd6e..eb2518254 100644
--- a/giraph-core/src/main/java/org/apache/giraph/master/AggregatorToGlobalCommTranslation.java
+++ b/giraph-core/src/main/java/org/apache/giraph/master/AggregatorToGlobalCommTranslation.java
@@ -27,6 +27,7 @@
 import org.apache.giraph.comm.aggregators.AggregatorUtils;
 import org.apache.giraph.conf.ImmutableClassesGiraphConfiguration;
 import org.apache.giraph.utils.MasterLoggingAggregator;
+import org.apache.giraph.utils.WritableUtils;
 import org.apache.hadoop.io.Writable;
 import org.apache.log4j.Logger;
 
@@ -284,7 +285,8 @@ public void write(DataOutput out) throws IOException {
     @Override
     public void readFields(DataInput in) throws IOException {
       persistent = in.readBoolean();
-      reduceOp = new AggregatorReduceOperation<>();
+      reduceOp = WritableUtils.createWritable(
+          AggregatorReduceOperation.class, conf);
       reduceOp.readFields(in);
       currentValue = null;
     }
