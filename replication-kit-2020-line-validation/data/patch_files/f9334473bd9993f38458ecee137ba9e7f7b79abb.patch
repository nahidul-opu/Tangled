From f9334473bd9993f38458ecee137ba9e7f7b79abb Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Thu, 17 Mar 2016 11:04:08 +0100
Subject: [PATCH] plug a few more native memory leaks

aftermaths of COMPRESS-343, inspired by #11
---
 .../compress/archivers/dump/TapeInputStream.java     |  6 +++---
 .../archivers/zip/ZipArchiveInputStream.java         |  7 +++++--
 .../commons/compress/archivers/zip/ZipFile.java      |  7 +++++--
 .../deflate/DeflateCompressorInputStream.java        | 10 ++++++++--
 .../deflate/DeflateCompressorOutputStream.java       | 12 +++++++++---
 5 files changed, 30 insertions(+), 12 deletions(-)

diff --git a/src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java b/src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java
index 75648230bd0..35348056c80 100644
--- a/src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java
@@ -294,18 +294,18 @@ private boolean readBlock(boolean decompress) throws IOException {
                         0x03)) {
                     case ZLIB:
 
+                        Inflater inflator = new Inflater();
                         try {
-                            Inflater inflator = new Inflater();
                             inflator.setInput(compBuffer, 0, compBuffer.length);
                             length = inflator.inflate(blockBuffer);
 
                             if (length != blockSize) {
                                 throw new ShortFileException();
                             }
-
-                            inflator.end();
                         } catch (DataFormatException e) {
                             throw new DumpArchiveException("bad data", e);
+                        } finally {
+                            inflator.end();
                         }
 
                         break;
diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
index 2f7894aad48..584aa4a83b9 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
@@ -519,8 +519,11 @@ private int readFromInflater(byte[] buffer, int offset, int length) throws IOExc
     public void close() throws IOException {
         if (!closed) {
             closed = true;
-            in.close();
-            inf.end();
+            try {
+                in.close();
+            } finally {
+                inf.end();
+            }
         }
     }
 
diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
index 51fe771307f..31444d7576e 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
@@ -420,8 +420,11 @@ public InputStream getInputStream(ZipArchiveEntry ze)
                 return new InflaterInputStream(bis, inflater) {
                     @Override
                     public void close() throws IOException {
-                        super.close();
-                        inflater.end();
+                        try {
+                            super.close();
+                        } finally {
+                            inflater.end();
+                        }
                     }
                 };
             case BZIP2:
diff --git a/src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java b/src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java
index d4fec63fa1e..f7b8dd039f2 100644
--- a/src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java
@@ -37,6 +37,7 @@ public class DeflateCompressorInputStream extends CompressorInputStream {
     private static final int MAGIC_2d = 0xda;
     
     private final InputStream in;
+    private final Inflater inflater;
 
     /**
      * Creates a new input stream that decompresses Deflate-compressed data
@@ -58,7 +59,8 @@ public DeflateCompressorInputStream(InputStream inputStream) {
      */
     public DeflateCompressorInputStream(InputStream inputStream,
                                         DeflateParameters parameters) {
-        in = new InflaterInputStream(inputStream, new Inflater(!parameters.withZlibHeader()));
+        inflater = new Inflater(!parameters.withZlibHeader());
+        in = new InflaterInputStream(inputStream, inflater);
     }
     
     /** {@inheritDoc} */
@@ -92,7 +94,11 @@ public int available() throws IOException {
     /** {@inheritDoc} */
     @Override
     public void close() throws IOException {
-        in.close();
+        try {
+            in.close();
+        } finally {
+            inflater.end();
+        }
     }
     
     /**
diff --git a/src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java b/src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java
index 3714fe44fb8..e978a577d1c 100644
--- a/src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java
@@ -31,7 +31,8 @@
  */
 public class DeflateCompressorOutputStream extends CompressorOutputStream {
     private final DeflaterOutputStream out;
-   
+    private final Deflater deflater;
+
     /**
      * Creates a Deflate compressed output stream with the default parameters.
      * @param outputStream the stream to wrap
@@ -49,7 +50,8 @@ public DeflateCompressorOutputStream(OutputStream outputStream) throws IOExcepti
      */
     public DeflateCompressorOutputStream(OutputStream outputStream,
                                          DeflateParameters parameters) throws IOException {
-        this.out = new DeflaterOutputStream(outputStream, new Deflater(parameters.getCompressionLevel(), !parameters.withZlibHeader()));
+        this.deflater = new Deflater(parameters.getCompressionLevel(), !parameters.withZlibHeader());
+        this.out = new DeflaterOutputStream(outputStream, deflater);
     }
 
     @Override
@@ -83,6 +85,10 @@ public void finish() throws IOException {
 
     @Override
     public void close() throws IOException {
-        out.close();
+        try {
+            out.close();
+        } finally {
+            deflater.end();
+        }
     }
 }
