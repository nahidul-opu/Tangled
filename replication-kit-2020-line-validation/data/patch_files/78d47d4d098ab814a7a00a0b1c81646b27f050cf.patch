From 78d47d4d098ab814a7a00a0b1c81646b27f050cf Mon Sep 17 00:00:00 2001
From: Thomas Neidhart <tn@apache.org>
Date: Sat, 14 Nov 2015 20:38:02 +0000
Subject: [PATCH] [COLLECTIONS-580] Clarify class javadoc of utils that only
 unsafe classes are serializable anymore.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1714362 13f79535-47bb-0310-9956-ffa450edef68
---
 .../org/apache/commons/collections4/ClosureUtils.java  | 10 ++++++++--
 .../org/apache/commons/collections4/FactoryUtils.java  | 10 ++++++++--
 .../apache/commons/collections4/TransformerUtils.java  |  9 ++++++++-
 3 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/src/main/java/org/apache/commons/collections4/ClosureUtils.java b/src/main/java/org/apache/commons/collections4/ClosureUtils.java
index b339a1a0e3..fd09abe71f 100644
--- a/src/main/java/org/apache/commons/collections4/ClosureUtils.java
+++ b/src/main/java/org/apache/commons/collections4/ClosureUtils.java
@@ -37,7 +37,6 @@
  * <li>Invoker - invokes a method on the input object
  * <li>For - repeatedly calls a closure for a fixed number of times
  * <li>While - repeatedly calls a closure while a predicate is true
- * <li>DoWhile - repeatedly calls a closure while a predicate is true
  * <li>Chained - chains two or more closures together
  * <li>If - calls one closure or another based on a predicate
  * <li>Switch - calls one closure based on one or more predicates
@@ -46,7 +45,14 @@
  * <li>NOP - does nothing
  * <li>Exception - always throws an exception
  * </ul>
- * All the supplied closures are Serializable.
+ * <p>
+ * Since v4.1 only closures which are considered to be unsafe are
+ * Serializable. Closures considered to be unsafe for serialization are:
+ * <ul>
+ * <li>Invoker
+ * <li>For
+ * <li>While
+ * </ul>
  *
  * @since 3.0
  * @version $Id$
diff --git a/src/main/java/org/apache/commons/collections4/FactoryUtils.java b/src/main/java/org/apache/commons/collections4/FactoryUtils.java
index bb5887f869..6d77635749 100644
--- a/src/main/java/org/apache/commons/collections4/FactoryUtils.java
+++ b/src/main/java/org/apache/commons/collections4/FactoryUtils.java
@@ -26,12 +26,18 @@
  * for the Factory functor interface. The supplied factories are:
  * <ul>
  * <li>Prototype - clones a specified object
- * <li>Reflection - creates objects using reflection
+ * <li>Instantiate - creates objects using reflection
  * <li>Constant - always returns the same object
  * <li>Null - always returns null
  * <li>Exception - always throws an exception
  * </ul>
- * All the supplied factories are Serializable.
+ * <p>
+ * Since v4.1 only factories which are considered to be unsafe are
+ * Serializable. Factories considered to be unsafe for serialization are:
+ * <ul>
+ * <li>Prototype
+ * <li>Instantiate
+ * </ul>
  *
  * @since 3.0
  * @version $Id$
diff --git a/src/main/java/org/apache/commons/collections4/TransformerUtils.java b/src/main/java/org/apache/commons/collections4/TransformerUtils.java
index 05a94f5ef3..ad6265a363 100644
--- a/src/main/java/org/apache/commons/collections4/TransformerUtils.java
+++ b/src/main/java/org/apache/commons/collections4/TransformerUtils.java
@@ -56,7 +56,14 @@
  * <li>Exception - always throws an exception
  * <li>StringValue - returns a <code>java.lang.String</code> representation of the input object
  * </ul>
- * All the supplied transformers are Serializable.
+ * <p>
+ * Since v4.1 only transformers which are considered to be unsafe are
+ * Serializable. Transformers considered to be unsafe for serialization are:
+ * <ul>
+ * <li>Invoker
+ * <li>Clone
+ * <li>Instantiate
+ * </ul>
  *
  * @since 3.0
  * @version $Id$
