From 9edd2f24d77bfa5ea23688fc913a030c7cb6dcc7 Mon Sep 17 00:00:00 2001
From: Gilles Sadowski <erans@apache.org>
Date: Sat, 13 Aug 2011 07:23:38 +0000
Subject: [PATCH] MATH-601 Replaced call to "max" with the already known result
 "m".

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1157342 13f79535-47bb-0310-9956-ffa450edef68
---
 .../math/linear/SingularValueDecompositionImpl.java      | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java b/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java
index 8fc9b36658..b7a3feff41 100644
--- a/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java
+++ b/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java
@@ -57,7 +57,10 @@ public class SingularValueDecompositionImpl implements SingularValueDecompositio
     private final RealMatrix cachedV;
     /** Cached value of transposed V matrix. */
     private RealMatrix cachedVt;
-    /** Tolerance value for small singular values, calculated once we have populated singularValues **/
+    /**
+     * Tolerance value for small singular values, calculated once we have
+     * populated "singularValues".
+     **/
     private final double tol;
 
     /**
@@ -446,8 +449,8 @@ public SingularValueDecompositionImpl(final RealMatrix matrix) {
         }
 
         // Set the small value tolerance used to calculate rank and pseudo-inverse
-        tol = FastMath.max(FastMath.max(m, n) * singularValues[0] * EPS,
-                FastMath.sqrt( MathUtils.SAFE_MIN));
+        tol = FastMath.max(m * singularValues[0] * EPS,
+                           FastMath.sqrt(MathUtils.SAFE_MIN));
 
         if (!transposed) {
             cachedU = MatrixUtils.createRealMatrix(U);
