From cc06ae9bf7a1fb6cee46c40d2a6388ac05d3f5d1 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Wed, 29 Oct 2008 22:51:22 +0000
Subject: [PATCH] FIX: Listing of URL's under a given URL does not handle fully
 specified URL's (IVY-959) (thanks to Randy Nott)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@709038 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                     |  1 +
 .../apache/ivy/util/url/ApacheURLLister.java    | 17 ++++++++++++++++-
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index d56952f7f..2c9e265d8 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -84,6 +84,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
    trunk
 =====================================
 - FIX: Log levels aren't respected in certain cases using the standalone functionality (IVY-960) (thanks to Patrick Woodworth)
+- FIX: Listing of URL's under a given URL does not handle fully specified URL's (IVY-959) (thanks to Randy Nott)
 
    2.0.0-rc2
 =====================================
diff --git a/src/java/org/apache/ivy/util/url/ApacheURLLister.java b/src/java/org/apache/ivy/util/url/ApacheURLLister.java
index d3ed6ae81..ff272a7a5 100644
--- a/src/java/org/apache/ivy/util/url/ApacheURLLister.java
+++ b/src/java/org/apache/ivy/util/url/ApacheURLLister.java
@@ -126,11 +126,26 @@ public List retrieveListing(URL url, boolean includeFiles, boolean includeDirect
 
             text = text.trim();
             
+            // handle complete URL listings
+            if (href.startsWith("http:") || href.startsWith("https:")) {
+                try {
+                    href = new URL(href).getPath();
+                    if (!href.startsWith(url.getPath())) {
+                        // ignore URLs which aren't children of the base URL
+                        continue;
+                    }
+                    href = href.substring(url.getPath().length());
+                } catch (Exception ignore) {
+                    // incorrect URL, ignore
+                    continue;
+                }
+            }
+
             if (href.startsWith("../")) {
                 // we are only interested in sub-URLs, not parent URLs, so skip this one
                 continue;
             }
-
+            
             // absolute href: convert to relative one
             if (href.startsWith("/")) {
                 int slashIndex = href.substring(0, href.length() - 1).lastIndexOf('/');
