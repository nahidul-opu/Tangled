From 0942ef04f1fa911d382b79a92dca1dd4b3eb88e6 Mon Sep 17 00:00:00 2001
From: Benedikt Ritter <britter@apache.org>
Date: Mon, 20 Jan 2014 17:19:59 +0000
Subject: [PATCH] =?UTF-8?q?LANG-951:=20Fragments=20are=20wrong=20by=201=20?=
 =?UTF-8?q?day=20when=20using=20fragment=20YEAR=20or=20MONTH=20-=20applyin?=
 =?UTF-8?q?g=20patch=20provided=20by=20Sebastian=20G=C3=B6tz,=20several=20?=
 =?UTF-8?q?tests=20now=20fail=20because=20of=20wrong=20assertions,=20will?=
 =?UTF-8?q?=20fix=20them=20in=20a=20separate=20commit?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1559780 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                             |  1 +
 .../org/apache/commons/lang3/time/DateUtils.java    |  4 ++--
 .../commons/lang3/time/DateUtilsFragmentTest.java   | 13 +++++++++++++
 3 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index e43438bc16d..29610a9e4a5 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,7 @@
   <body>
 
   <release version="3.3" date="TBA" description="Bugfix and Feature release">
+    <action issue="LANG-951" type="fix" dev="britter" due-to="Sebastian GÃ¶tz">Fragments are wrong by 1 day when using fragment YEAR or MONTH</action>
     <action issue="LANG-417" type="add" dev="britter">New class ClassPathUtils with methods for turning FQN into resource path</action>
     <action issue="LANG-939" type="update" dev="britter">Move Documentation from user guide to package-info files</action>
     <action issue="LANG-953" type="update" dev="britter">Convert package.html files to package-info.java files</action>
diff --git a/src/main/java/org/apache/commons/lang3/time/DateUtils.java b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
index 2da766fd65e..61400f0732d 100644
--- a/src/main/java/org/apache/commons/lang3/time/DateUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DateUtils.java
@@ -1689,10 +1689,10 @@ private static long getFragment(final Calendar calendar, final int fragment, fin
         // Fragments bigger than a day require a breakdown to days
         switch (fragment) {
             case Calendar.YEAR:
-                result += (calendar.get(Calendar.DAY_OF_YEAR) * MILLIS_PER_DAY) / millisPerUnit;
+                result += ((calendar.get(Calendar.DAY_OF_YEAR) -1) * MILLIS_PER_DAY) / millisPerUnit;
                 break;
             case Calendar.MONTH:
-                result += (calendar.get(Calendar.DAY_OF_MONTH) * MILLIS_PER_DAY) / millisPerUnit;
+                result += ((calendar.get(Calendar.DAY_OF_MONTH) -1) * MILLIS_PER_DAY) / millisPerUnit;
                 break;
         }
 
diff --git a/src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java b/src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java
index ff9cf3369f2..227483a3d6a 100644
--- a/src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java
+++ b/src/test/java/org/apache/commons/lang3/time/DateUtilsFragmentTest.java
@@ -531,6 +531,19 @@ public void testMinutesOfYearWithCalendar() {
                 testResult);
     }
 
+    @Test
+    public void testMinutesOfYearWithWrongOffsetBugWithCalendar() {
+        Calendar c = Calendar.getInstance();
+        c.set(Calendar.MONTH, Calendar.JANUARY);
+        c.set(Calendar.DAY_OF_YEAR, 1);
+        c.set(Calendar.HOUR_OF_DAY, 0);
+        c.set(Calendar.MINUTE, 0);
+        c.set(Calendar.SECOND, 0);
+        c.set(Calendar.MILLISECOND, 0);
+        final long testResult = DateUtils.getFragmentInMinutes(c, Calendar.YEAR);
+        assertEquals( 0, testResult);
+    }
+
     @Test
     public void testHoursOfYearWithDate() {
         final long testResult = DateUtils.getFragmentInHours(aDate, Calendar.YEAR);
