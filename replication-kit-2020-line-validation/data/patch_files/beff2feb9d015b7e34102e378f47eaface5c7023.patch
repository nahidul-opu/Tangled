From beff2feb9d015b7e34102e378f47eaface5c7023 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Mon, 30 Nov 2009 22:35:17 +0000
Subject: [PATCH] FIX: FileSystem resolver with m2compatible=true throws error
 when publishing modules with dotted organisation names (IVY-968)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@885601 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 .../plugins/resolver/FileSystemResolver.java  |  9 ++++--
 .../resolver/FileSystemResolverTest.java      | 32 +++++++++++++++++++
 3 files changed, 40 insertions(+), 2 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index 6330d1b81..7d8e2615f 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -99,6 +99,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Trace a message when a property file referenced from the settings doesn't exixts (IVY-1074)
 - IMPROVEMENT: use defaultconf in combination with defaultconfmapping (IVY-1135) (thanks to Jon Schneider)
 
+- FIX: FileSystem resolver with m2compatible=true throws error when publishing modules with dotted organisation names (IVY-968)
 - FIX: ivy:retrieve sync="true" does nothing if first variable is optional (IVY-1142) (thanks to Andreas Axelsson)
 - FIX: Latest Compatible Conflict Manager + Extra Attributes in Dependencies' IVY files == infinite loop (IVY-956)
 - FIX: Resolve with Extra Attributes, Forced Dependencies causes invalid delivered ivy file (IVY-1079)
diff --git a/src/java/org/apache/ivy/plugins/resolver/FileSystemResolver.java b/src/java/org/apache/ivy/plugins/resolver/FileSystemResolver.java
index 546ad3071..9ce33e672 100644
--- a/src/java/org/apache/ivy/plugins/resolver/FileSystemResolver.java
+++ b/src/java/org/apache/ivy/plugins/resolver/FileSystemResolver.java
@@ -279,13 +279,18 @@ private void unsupportedTransaction(String msg) {
     }
 
     private void initTransaction(ModuleRevisionId module) {
+        ModuleRevisionId mrid = module;
+        if (isM2compatible()) {
+            mrid = convertM2IdForResourceSearch(module);
+        }
+        
         transactionTempDir = Checks.checkAbsolute(IvyPatternHelper.substitute(
             baseTransactionPattern, 
             ModuleRevisionId.newInstance(
-                module, module.getRevision() + TRANSACTION_DESTINATION_SUFFIX)),
+                mrid, mrid.getRevision() + TRANSACTION_DESTINATION_SUFFIX)),
                 "baseTransactionPattern");
         transactionDestDir = Checks.checkAbsolute(IvyPatternHelper.substitute(
-            baseTransactionPattern, module), "baseTransactionPattern");
+            baseTransactionPattern, mrid), "baseTransactionPattern");
     }
 
     public String getTransactional() {
diff --git a/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java b/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java
index 3ca3ad3c0..9789becc7 100644
--- a/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java
+++ b/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java
@@ -752,6 +752,38 @@ public void testPublishTransactionWithSubDirectories() throws Exception {
         }
     }
 
+    public void testPublishTransactionWithDottedOrganisation() throws Exception {
+        try {
+            FileSystemResolver resolver = new FileSystemResolver();
+            resolver.setName("test");
+            resolver.setM2compatible(true);
+            resolver.setSettings(settings);
+
+            resolver.addIvyPattern(
+                settings.getBaseDir() + "/test/repositories/m2/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]");
+            resolver.addArtifactPattern(
+                settings.getBaseDir() + "/test/repositories/m2/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]");
+
+            ModuleRevisionId mrid = ModuleRevisionId.newInstance("org.apache", "mymodule", "myrevision");
+            Artifact ivyArtifact = new DefaultArtifact(mrid, new Date(), "ivy", "ivy", "xml");
+            Artifact artifact = new DefaultArtifact(mrid, new Date(), "myartifact", "mytype", "myext");
+            File src = new File("test/repositories/ivysettings.xml");
+            
+            resolver.beginPublishTransaction(mrid, false);
+            
+            // files should not be available until the transaction is committed
+            resolver.publish(ivyArtifact, src, false);
+            assertFalse(new File("test/repositories/m2/org/apache/mymodule/myrevision/ivy-myrevision.xml").exists());
+            resolver.publish(artifact, src, false);
+            assertFalse(new File("test/repositories/m2/org/apache/mymodule/myrevision/myartifact-myrevision.myext").exists());
+
+            resolver.commitPublishTransaction();
+            assertTrue(new File("test/repositories/m2/org/apache/mymodule/myrevision/ivy-myrevision.xml").exists());
+            assertTrue(new File("test/repositories/m2/org/apache/mymodule/myrevision/myartifact-myrevision.myext").exists());
+        } finally {
+            FileUtil.forceDelete(new File("test/repositories/m2/org/apache/mymodule"));
+        }
+    }
 
     public void testAbortTransaction() throws Exception {
         try {
