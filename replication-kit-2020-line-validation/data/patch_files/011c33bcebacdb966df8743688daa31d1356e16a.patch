From 011c33bcebacdb966df8743688daa31d1356e16a Mon Sep 17 00:00:00 2001
From: Emmanuel Bourg <ebourg@apache.org>
Date: Sun, 21 Jun 2009 13:03:27 +0000
Subject: [PATCH] Fixed empty dictionaries <dict/> (CONFIGURATION-362)

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/branches/configuration2_experimental@787006 13f79535-47bb-0310-9956-ffa450edef68
---
 .../plist/XMLPropertyListConfiguration.java   | 53 +++++++++++++------
 .../TestXMLPropertyListConfiguration.java     | 22 ++++++++
 src/test/resources/test.plist.xml             |  3 ++
 3 files changed, 62 insertions(+), 16 deletions(-)

diff --git a/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java b/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java
index a463432781..90227bb3ba 100644
--- a/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java
@@ -277,36 +277,52 @@ public void save(Writer out) throws ConfigurationException
         writer.flush();
     }
 
+    /**
+     * Returns the sequence of space characters to indent at the specified level.
+     */
+    private String getPadding(int level)
+    {
+        return StringUtils.repeat(" ", level * INDENT_SIZE);
+    }
+
     /**
      * Append a node to the writer, indented according to a specific level.
      */
     private void printNode(PrintWriter out, int indentLevel, ConfigurationNode node)
     {
-        String padding = StringUtils.repeat(" ", indentLevel * INDENT_SIZE);
+        String padding = getPadding(indentLevel);
 
         if (node.getName() != null)
         {
             out.println(padding + "<key>" + StringEscapeUtils.escapeXml(node.getName()) + "</key>");
         }
 
-        List<ConfigurationNode> children = node.getChildren();
-        if (!children.isEmpty())
+        if (node.getValue() == null)
         {
-            out.println(padding + "<dict>");
-
-            Iterator<ConfigurationNode> it = children.iterator();
-            while (it.hasNext())
+            List<ConfigurationNode> children = node.getChildren();
+            
+            if (children.isEmpty())
+            {
+                out.println(padding + "<dict/>");
+            }
+            else
             {
-                ConfigurationNode child = it.next();
-                printNode(out, indentLevel + 1, child);
+                out.println(padding + "<dict>");
 
-                if (it.hasNext())
+                Iterator<ConfigurationNode> it = children.iterator();
+                while (it.hasNext())
                 {
-                    out.println();
+                    ConfigurationNode child = it.next();
+                    printNode(out, indentLevel + 1, child);
+
+                    if (it.hasNext())
+                    {
+                        out.println();
+                    }
                 }
-            }
 
-            out.println(padding + "</dict>");
+                out.println(padding + "</dict>");
+            }
         }
         else
         {
@@ -320,7 +336,7 @@ private void printNode(PrintWriter out, int indentLevel, ConfigurationNode node)
      */
     private void printValue(PrintWriter out, int indentLevel, Object value)
     {
-        String padding = StringUtils.repeat(" ", indentLevel * INDENT_SIZE);
+        String padding = getPadding(indentLevel);
 
         if (value instanceof Date)
         {
@@ -397,13 +413,17 @@ else if (value instanceof Map)
         }
         else if (value instanceof byte[])
         {
-            String base64 = new String(Base64.encodeBase64((byte[]) value));
+            String base64 = Base64.encodeBase64((byte[]) value);
             out.println(padding + "<data>" + StringEscapeUtils.escapeXml(base64) + "</data>");
         }
-        else
+        else if (value != null)
         {
             out.println(padding + "<string>" + StringEscapeUtils.escapeXml(String.valueOf(value)) + "</string>");
         }
+        else
+        {
+            out.println(padding + "<string/>");
+        }
     }
 
     /**
@@ -502,6 +522,7 @@ else if ("dict".equals(qName))
             }
             else
             {
+                PListNode node = (PListNode) peek();
                 if ("string".equals(qName))
                 {
                     ((PListNode) peek()).addValue(buffer.toString());
diff --git a/src/test/java/org/apache/commons/configuration2/plist/TestXMLPropertyListConfiguration.java b/src/test/java/org/apache/commons/configuration2/plist/TestXMLPropertyListConfiguration.java
index 20b6ac480f..9053cb5021 100644
--- a/src/test/java/org/apache/commons/configuration2/plist/TestXMLPropertyListConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration2/plist/TestXMLPropertyListConfiguration.java
@@ -271,8 +271,30 @@ else if (value instanceof List)
             {
                 assertEquals("Value of the '" + key + "' property", config.getProperty(key), checkConfig.getProperty(key));
             }
+        }
+    }
+    
+    public void testSaveEmptyDictionary() throws Exception
+    {
+        File savedFile = new File("target/testsave.plist.xml");
 
+        // remove the file previously saved if necessary
+        if (savedFile.exists())
+        {
+            assertTrue(savedFile.delete());
         }
+        
+        // save the configuration
+        String filename = savedFile.getAbsolutePath();
+        config.save(filename);
+
+        assertTrue("The saved file doesn't exist", savedFile.exists());
+
+        // read the configuration and compare the properties
+        Configuration checkConfig = new XMLPropertyListConfiguration(new File(filename));
+        
+        assertEquals(null, config.getProperty("empty-dictionary"));
+        assertEquals(null, checkConfig.getProperty("empty-dictionary"));
     }
 
     /**
diff --git a/src/test/resources/test.plist.xml b/src/test/resources/test.plist.xml
index 2f30da4a1e..d59cb90266 100644
--- a/src/test/resources/test.plist.xml
+++ b/src/test/resources/test.plist.xml
@@ -80,5 +80,8 @@
             </dict>
         </dict>
 
+        <key>empty-dictionary</key>
+        <dict/>
+
     </dict>
 </plist>
