From ee9bc1cca780fae77f8b3744137b5e2aace5bd37 Mon Sep 17 00:00:00 2001
From: Damjan Jovanovic <damjan@apache.org>
Date: Sun, 19 Oct 2014 06:30:05 +0000
Subject: [PATCH] Allow null parameters in PngImageParser.getBufferedImage(),
 and add some tests for null parameters.

Jira issue key: IMAGING-131



git-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1632875 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  5 ++++-
 .../imaging/formats/png/PngImageParser.java   |  4 +++-
 .../imaging/roundtrip/RoundtripTest.java      | 19 +++++++++++++++++++
 3 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 0696903f6..41ef4e8bf 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -46,7 +46,10 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
 
     <release version="1.0" date="TBA" description="TBA">
-      <action issue="IMAGING_121" dev="damjan" type="fix" due-to="Piyush Kapoor">
+      <action issue="IMAGING-131" dev="damjan" type="fix">
+        Allow null parameters in PngImageParser.getBufferedImage(), and add some tests for null parameters.
+      </action>
+      <action issue="IMAGING-121" dev="damjan" type="fix" due-to="Piyush Kapoor">
         Null Pointer exception while extracting metadata for CR2 image.
       </action>
       <action issue="IMAGING-115" dev="damjan" type="fix">
diff --git a/src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java b/src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java
index cb7837c0b..bb361015c 100644
--- a/src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java
+++ b/src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java
@@ -29,6 +29,7 @@
 import java.io.OutputStream;
 import java.io.PrintWriter;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.zip.InflaterInputStream;
@@ -468,8 +469,9 @@ public ImageInfo getImageInfo(final ByteSource byteSource, final Map<String, Obj
     }
 
     @Override
-    public BufferedImage getBufferedImage(final ByteSource byteSource, final Map<String, Object> params)
+    public BufferedImage getBufferedImage(final ByteSource byteSource, Map<String, Object> params)
             throws ImageReadException, IOException {
+        params = (params == null) ? new HashMap<String, Object>() : new HashMap<String, Object>(params);
 
         if (params.containsKey(PARAM_KEY_VERBOSE)) {
             params.remove(PARAM_KEY_VERBOSE);
diff --git a/src/test/java/org/apache/commons/imaging/roundtrip/RoundtripTest.java b/src/test/java/org/apache/commons/imaging/roundtrip/RoundtripTest.java
index e7d7f9b42..0bb3e13b2 100644
--- a/src/test/java/org/apache/commons/imaging/roundtrip/RoundtripTest.java
+++ b/src/test/java/org/apache/commons/imaging/roundtrip/RoundtripTest.java
@@ -430,6 +430,25 @@ public void testPixelDensityRoundtrip() throws IOException,
         }
     }
 
+    public void testNullParametersRoundtrip() throws IOException,
+    		ImageReadException, ImageWriteException {
+    	final BufferedImage testImage = createFullColorImage(1, 1);
+        for (final FormatInfo formatInfo : FORMAT_INFOS) {
+            if (!formatInfo.canRead || !formatInfo.canWrite) {
+                continue;
+            }
+            final File temp1 = createTempFile("nullParameters.", "."
+                    + formatInfo.format.getExtension());
+            Imaging.writeImage(testImage, temp1, formatInfo.format, null);
+            Imaging.getImageInfo(temp1, null);
+            Imaging.getImageSize(temp1, null);
+            Imaging.getMetadata(temp1, null);
+            Imaging.getICCProfile(temp1, null);
+            BufferedImage imageRead = Imaging.getBufferedImage(temp1, null);
+            assertNotNull(imageRead);
+        }
+    }
+    
     private void roundtrip(final FormatInfo formatInfo, final BufferedImage testImage,
             final String tempPrefix, final boolean imageExact) throws IOException,
             ImageReadException, ImageWriteException {
