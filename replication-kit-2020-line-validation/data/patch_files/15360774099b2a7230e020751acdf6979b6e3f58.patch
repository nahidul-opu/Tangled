From 15360774099b2a7230e020751acdf6979b6e3f58 Mon Sep 17 00:00:00 2001
From: Henri Yandell <bayard@apache.org>
Date: Tue, 19 Dec 2006 21:50:04 +0000
Subject: [PATCH] Fixing LANG-300 (reported by Jeremy Lemaire) - 1L to 9L
 incorrectly throw exceptions when passed into NumberUtils.createNumber. Fixed
 in both the math.NumbersUtils and the deprecated NumberUtils classes.

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@488819 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/commons/lang/NumberUtils.java          | 3 +--
 src/java/org/apache/commons/lang/math/NumberUtils.java     | 3 +--
 src/test/org/apache/commons/lang/math/NumberUtilsTest.java | 6 ++++++
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/java/org/apache/commons/lang/NumberUtils.java b/src/java/org/apache/commons/lang/NumberUtils.java
index b52b29d85bd..18a05efe24a 100644
--- a/src/java/org/apache/commons/lang/NumberUtils.java
+++ b/src/java/org/apache/commons/lang/NumberUtils.java
@@ -192,8 +192,7 @@ public static Number createNumber(String val) throws NumberFormatException {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {
diff --git a/src/java/org/apache/commons/lang/math/NumberUtils.java b/src/java/org/apache/commons/lang/math/NumberUtils.java
index c0f06a47f82..eb74e72fead 100644
--- a/src/java/org/apache/commons/lang/math/NumberUtils.java
+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java
@@ -451,8 +451,7 @@ public static Number createNumber(String str) throws NumberFormatException {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {
diff --git a/src/test/org/apache/commons/lang/math/NumberUtilsTest.java b/src/test/org/apache/commons/lang/math/NumberUtilsTest.java
index 57532381a26..f3e7cc43b0e 100644
--- a/src/test/org/apache/commons/lang/math/NumberUtilsTest.java
+++ b/src/test/org/apache/commons/lang/math/NumberUtilsTest.java
@@ -1364,5 +1364,11 @@ public void testConstants() {
         assertTrue(NumberUtils.FLOAT_ONE.floatValue() == 1.0f);
         assertTrue(NumberUtils.FLOAT_MINUS_ONE.floatValue() == -1.0f);
     }
+
+    public void testLang300() {
+        NumberUtils.createNumber("-1l");
+        NumberUtils.createNumber("01l");
+        NumberUtils.createNumber("1l");
+    }
     
 }
