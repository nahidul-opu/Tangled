From 347660646cfad588481c13058842d49fa3779f84 Mon Sep 17 00:00:00 2001
From: Stefan Bodewig <bodewig@apache.org>
Date: Mon, 5 Dec 2011 15:39:52 +0000
Subject: [PATCH] ZipFile doesn't work properly for unicode extra fields. 
 Based on patch by Volker Leidl.  COMPRESS-164

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1210501 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  4 ++++
 .../compress/archivers/zip/ZipFile.java       | 12 ++++++++++--
 .../archivers/zip/UTF8ZipFilesTest.java       | 19 ++++++++++++++++---
 3 files changed, 30 insertions(+), 5 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index d75d4ddf0ab..602f1fb5fca 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -61,6 +61,10 @@ The <action> type attribute can be add,update,fix,remove.
         The tar package can now read archives that use GNU extensions
         for files that are longer than 8 GByte.
       </action>
+      <action issue="COMPRESS-164" type="fix" date="2011-12-05">
+        ZipFile didn't work properly for archives using unicode extra
+        fields rather than UTF-8 filenames and the EFS-Flag.
+      </action>
     </release>
     <release version="1.3" date="2011-11-01"
              description="Release 1.3 - API compatible to 1.2 but requires Java5 at runtime">
diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
index 2a9be91bcbd..b0588695b02 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
@@ -801,8 +801,15 @@ private void skipBytes(final int count) throws IOException {
     private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
                                             entriesWithoutUTF8Flag)
         throws IOException {
-        for (ZipArchiveEntry ze : entries.keySet()) {
-            OffsetEntry offsetEntry = entries.get(ze);
+        // changing the name of a ZipArchiveEntry is going to change
+        // the hashcode - see COMPRESS-164
+        // Map needs to be reconstructed in order to keep central
+        // directory order
+        Map<ZipArchiveEntry, OffsetEntry> origMap =
+            new LinkedHashMap<ZipArchiveEntry, OffsetEntry>(entries);
+        entries.clear();
+        for (ZipArchiveEntry ze : origMap.keySet()) {
+            OffsetEntry offsetEntry = origMap.get(ze);
             long offset = offsetEntry.headerOffset;
             archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
             byte[] b = new byte[SHORT];
@@ -835,6 +842,7 @@ private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
                     nameMap.put(ze.getName(), ze);
                 }
             }
+            entries.put(ze, offsetEntry);
         }
     }
 
diff --git a/src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java b/src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java
index bf87a8740b7..99b5127bccc 100644
--- a/src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java
@@ -21,6 +21,7 @@
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.UnsupportedEncodingException;
 import java.net.URI;
 import java.net.URISyntaxException;
@@ -128,14 +129,26 @@ public void testReadWinZipArchive() throws IOException, URISyntaxException {
         ZipFile zf = null;
         try {
             zf = new ZipFile(archive, null, true);
-            assertNotNull(zf.getEntry(ASCII_TXT));
-            assertNotNull(zf.getEntry(EURO_FOR_DOLLAR_TXT));
-            assertNotNull(zf.getEntry(OIL_BARREL_TXT));
+            assertCanRead(zf, ASCII_TXT);
+            assertCanRead(zf, EURO_FOR_DOLLAR_TXT);
+            assertCanRead(zf, OIL_BARREL_TXT);
         } finally {
             ZipFile.closeQuietly(zf);
         }
     }
 
+    private void assertCanRead(ZipFile zf, String fileName) throws IOException {
+        ZipArchiveEntry entry = zf.getEntry(fileName);
+        assertNotNull("Entry doesn't exist", entry);
+        InputStream is = zf.getInputStream(entry);
+        assertNotNull("InputStream is null", is);
+        try {
+            is.read();
+        } finally {
+            is.close();
+        }
+    }
+
     public void testReadWinZipArchiveForStream() throws IOException,
                                                       URISyntaxException {
         URL zip = getClass().getResource("/utf8-winzip-test.zip");
