From 751b8ff8d4a26aca1a8f183dc45af928fd0ecd8a Mon Sep 17 00:00:00 2001
From: Alessandro Presta <apresta@apache.org>
Date: Wed, 10 Oct 2012 01:08:10 +0000
Subject: [PATCH] GIRAPH-361: Hive output partition parsing is broken (nitay
 via apresta)

git-svn-id: https://svn.apache.org/repos/asf/giraph/trunk@1396441 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGELOG                                     |  2 +
 giraph-formats-contrib/pom.xml                |  5 ++
 .../giraph/io/hcatalog/HiveGiraphRunner.java  | 53 ++-----------------
 3 files changed, 10 insertions(+), 50 deletions(-)

diff --git a/CHANGELOG b/CHANGELOG
index cfbdca917..ea5d7cac1 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -2,6 +2,8 @@ Giraph Change Log
 
 Release 0.2.0 - unreleased
 
+  GIRAPH-361: Hive output partition parsing is broken (nitay via apresta)
+
   GIRAPH-360: Keep track of the task id in ChannelRotater to send
   requests without knowing the worker id upfront (aching via
   ekoontz)
diff --git a/giraph-formats-contrib/pom.xml b/giraph-formats-contrib/pom.xml
index 070fac4b7..dd38d2c6a 100644
--- a/giraph-formats-contrib/pom.xml
+++ b/giraph-formats-contrib/pom.xml
@@ -129,6 +129,11 @@ under the License.
       </repository>
     </repositories>
     <dependencies>
+        <dependency>
+          <groupId>com.google.guava</groupId>
+          <artifactId>guava</artifactId>
+          <version>12.0</version>
+        </dependency>
         <dependency>
           <groupId>org.apache.hcatalog</groupId>
           <artifactId>hcatalog-core</artifactId>
diff --git a/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hcatalog/HiveGiraphRunner.java b/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hcatalog/HiveGiraphRunner.java
index 15e41a5f8..658def239 100644
--- a/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hcatalog/HiveGiraphRunner.java
+++ b/giraph-formats-contrib/src/main/java/org/apache/giraph/io/hcatalog/HiveGiraphRunner.java
@@ -23,7 +23,6 @@
 import java.util.Collection;
 import java.util.List;
 import java.util.Map;
-import java.util.Map.Entry;
 
 import org.apache.commons.cli.CommandLine;
 import org.apache.commons.cli.CommandLineParser;
@@ -43,7 +42,6 @@
 import org.apache.hcatalog.mapreduce.OutputJobInfo;
 
 import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
 import org.apache.log4j.Logger;
 
 /**
@@ -292,7 +290,7 @@ private CommandLine processArguments(String[] args) throws ParseException,
     inputTableName = cmdln.getOptionValue("inputTable");
     inputTableFilterExpr = cmdln.getOptionValue("inputFilter");
     outputTableName = cmdln.getOptionValue("outputTable");
-    outputTablePartitionValues = parsePartitionValues(cmdln
+    outputTablePartitionValues = HiveUtils.parsePartitionValues(cmdln
                 .getOptionValue("outputPartition"));
     workers = Integer.parseInt(cmdln.getOptionValue("workers"));
     isVerbose = cmdln.hasOption("verbose");
@@ -362,50 +360,6 @@ private <T> Class<? extends T> findClass(String className, Class<T> base) {
     }
   }
 
-  // TODO use Hive util class if this is already provided by it
-
-  /**
-  * @param outputTablePartitionString table partition string
-  * @return Map
-  */
-  public static Map<String, String> parsePartitionValues(
-            String outputTablePartitionString) {
-    if (outputTablePartitionString != null) {
-      Map<String, String> partitionValues = Maps.newHashMap();
-      for (String partkeyval : outputTablePartitionString.split(" *, *")) {
-        String[] keyval = partkeyval.split(" *= *", 2);
-        if (keyval.length < 2) {
-          throw new IllegalArgumentException(
-              "Unrecognized partition value format: " +
-               outputTablePartitionString);
-        }
-        partitionValues.put(keyval[0], keyval[1]);
-        return partitionValues;
-      }
-    }
-    return null;
-  }
-
-  /**
-  *
-  * @param outputTablePartitionValues  output table partitions
-  * @return  String partition values
-  */
-  private static String serializePartitionValues(
-            Map<String, String> outputTablePartitionValues) {
-    StringBuilder outputTablePartitionValuesString = new StringBuilder();
-    for (Entry<String, String> partitionValueEntry : outputTablePartitionValues
-                .entrySet()) {
-      if (outputTablePartitionValuesString.length() != 0) {
-        outputTablePartitionValuesString.append(",");
-        outputTablePartitionValuesString
-                    .append(partitionValueEntry.getKey()).append("=")
-                    .append(partitionValueEntry.getValue());
-      }
-    }
-    return outputTablePartitionValuesString.toString();
-  }
-
   @Override
   public final Configuration getConf() {
     return conf;
@@ -458,9 +412,8 @@ protected void initGiraphJob(GiraphJob job) {
     }
     LOG.info(prefix + "-outputTable=" + outputTableName);
     if (outputTablePartitionValues != null) {
-      LOG.info(prefix + "-outputPartition=\""  +
-        serializePartitionValues(outputTablePartitionValues) +
-        "\"");
+      LOG.info(prefix + "-outputPartition=\"" +
+               outputTablePartitionValues + "\"");
     }
     LOG.info(prefix + "-workers=" + workers);
   }
