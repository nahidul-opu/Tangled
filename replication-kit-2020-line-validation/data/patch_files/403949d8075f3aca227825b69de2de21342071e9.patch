From 403949d8075f3aca227825b69de2de21342071e9 Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Sun, 4 Feb 2007 22:15:11 +0000
Subject: [PATCH] [IO-112] NPE in FileUtils.openOutputStream(File) when file
 has no parent in path.

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@503497 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/commons/io/FileUtils.java |  2 +-
 .../apache/commons/io/FileUtilsTestCase.java  | 30 +++++++++++++++++++
 .../io/testtools/FileBasedTestCase.java       |  8 ++---
 3 files changed, 34 insertions(+), 6 deletions(-)

diff --git a/src/java/org/apache/commons/io/FileUtils.java b/src/java/org/apache/commons/io/FileUtils.java
index 84c52a19b27..a15fb553e4a 100644
--- a/src/java/org/apache/commons/io/FileUtils.java
+++ b/src/java/org/apache/commons/io/FileUtils.java
@@ -169,7 +169,7 @@ public static FileOutputStream openOutputStream(File file) throws IOException {
             }
         } else {
             File parent = file.getParentFile();
-            if (parent.exists() == false) {
+            if (parent != null && parent.exists() == false) {
                 if (parent.mkdirs() == false) {
                     throw new IOException("File '" + file + "' could not be created");
                 }
diff --git a/src/test/org/apache/commons/io/FileUtilsTestCase.java b/src/test/org/apache/commons/io/FileUtilsTestCase.java
index 8dadf8f3a39..12e938e38ef 100644
--- a/src/test/org/apache/commons/io/FileUtilsTestCase.java
+++ b/src/test/org/apache/commons/io/FileUtilsTestCase.java
@@ -143,6 +143,36 @@ public void test_openInputStream_notExists() throws Exception {
     }
 
     //-----------------------------------------------------------------------
+    void openOutputStream_noParent(boolean createFile) throws Exception {
+        File file = new File("test.txt");
+        assertNull(file.getParentFile());
+        try {
+            if (createFile) {
+            createLineBasedFile(file, new String[]{"Hello"});}
+            FileOutputStream out = null;
+            try {
+                out = FileUtils.openOutputStream(file);
+                out.write(0);
+            } finally {
+                IOUtils.closeQuietly(out);
+            }
+            assertEquals(true, file.exists());
+        } finally {
+            if (file.delete() == false) {
+                file.deleteOnExit();
+            }
+        }
+    }
+
+    public void test_openOutputStream_noParentCreateFile() throws Exception {
+        openOutputStream_noParent(true);
+    }
+
+    public void test_openOutputStream_noParentNoFile() throws Exception {
+        openOutputStream_noParent(false);
+    }
+
+
     public void test_openOutputStream_exists() throws Exception {
         File file = new File(getTestDirectory(), "test.txt");
         createLineBasedFile(file, new String[] {"Hello"});
diff --git a/src/test/org/apache/commons/io/testtools/FileBasedTestCase.java b/src/test/org/apache/commons/io/testtools/FileBasedTestCase.java
index 6f9aed870d7..c0e991ce19a 100644
--- a/src/test/org/apache/commons/io/testtools/FileBasedTestCase.java
+++ b/src/test/org/apache/commons/io/testtools/FileBasedTestCase.java
@@ -93,12 +93,10 @@ protected void generateTestData(OutputStream out, long size)
     }
 
     protected void createLineBasedFile(File file, String[] data) throws IOException {
-        if (!file.getParentFile().exists()) {
-            throw new IOException("Cannot create file " + file
-                    + " as the parent directory does not exist");
+        if (file.getParentFile() != null && !file.getParentFile().exists()) {
+            throw new IOException("Cannot create file " + file + " as the parent directory does not exist");
         }
-        PrintWriter output = new PrintWriter(
-            new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));
+        PrintWriter output = new PrintWriter(new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));
         try {
             for (int i = 0; i < data.length; i++) {
                 output.println(data[i]);
