From e817603843bca75a1d29fa37fc60a65a3fde276b Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Sun, 8 Nov 2009 20:57:49 +0000
Subject: [PATCH] [CONFIGURATION-399] Updated user guide and changes report.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@833925 13f79535-47bb-0310-9956-ffa450edef68
---
 xdocs/changes.xml                       |  4 ++++
 xdocs/userguide/howto_basicfeatures.xml | 11 +++++++++--
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 89e3bf758f..57b2649a86 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -23,6 +23,10 @@
 
   <body>
     <release version="1.7" date="in SVN" description="">
+      <action dev="oheger" type="add" issue="CONFIGURATION-399">
+        Default variable interpolation now supports the env: prefix for
+        referencing environment variables.
+      </action>
       <action dev="rgoers" type="fix" issue="CONFIGURATION-397">
         Schema violation exceptions are now propagated back to the caller.
       </action>
diff --git a/xdocs/userguide/howto_basicfeatures.xml b/xdocs/userguide/howto_basicfeatures.xml
index 1bad2bb297..0af8ed1b1b 100644
--- a/xdocs/userguide/howto_basicfeatures.xml
+++ b/xdocs/userguide/howto_basicfeatures.xml
@@ -165,7 +165,7 @@ application.title = ${application.name} ${application.version}
       variables are interpreted as the keys of other properties. This is only a
       special case, the general syntax of a variable name is
       <code>${prefix:name}</code>. The prefix tells Commons Configuration that
-      the variable is to evaluated in a certain context. We have already seen
+      the variable is to be evaluated in a certain context. We have already seen
       that the context is the current configuration instance if the prefix is
       missing. The following other prefix names are supported by default:
       <table border="1">
@@ -190,6 +190,11 @@ application.title = ${application.name} ${application.version}
         specified class will be loaded and the value of this field will be
         obtained.</td>
       </tr>
+      <tr>
+        <td valign="top">env</td>
+        <td>Variables can also reference OS-specific environment properties.
+        This is indicated by the <code>env</code> prefix.</td>
+      </tr>
       </table>
       Here are some examples (again using properties syntax):
     </p>
@@ -197,6 +202,8 @@ application.title = ${application.name} ${application.version}
 user.file = ${sys:user.home}/settings.xml
 
 action.key = ${const:java.awt.event.KeyEvent.VK_CANCEL}
+
+java.home = ${env:JAVA_HOME}
 ]]></source>
     <p>
       If a variable cannot be resolved, e.g. because the name is invalid or an
@@ -204,7 +211,7 @@ action.key = ${const:java.awt.event.KeyEvent.VK_CANCEL}
       including the dollar sign and the curly braces.
     </p>
     </subsection>
-    
+
     <subsection name="Customizing interpolation">
     <p>
       This sub section goes a bit behind the scenes of interpolation and
