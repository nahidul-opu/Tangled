From 121cae778dcb63a4ca4f1ee2743e58bffcbfe4be Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Sun, 15 Feb 2015 22:49:01 +0000
Subject: [PATCH] COMPRESS-303 Restore immutability/thread-safety to
 CompressorStreamFactory.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1660002 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  5 ++
 .../compressors/CompressorStreamFactory.java  | 46 ++++++++++++++++++-
 2 files changed, 49 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index f981e249229..f676d7f53d0 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -54,6 +54,11 @@ breaks backwards compatibility for code which used the old package.
 This also changes the superclass of ZCompressorInputStream.    
 ">
 
+      <action issue="COMPRESS-303" type="fix">
+        Restore immutability/thread-safety to CompressorStreamFactory.
+        The class is now immutable provided that the method setDecompressConcatenated is not used.
+        The class is thread-safe.
+      </action>
       <action issue="COMPRESS-296" type="add" date="2014-01-10"
               due-to="Kristian Rosenvold">
         Added support for parallel compression. This low-level API allows
diff --git a/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java b/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java
index 22100568662..120dee9f9d6 100644
--- a/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java
+++ b/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java
@@ -62,7 +62,7 @@
  * IOUtils.copy(in, new FileOutputStream(output));
  * in.close();
  * </pre>
- * 
+ * @Immutable provided that the deprecated method setDecompressConcatenated is not used.
  */
 public class CompressorStreamFactory {
 
@@ -124,7 +124,44 @@ public class CompressorStreamFactory {
      */
     public static final String DEFLATE = "deflate";
 
-    private boolean decompressConcatenated = false;
+    /**
+     * If true, decompress until the end of the input.
+     * If false, stop after the first stream and leave the 
+     * input position to point to the next byte after the stream
+     */
+    private final Boolean decompressUntilEOF;
+    // This is Boolean so setDecompressConcatenated can determine whether it has been set by the ctor
+    // once the setDecompressConcatenated method has been removed, it can revert to boolean
+
+    /**
+     * If true, decompress until the end of the input.
+     * If false, stop after the first stream and leave the 
+     * input position to point to the next byte after the stream
+     */
+
+    private volatile boolean decompressConcatenated = false;
+
+    /**
+     * Create an instance with the decompress Concatenated option set to false.
+     */
+    public CompressorStreamFactory() {
+        this.decompressUntilEOF = null;  
+    }
+
+    /**
+     * Create an instance with the provided decompress Concatenated option.
+     * @param       decompressUntilEOF
+     *                          if true, decompress until the end of the
+     *                          input; if false, stop after the first
+     *                          stream and leave the input position to point
+     *                          to the next byte after the stream
+     * @since 1.10
+     */
+    public CompressorStreamFactory(boolean decompressUntilEOF) {
+        this.decompressUntilEOF = Boolean.valueOf(decompressUntilEOF);
+        // Also copy to existing variable so can continue to use that as the current value
+        this.decompressConcatenated = decompressUntilEOF;
+    }
 
     /**
      * Whether to decompress the full input or only the first stream
@@ -138,8 +175,13 @@ public class CompressorStreamFactory {
      *                          stream and leave the input position to point
      *                          to the next byte after the stream
      * @since 1.5
+     * @deprecated 1.10 use the {@link #CompressorStreamFactory(boolean)} constructor instead
      */
+    @Deprecated
     public void setDecompressConcatenated(boolean decompressConcatenated) {
+        if (this.decompressUntilEOF != null) {
+            throw new IllegalStateException("Cannot override the setting defined by the constructor");
+        }
         this.decompressConcatenated = decompressConcatenated;
     }
 
