From 484e1ee3f2d162a86b79bb66f7052bb3da2dee1a Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Wed, 25 Jun 2008 12:25:25 +0000
Subject: [PATCH] FIX: transitive attribute set to false because of dependency
 (IVY-105)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@671528 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 .../ivy/core/resolve/ResolveEngine.java       | 21 +++++++++-----
 .../apache/ivy/core/resolve/ResolveTest.java  | 20 +++++++++++++
 .../1/org2/mod2.7/ivys/ivy-0.6.xml            | 29 +++++++++++++++++++
 4 files changed, 63 insertions(+), 8 deletions(-)
 create mode 100644 test/repositories/1/org2/mod2.7/ivys/ivy-0.6.xml

diff --git a/CHANGES.txt b/CHANGES.txt
index 879293013..1c459e1cf 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -90,6 +90,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - IMPROVEMENT: Change allownomd and skipbuildwithoutivy into a more semantically correct name (IVY-297)
 - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher
 
+- FIX: transitive attribute set to false because of dependency (IVY-105)
 - FIX: Wrong check for defaultCacheArtifactPattern (IVY-840)
 - FIX: NPE in ivy:install if ivy.settings.xml contains custom attribute for a module (IVY-838)
 - FIX: Ivy unit tests fail because 'classifier' attribute of 'artifacts' element is missing in ivy.xsd (IVY-837)
diff --git a/src/java/org/apache/ivy/core/resolve/ResolveEngine.java b/src/java/org/apache/ivy/core/resolve/ResolveEngine.java
index 7a86476d6..5c9e1113d 100644
--- a/src/java/org/apache/ivy/core/resolve/ResolveEngine.java
+++ b/src/java/org/apache/ivy/core/resolve/ResolveEngine.java
@@ -49,7 +49,6 @@
 import org.apache.ivy.core.module.descriptor.DefaultModuleDescriptor;
 import org.apache.ivy.core.module.descriptor.DependencyDescriptor;
 import org.apache.ivy.core.module.descriptor.ModuleDescriptor;
-import org.apache.ivy.core.module.id.ModuleId;
 import org.apache.ivy.core.module.id.ModuleRevisionId;
 import org.apache.ivy.core.report.ArtifactDownloadReport;
 import org.apache.ivy.core.report.ConfigurationResolveReport;
@@ -707,6 +706,7 @@ private void doFetchDependencies(VisitNode node, String conf) {
                     fetchDependencies(dep, confs[i], false);
                 }
             }
+            markDependenciesFetched(node.getNode(), conf);
         }
         // we have finiched with this configuration, if it was the original requested conf
         // we can clean it now
@@ -726,15 +726,20 @@ private void doFetchDependencies(VisitNode node, String conf) {
      * @return true if we've already fetched this dependency
      */
     private boolean isDependenciesFetched(IvyNode node, String conf) {
-        ModuleId moduleId = node.getModuleId();
+        String key = getDependenciesFetchedKey(node, conf);
+        return fetchedSet.contains(key);
+    }
+    
+    private void markDependenciesFetched(IvyNode node, String conf) {
+        String key = getDependenciesFetchedKey(node, conf);
+        fetchedSet.add(key);
+    }
+
+    private String getDependenciesFetchedKey(IvyNode node, String conf) {
         ModuleRevisionId moduleRevisionId = node.getResolvedId();
-        String key = moduleId.getOrganisation() + "|" + moduleId.getName() + "|"
+        String key = moduleRevisionId.getOrganisation() + "|" + moduleRevisionId.getName() + "|"
                 + moduleRevisionId.getRevision() + "|" + conf;
-        if (fetchedSet.contains(key)) {
-            return true;
-        }
-        fetchedSet.add(key);
-        return false;
+        return key;
     }
 
     private void resolveConflict(VisitNode node, String conf) {
diff --git a/test/java/org/apache/ivy/core/resolve/ResolveTest.java b/test/java/org/apache/ivy/core/resolve/ResolveTest.java
index c46391f23..51f146d32 100644
--- a/test/java/org/apache/ivy/core/resolve/ResolveTest.java
+++ b/test/java/org/apache/ivy/core/resolve/ResolveTest.java
@@ -3002,6 +3002,26 @@ public void testTransitiveSetting() throws Exception {
         assertTrue(!getArchiveFileInCache("org1", "mod1.2", "2.0", "mod1.2", "jar", "jar").exists());
     }
 
+    public void testTransitiveSetting2() throws Exception {
+        // test case for IVY-105
+        // mod2.7 depends on mod1.1 and mod2.4
+        // mod2.4 depends on mod1.1 with transitive set to false
+        // mod1.1 depends on mod1.2
+        ResolveReport report = ivy.resolve(new File(
+                "test/repositories/1/org2/mod2.7/ivys/ivy-0.6.xml").toURL(),
+            getResolveOptions(new String[] {"*"}));
+        assertFalse(report.hasError());
+
+        // dependencies
+        assertTrue(getIvyFileInCache(
+            ModuleRevisionId.newInstance("org1", "mod1.1", "1.0")).exists());
+        assertTrue(getArchiveFileInCache("org1", "mod1.1", "1.0", "mod1.1", "jar", "jar").exists());
+
+        assertTrue(getIvyFileInCache(
+            ModuleRevisionId.newInstance("org1", "mod1.2", "2.0")).exists());
+        assertTrue(getArchiveFileInCache("org1", "mod1.2", "2.0", "mod1.2", "jar", "jar").exists());
+    }
+
     public void testResolverDirectlyUsingCache() throws Exception {
         Ivy ivy = new Ivy();
         ivy.configure(ResolveTest.class.getResource("badcacheconf.xml"));
diff --git a/test/repositories/1/org2/mod2.7/ivys/ivy-0.6.xml b/test/repositories/1/org2/mod2.7/ivys/ivy-0.6.xml
new file mode 100644
index 000000000..07148a7c5
--- /dev/null
+++ b/test/repositories/1/org2/mod2.7/ivys/ivy-0.6.xml
@@ -0,0 +1,29 @@
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one
+   or more contributor license agreements.  See the NOTICE file
+   distributed with this work for additional information
+   regarding copyright ownership.  The ASF licenses this file
+   to you under the Apache License, Version 2.0 (the
+   "License"); you may not use this file except in compliance
+   with the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing,
+   software distributed under the License is distributed on an
+   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+   KIND, either express or implied.  See the License for the
+   specific language governing permissions and limitations
+   under the License.    
+-->
+<ivy-module version="1.0">
+	<info organisation="org2"
+	       module="mod2.7"
+	       revision="0.6"
+	       status="integration"
+	/>
+	<dependencies>
+		<dependency name="mod2.4" rev="0.3"/>
+		<dependency org="org1" name="mod1.1" rev="1.0" />
+	</dependencies>
+</ivy-module>
