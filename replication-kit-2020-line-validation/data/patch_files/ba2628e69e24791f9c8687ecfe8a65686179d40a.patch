From ba2628e69e24791f9c8687ecfe8a65686179d40a Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Wed, 20 Apr 2011 20:07:31 +0000
Subject: [PATCH] [CONFIGURATION-446] Attributes whose value is an empty string
 are no more removed on saving the configuration.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@1095498 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                         |  4 ++++
 .../commons/configuration/XMLConfiguration.java |  4 +++-
 .../configuration/TestXMLConfiguration.java     | 17 +++++++++++++++++
 3 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 5f66bcae42..59bfe85e27 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -23,6 +23,10 @@
 
   <body>
     <release version="1.7" date="in SVN" description="">
+      <action dev="oheger" type="update" issue="CONFIGURATION-446">
+        XMLConfiguration now handles attributes correctly whose value is an
+        empty string.
+      </action>
       <action dev="oheger" type="fix" issue="CONFIGURATION-445">
         Transforming a CombinedConfiguration with ViewNodes to an
         XMLConfiguration could cause problems with attributes. This has been
diff --git a/src/java/org/apache/commons/configuration/XMLConfiguration.java b/src/java/org/apache/commons/configuration/XMLConfiguration.java
index 44cc1c8038..cdfd0eefb6 100644
--- a/src/java/org/apache/commons/configuration/XMLConfiguration.java
+++ b/src/java/org/apache/commons/configuration/XMLConfiguration.java
@@ -1498,6 +1498,7 @@ private static void updateAttribute(Node node, Element elem, String name, char l
         {
             if (node != null && elem != null)
             {
+                boolean hasAttribute = false;
                 List attrs = node.getAttributes(name);
                 StringBuffer buf = new StringBuffer();
                 char delimiter = (listDelimiter != 0) ? listDelimiter : ATTR_VALUE_DELIMITER;
@@ -1506,6 +1507,7 @@ private static void updateAttribute(Node node, Element elem, String name, char l
                     Node attr = (Node) it.next();
                     if (attr.getValue() != null)
                     {
+                        hasAttribute = true;
                         if (buf.length() > 0)
                         {
                             buf.append(delimiter);
@@ -1518,7 +1520,7 @@ private static void updateAttribute(Node node, Element elem, String name, char l
                     attr.setReference(elem);
                 }
 
-                if (buf.length() < 1)
+                if (!hasAttribute)
                 {
                     elem.removeAttribute(name);
                 }
diff --git a/src/test/org/apache/commons/configuration/TestXMLConfiguration.java b/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
index 4db4dfc235..94e5b5a837 100644
--- a/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestXMLConfiguration.java
@@ -1740,6 +1740,23 @@ public void run()
         }
     }
 
+    /**
+     * Tests whether an attribute can be set to an empty string. This test is
+     * related to CONFIGURATION-446.
+     */
+    public void testEmptyAttribute() throws ConfigurationException
+    {
+        String key = "element3[@value]";
+        conf.setProperty(key, "");
+        assertTrue("Key not found", conf.containsKey(key));
+        assertEquals("Wrong value", "", conf.getString(key));
+        conf.save(testSaveConf);
+        conf = new XMLConfiguration();
+        conf.load(testSaveConf);
+        assertTrue("Key not found after save", conf.containsKey(key));
+        assertEquals("Wrong value after save", "", conf.getString(key));
+    }
+
     /**
      * Prepares a configuration object for testing a reload operation.
      *
