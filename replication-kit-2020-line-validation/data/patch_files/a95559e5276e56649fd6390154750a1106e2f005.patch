From a95559e5276e56649fd6390154750a1106e2f005 Mon Sep 17 00:00:00 2001
From: "Gary D. Gregory" <ggregory@apache.org>
Date: Sun, 19 Mar 2017 08:51:27 +0000
Subject: [PATCH] [VFS-620] FileObject.moveTo(FileObject) API doesn't work well
 for a Linux FTP.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1787594 13f79535-47bb-0310-9956-ffa450edef68
---
 .../vfs2/provider/ftp/FtpFileObject.java      |  4 +-
 .../ftp/test/FtpProviderTestCase.java         | 49 +++++++++-
 .../ftp/test/FtpProviderUserDirTestCase.java  | 97 +++++++++++++++++++
 .../ftp/test/MultipleConnectionTestCase.java  |  2 +-
 src/changes/changes.xml                       |  3 +
 5 files changed, 147 insertions(+), 8 deletions(-)
 create mode 100644 core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/FtpProviderUserDirTestCase.java

diff --git a/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileObject.java b/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileObject.java
index 9fb62bebae..9c124aafe1 100644
--- a/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileObject.java
+++ b/core/src/main/java/org/apache/commons/vfs2/provider/ftp/FtpFileObject.java
@@ -509,8 +509,8 @@ protected void doRename(final FileObject newFile) throws Exception
             final FtpClient ftpClient = getAbstractFileSystem().getClient();
             try
             {
-                final String oldName = getName().getPath();
-                final String newName = newFile.getName().getPath();
+                final String oldName = relPath;
+                final String newName = ((FtpFileObject) FileObjectUtils.getAbstractFileObject(newFile)).getRelPath();
                 ok = ftpClient.rename(oldName, newName);
             }
             finally
diff --git a/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/FtpProviderTestCase.java b/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/FtpProviderTestCase.java
index a9489eadc1..f076dc35f6 100644
--- a/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/FtpProviderTestCase.java
+++ b/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/FtpProviderTestCase.java
@@ -34,6 +34,7 @@
 import org.apache.commons.vfs2.util.FreeSocketPortUtil;
 import org.apache.ftpserver.FtpServer;
 import org.apache.ftpserver.FtpServerFactory;
+import org.apache.ftpserver.ftplet.FileSystemFactory;
 import org.apache.ftpserver.ftplet.FtpException;
 import org.apache.ftpserver.ftplet.UserManager;
 import org.apache.ftpserver.listener.ListenerFactory;
@@ -83,11 +84,12 @@ static void init() throws IOException
 
     /**
      * Creates and starts an embedded Apache FTP Server (MINA).
-     *
+     * @param rootDirectory the local FTP server rootDirectory
+     * @param fileSystemFactory optional local FTP server FileSystemFactory
      * @throws FtpException
      * @throws IOException
      */
-    static void setUpClass() throws FtpException, IOException
+    static void setUpClass(String rootDirectory, FileSystemFactory fileSystemFactory) throws FtpException, IOException
     {
         if (Server != null)
         {
@@ -103,8 +105,12 @@ static void setUpClass() throws FtpException, IOException
         final BaseUser user = (BaseUser) userManager.getUserByName("test");
         // Pickup the home dir value at runtime even though we have it set in the user prop file
         // The user prop file requires the "homedirectory" to be set
-        user.setHomeDirectory(getTestDirectory());
+        user.setHomeDirectory(rootDirectory);
+        userManager.save(user);
         serverFactory.setUserManager(userManager);
+        if (fileSystemFactory != null) {
+            serverFactory.setFileSystem(fileSystemFactory);
+        }
         final ListenerFactory factory = new ListenerFactory();
         // set the port of the listener
         factory.setPort(SocketPort);
@@ -122,14 +128,22 @@ static void setUpClass() throws FtpException, IOException
      */
     public static Test suite() throws Exception
     {
-        return new ProviderTestSuite(new FtpProviderTestCase())
+        return suite(new FtpProviderTestCase());
+    }
+
+    /**
+     * Creates the test suite for subclasses of the ftp file system.
+     */
+    protected static Test suite(final FtpProviderTestCase testCase) throws Exception
+    {
+        return new ProviderTestSuite(testCase)
         {
             @Override
             protected void setUp() throws Exception
             {
                 if (getSystemTestUriOverride() == null)
                 {
-                    setUpClass();
+                    setUpClass(testCase.getFtpRootDir(), testCase.getFtpFileSystem());
                 }
                 super.setUp();
             }
@@ -176,6 +190,7 @@ public FileObject getBaseTestFolder(final FileSystemManager manager) throws Exce
         }
         final FileSystemOptions opts = new FileSystemOptions();
         final FtpFileSystemConfigBuilder builder = FtpFileSystemConfigBuilder.getInstance();
+        builder.setUserDirIsRoot(opts, getUserDirIsRoot());
         builder.setPassiveMode(opts, true);
         // FtpFileType.BINARY is the default
         builder.setFileType(opts, FtpFileType.BINARY);
@@ -184,6 +199,30 @@ public FileObject getBaseTestFolder(final FileSystemManager manager) throws Exce
         return manager.resolveFile(uri, opts);
     }
 
+    /**
+     * Gets the setting for UserDirIsRoot.
+     */
+    protected boolean getUserDirIsRoot()
+    {
+        return false;
+    }
+
+    /**
+     * Gets option file system factory for local FTP server.
+     */
+    protected FileSystemFactory getFtpFileSystem() throws IOException {
+        // use default
+        return null;
+    }
+
+    /**
+     * Gets the root of the local FTP Server file system.
+     */
+    protected String getFtpRootDir()
+    {
+        return getTestDirectory();
+    }
+
     /**
      * Prepares the file system manager.
      */
diff --git a/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/FtpProviderUserDirTestCase.java b/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/FtpProviderUserDirTestCase.java
new file mode 100644
index 0000000000..297445b912
--- /dev/null
+++ b/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/FtpProviderUserDirTestCase.java
@@ -0,0 +1,97 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.commons.vfs2.provider.ftp.test;
+
+import junit.framework.Test;
+import org.apache.commons.io.FileUtils;
+import org.apache.ftpserver.filesystem.nativefs.NativeFileSystemFactory;
+import org.apache.ftpserver.ftplet.FileSystemFactory;
+import org.apache.ftpserver.ftplet.FileSystemView;
+import org.apache.ftpserver.ftplet.FtpException;
+import org.apache.ftpserver.ftplet.User;
+
+import java.io.File;
+import java.io.FileFilter;
+import java.io.IOException;
+
+/**
+ * Tests for FTP file systems (with homeDirIsRoot=true).
+ */
+public class FtpProviderUserDirTestCase extends FtpProviderTestCase
+{
+    /**
+     * Creates the test suite for the ftp file system.
+     */
+    public static Test suite() throws Exception
+    {
+        return suite(new FtpProviderUserDirTestCase());
+    }
+
+    /**
+     * Prepares the file system manager.
+     */
+    @Override
+    protected boolean getUserDirIsRoot()
+    {
+        return true;
+    }
+
+    /**
+     * Gets option file system factory for local FTP server.
+     */
+    @Override
+    protected FileSystemFactory getFtpFileSystem() throws IOException {
+        // simulate a non-root home directory by copying test directory to it
+        final File testDir =  new File(getTestDirectory());
+        final File rootDir = new File(testDir, "homeDirIsRoot");
+        final File homesDir = new File(rootDir, "home");
+        final File initialDir = new File(homesDir, "test");
+        FileUtils.deleteDirectory(rootDir);
+        //noinspection ResultOfMethodCallIgnored
+        rootDir.mkdir();
+        FileUtils.copyDirectory(testDir, initialDir, new FileFilter()
+        {
+            @Override
+            public boolean accept(File pathname)
+            {
+                return !pathname.getPath().contains(rootDir.getName());
+            }
+        });
+
+        return new NativeFileSystemFactory()
+        {
+            @Override
+            public FileSystemView createFileSystemView(User user) throws FtpException
+            {
+                FileSystemView fsView = super.createFileSystemView(user);
+                fsView.changeWorkingDirectory("home/test");
+                return fsView;
+            }
+        };
+    }
+
+    /**
+     * Gets the root of the local FTP Server file system.
+     */
+    @Override
+    protected String getFtpRootDir()
+    {
+        return new File(getTestDirectory(), "homeDirIsRoot").getPath();
+    }
+
+
+}
diff --git a/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/MultipleConnectionTestCase.java b/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/MultipleConnectionTestCase.java
index 307635065d..8e816cec19 100644
--- a/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/MultipleConnectionTestCase.java
+++ b/core/src/test/java/org/apache/commons/vfs2/provider/ftp/test/MultipleConnectionTestCase.java
@@ -35,7 +35,7 @@ public class MultipleConnectionTestCase
     @BeforeClass
     public static void setUpClass() throws FtpException, IOException
     {
-        FtpProviderTestCase.setUpClass();
+        FtpProviderTestCase.setUpClass(FtpProviderTestCase.getTestDirectory(), null);
     }
 
     @AfterClass
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index f37c925d35..e1b435605c 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -65,6 +65,9 @@ The <action> type attribute can be add,update,fix,remove.
      <action issue="VFS-621" dev="ggregory" type="update">
         Add API VFS.setManager(FileSystemManager).
      </action>
+     <action issue="VFS-620" dev="ggregory" type="fix" due-to="stevezhuang">
+        FileObject.moveTo(FileObject) API doesn't work well for a Linux FTP.
+     </action>
    </release>  
     <release version="2.1" date="2016-05-19" description="New features and bug fix release.
 
