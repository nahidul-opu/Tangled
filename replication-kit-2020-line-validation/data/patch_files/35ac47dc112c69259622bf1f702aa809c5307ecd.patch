From 35ac47dc112c69259622bf1f702aa809c5307ecd Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 13 Aug 2015 21:21:12 +0000
Subject: [PATCH] BCEL-208 Need to check for an empty InstructionList

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1695781 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  1 +
 .../bcel6/generic/LocalVariableGen.java       | 12 +++--
 .../commons/bcel6/generic/MethodGen.java      |  4 +-
 .../apache/commons/bcel6/PLSETestCase.java    | 46 +++++++++++++++++++
 .../commons/bcel6/data/PLSETestClass.java     | 28 +++++++++++
 5 files changed, 85 insertions(+), 6 deletions(-)
 create mode 100644 src/test/java/org/apache/commons/bcel6/PLSETestCase.java
 create mode 100644 src/test/java/org/apache/commons/bcel6/data/PLSETestClass.java

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index a60f3c1612..63975a8ce5 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -63,6 +63,7 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="6.0" date="TBA" description="Major release with Java 7 and 8 support">
+      <action issue="BCEL-208" type=fix>Need to check for an empty InstructionList</action>
       <action issue="BCEL-212" type="update">Inconsistent toString() results</action>
       <action issue="BCEL-217" type="fix">long type instructions are not searched by InstructionFinder using regular expression</action>
       <action issue="BCEL-244" type="update" dev="ggregory">Update Java requirement from 5 to 7</action>
diff --git a/src/main/java/org/apache/commons/bcel6/generic/LocalVariableGen.java b/src/main/java/org/apache/commons/bcel6/generic/LocalVariableGen.java
index 492b710b26..b53dd025a8 100644
--- a/src/main/java/org/apache/commons/bcel6/generic/LocalVariableGen.java
+++ b/src/main/java/org/apache/commons/bcel6/generic/LocalVariableGen.java
@@ -78,10 +78,14 @@ public LocalVariableGen(int index, String name, Type type, InstructionHandle sta
      * @param cp constant pool
      */
     public LocalVariable getLocalVariable( ConstantPoolGen cp ) {
-        int start_pc = start.getPosition();
-        int length = end.getPosition() - start_pc;
-        if (end.getNext() == null) {
-            length += end.getInstruction().getLength();
+        int start_pc = 0;
+        int length = 0;
+        if ((start != null) && (end != null)) {
+            start_pc = start.getPosition();
+            length = end.getPosition() - start_pc;
+            if (end.getNext() == null) {
+                length += end.getInstruction().getLength();
+            }
         }
         int name_index = cp.addUtf8(name);
         int signature_index = cp.addUtf8(type.getSignature());
diff --git a/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java b/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java
index 1c84e329c3..8d45ea2ecf 100644
--- a/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java
+++ b/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java
@@ -360,10 +360,10 @@ public LocalVariableGen[] getLocalVariables() {
         LocalVariableGen[] lg = new LocalVariableGen[size];
         variable_vec.toArray(lg);
         for (int i = 0; i < size; i++) {
-            if (lg[i].getStart() == null) {
+            if ((lg[i].getStart() == null) && (il != null)) {
                 lg[i].setStart(il.getStart());
             }
-            if (lg[i].getEnd() == null) {
+            if ((lg[i].getEnd() == null) && (il != null)) {
                 lg[i].setEnd(il.getEnd());
             }
         }
diff --git a/src/test/java/org/apache/commons/bcel6/PLSETestCase.java b/src/test/java/org/apache/commons/bcel6/PLSETestCase.java
new file mode 100644
index 0000000000..17303cac9b
--- /dev/null
+++ b/src/test/java/org/apache/commons/bcel6/PLSETestCase.java
@@ -0,0 +1,46 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * 
+ */
+
+package org.apache.commons.bcel6;
+
+import org.apache.commons.bcel6.classfile.JavaClass;
+import org.apache.commons.bcel6.classfile.Method;
+import org.apache.commons.bcel6.generic.ClassGen;
+import org.apache.commons.bcel6.generic.ConstantPoolGen;
+import org.apache.commons.bcel6.generic.MethodGen;
+import org.apache.commons.bcel6.generic.Type;
+
+public class PLSETestCase extends AbstractTestCase
+{
+    /**
+     * BCEL-208: A couple of methods in MethodGen.java need to test for
+     * an empty instruction list.
+     */
+    public void testB208() throws ClassNotFoundException
+    {
+        JavaClass clazz = getTestClass("org.apache.commons.bcel6.data.PLSETestClass");
+        ClassGen gen = new ClassGen(clazz);
+        ConstantPoolGen pool = gen.getConstantPool();
+        Method m = gen.getMethodAt(1);
+        MethodGen mg = new MethodGen(m, gen.getClassName(), pool);
+        mg.setInstructionList(null);
+        mg.addLocalVariable("local2", Type.INT, null, null);
+        // currently, this will cause null pointer exception
+        mg.getLocalVariableTable(pool);
+    }
+}
diff --git a/src/test/java/org/apache/commons/bcel6/data/PLSETestClass.java b/src/test/java/org/apache/commons/bcel6/data/PLSETestClass.java
new file mode 100644
index 0000000000..1f1a79b445
--- /dev/null
+++ b/src/test/java/org/apache/commons/bcel6/data/PLSETestClass.java
@@ -0,0 +1,28 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * 
+ */
+
+package org.apache.commons.bcel6.data;
+
+public class PLSETestClass
+{
+    public void meth1(int arg1)
+    {
+        @SuppressWarnings("unused")
+        int local1 = arg1;
+    }
+}
