From bef3eb6ed060d5ae14da6ce5a1909675b8cf5650 Mon Sep 17 00:00:00 2001
From: Henri Yandell <bayard@apache.org>
Date: Tue, 22 Jun 2010 06:34:18 +0000
Subject: [PATCH] Adding a test, and code fix, to have supplementary chars
 working in numeric entity unescaping. See LANG-617

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@956787 13f79535-47bb-0310-9956-ffa450edef68
---
 .../translate/NumericEntityUnescaper.java     |  9 +++--
 .../translate/NumericEntityUnescaperTest.java | 36 +++++++++++++++++++
 2 files changed, 43 insertions(+), 2 deletions(-)
 create mode 100644 src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java

diff --git a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
index 12a066387bf..a21671a7874 100644
--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
@@ -60,8 +60,13 @@ public int translate(CharSequence input, int index, Writer out) throws IOExcepti
                 return 0;
             }
 
-            // TODO: if(entityValue > 0xFFFF) {
-            out.write(entityValue);
+            if(entityValue > 0xFFFF) {
+                char[] chrs = Character.toChars(entityValue);
+                out.write(chrs[0]);
+                out.write(chrs[1]);
+            } else {
+                out.write(entityValue);
+            }
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
diff --git a/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java b/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java
new file mode 100644
index 00000000000..3ea7138a7d2
--- /dev/null
+++ b/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java
@@ -0,0 +1,36 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.lang3.text.translate;
+
+import junit.framework.TestCase;
+
+/**
+ * Unit tests for {@link org.apache.commons.lang3.text.translate.NumericEntityUnescaper}.
+ */
+public class NumericEntityUnescaperTest extends TestCase {
+
+    public void testSupplementaryUnescaping() {
+        NumericEntityUnescaper neu = new NumericEntityUnescaper();
+        String input = "&#68642;";
+        String expected = "\uD803\uDC22";
+
+        String result = neu.translate(input);
+        assertEquals("Failed to unescape numeric entities supplementary characters", expected, result);
+    }
+
+}
