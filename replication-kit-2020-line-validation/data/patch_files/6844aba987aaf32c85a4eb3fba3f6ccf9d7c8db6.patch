From 6844aba987aaf32c85a4eb3fba3f6ccf9d7c8db6 Mon Sep 17 00:00:00 2001
From: Gilles Sadowski <erans@apache.org>
Date: Mon, 26 Nov 2012 23:02:29 +0000
Subject: [PATCH] MATH-904. Fixed wrong assumption in "pow" method.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413916 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                |  3 +++
 .../java/org/apache/commons/math3/util/FastMath.java   |  4 +++-
 .../org/apache/commons/math3/util/FastMathTest.java    | 10 ++++++++++
 3 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index dac6929773..7ee686e97c 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -52,6 +52,9 @@ If the output is not quite correct, check for invisible trailing spaces!
   <body>
     <release version="3.1" date="TBD" description="
 ">
+      <action dev="erans" type="fix" issue="MATH-904" due-to="Jeff Hain">
+        Fixed "pow" method in class "FastMath".
+      </action>
       <action dev="erans" type="update" issue="MATH-902" due-to="Bruce A. Johnson">
         Created a "maximum number of iterations" stopping criterion in the
         convergence checkers (package "o.a.c.m.optimization") that allows the
diff --git a/src/main/java/org/apache/commons/math3/util/FastMath.java b/src/main/java/org/apache/commons/math3/util/FastMath.java
index fd1ce2d859..9dc84c6311 100644
--- a/src/main/java/org/apache/commons/math3/util/FastMath.java
+++ b/src/main/java/org/apache/commons/math3/util/FastMath.java
@@ -309,6 +309,8 @@ public class FastMath {
 
     /** 2^52 - double numbers this large must be integral (no fraction) or NaN or Infinite */
     private static final double TWO_POWER_52 = 4503599627370496.0;
+    /** 2^53 - double numbers this large must be even. */
+    private static final double TWO_POWER_53 = 2 * TWO_POWER_52;
 
     /** Constant: {@value}. */
     private static final double F_1_3 = 1d / 3d;
@@ -1537,7 +1539,7 @@ public static double pow(double x, double y) {
         /* Handle special case x<0 */
         if (x < 0) {
             // y is an even integer in this case
-            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {
+            if (y >= TWO_POWER_53 || y <= -TWO_POWER_53) {
                 return pow(-x, y);
             }
 
diff --git a/src/test/java/org/apache/commons/math3/util/FastMathTest.java b/src/test/java/org/apache/commons/math3/util/FastMathTest.java
index 282e7b299a..aee304e756 100644
--- a/src/test/java/org/apache/commons/math3/util/FastMathTest.java
+++ b/src/test/java/org/apache/commons/math3/util/FastMathTest.java
@@ -157,6 +157,16 @@ public void testHyperbolic() {
 
     }
 
+    @Test
+    public void testMath904() {
+        final double x = -1;
+        final double y = (5 + 1e-15) * 1e15;
+        Assert.assertEquals(Math.pow(x, y),
+                            FastMath.pow(x, y), 0);
+        Assert.assertEquals(Math.pow(x, -y),
+                            FastMath.pow(x, -y), 0);
+    }
+
     @Test
     public void testMath905LargePositive() {
         final double start = StrictMath.log(Double.MAX_VALUE);
