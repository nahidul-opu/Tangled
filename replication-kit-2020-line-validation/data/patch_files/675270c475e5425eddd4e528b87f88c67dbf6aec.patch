From 675270c475e5425eddd4e528b87f88c67dbf6aec Mon Sep 17 00:00:00 2001
From: Scokart Gilles <gscokart@apache.org>
Date: Fri, 7 Mar 2008 13:41:13 +0000
Subject: [PATCH] IVY-759 : cachefileset doesn't support directory name
 starting with the same characters

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@634670 13f79535-47bb-0310-9956-ffa450edef68
---
 .../org/apache/ivy/ant/IvyCacheFileset.java   | 36 +++++++++++++------
 .../apache/ivy/ant/IvyCacheFilesetTest.java   | 12 +++++++
 2 files changed, 37 insertions(+), 11 deletions(-)

diff --git a/src/java/org/apache/ivy/ant/IvyCacheFileset.java b/src/java/org/apache/ivy/ant/IvyCacheFileset.java
index c1a3bfc32..ee8f30d2d 100644
--- a/src/java/org/apache/ivy/ant/IvyCacheFileset.java
+++ b/src/java/org/apache/ivy/ant/IvyCacheFileset.java
@@ -19,6 +19,7 @@
 
 import java.io.File;
 import java.util.Iterator;
+import java.util.LinkedList;
 import java.util.List;
 
 import org.apache.ivy.core.report.ArtifactDownloadReport;
@@ -110,22 +111,35 @@ private String getPath(File base, File file) {
      *            the file for which the new base directory should be returned.
      * @return the common base directory between a current base directory and a given file.
      */
-    private File getBaseDir(File base, File file) {
+    File getBaseDir(File base, File file) {
         if (base == null) {
-            return file.getParentFile();
+            return file.getParentFile().getAbsoluteFile();
         } else {
-            String basePath = base.getAbsolutePath();
-            String filePath = file.getAbsolutePath();
-            for (int i = 0; i < basePath.length(); i++) {
-                if (i >= filePath.length()) {
-                    return file.getParentFile();
-                }
-                if (basePath.charAt(i) != filePath.charAt(i)) {
-                    return new File(basePath.substring(0, i));
+            Iterator bases = getParents(base).iterator();
+            Iterator fileParents = getParents(file.getAbsoluteFile()).iterator();
+            File result = null;
+            while (bases.hasNext() && fileParents.hasNext()) {
+                File next = (File) bases.next();
+                if (next.equals(fileParents.next())) {
+                    result = next; 
+                } else {
+                    break;
                 }
             }
-            return base;
+            return result;
+        }
+    }
+
+    /**
+     * @return a list of files, starting with the root and ending with the file itself
+     */
+    private LinkedList/*<File>*/ getParents(File file) {
+        LinkedList r = new LinkedList();
+        while (file != null) {
+            r.addFirst(file);
+            file = file.getParentFile();
         }
+        return r;
     }
 
 }
diff --git a/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java b/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java
index 2ce44a411..f7a058640 100644
--- a/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java
+++ b/test/java/org/apache/ivy/ant/IvyCacheFilesetTest.java
@@ -162,4 +162,16 @@ public void testWithoutPreviousResolveAndNonDefaultCache() throws Exception {
         }
     }
 
+    
+    public void testGetBaseDir() {
+        File base = null;
+        base = fileset.getBaseDir(base, new File("x/aa/b/c"));
+        assertEquals(new File("x/aa/b").getAbsoluteFile(), base);
+        
+        base = fileset.getBaseDir(base, new File("x/aa/b/d/e"));
+        assertEquals(new File("x/aa/b").getAbsoluteFile(), base);
+        
+        base = fileset.getBaseDir(base, new File("x/ab/b/d"));
+        assertEquals(new File("x").getAbsoluteFile(), base);
+    }
 }
