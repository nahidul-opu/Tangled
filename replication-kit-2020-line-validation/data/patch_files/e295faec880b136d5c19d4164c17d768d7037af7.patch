From e295faec880b136d5c19d4164c17d768d7037af7 Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Wed, 29 Sep 2010 18:13:37 +0000
Subject: [PATCH] IO-190 FileUtils copyDirectory preserves destination
 subdirectories, rather than overwriting with the source subdirectories -
 thanks to Jukka for the pacth

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1002796 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/commons/io/FileUtils.java |  8 +--
 .../apache/commons/io/FileUtilsTestCase.java  | 51 +++++++++++++++++++
 2 files changed, 56 insertions(+), 3 deletions(-)

diff --git a/src/java/org/apache/commons/io/FileUtils.java b/src/java/org/apache/commons/io/FileUtils.java
index ff06ec38383..a64b54a2b58 100644
--- a/src/java/org/apache/commons/io/FileUtils.java
+++ b/src/java/org/apache/commons/io/FileUtils.java
@@ -1081,9 +1081,6 @@ private static void doCopyDirectory(File srcDir, File destDir, FileFilter filter
             if (destDir.mkdirs() == false) {
                 throw new IOException("Destination '" + destDir + "' directory cannot be created");
             }
-            if (preserveFileDate) {
-                destDir.setLastModified(srcDir.lastModified());
-            }
         }
         if (destDir.canWrite() == false) {
             throw new IOException("Destination '" + destDir + "' cannot be written to");
@@ -1098,6 +1095,11 @@ private static void doCopyDirectory(File srcDir, File destDir, FileFilter filter
                 }
             }
         }
+
+        // Do this last, as the above has probably affected directory metadata
+        if (preserveFileDate) {
+            destDir.setLastModified(srcDir.lastModified());
+        }
     }
 
     //-----------------------------------------------------------------------
diff --git a/src/test/org/apache/commons/io/FileUtilsTestCase.java b/src/test/org/apache/commons/io/FileUtilsTestCase.java
index 26d8cef1191..22cbcbeb9c4 100644
--- a/src/test/org/apache/commons/io/FileUtilsTestCase.java
+++ b/src/test/org/apache/commons/io/FileUtilsTestCase.java
@@ -906,6 +906,57 @@ public void testCopyDirectoryFiltered() throws Exception {
         assertEquals("file3.txt", files.get(2).getName());
    }
 
+    public void testCopyDirectoryPreserveDates() throws Exception {
+        File source = new File(getTestDirectory(), "source");
+        File sourceDirectory = new File(source, "directory");
+        File sourceFile = new File(sourceDirectory, "hello.txt");
+
+        // Prepare source data
+        source.mkdirs();
+        sourceDirectory.mkdir();
+        FileUtils.writeStringToFile(sourceFile, "HELLO WORLD", "UTF8");
+        // Set dates in reverse order to avoid overwriting previous values
+        // Also, use full seconds (arguments are in ms) close to today
+        // but still highly unlikely to occur in the real world
+        sourceFile.setLastModified(1000000002000L);
+        sourceDirectory.setLastModified(1000000001000L);
+        source.setLastModified(1000000000000L);
+
+        File target = new File(getTestDirectory(), "target");
+        File targetDirectory = new File(target, "directory");
+        File targetFile = new File(targetDirectory, "hello.txt");
+
+        // Test with preserveFileDate disabled
+        FileUtils.copyDirectory(source, target, false);
+        assertTrue(1000000000000L != target.lastModified());
+        assertTrue(1000000001000L != targetDirectory.lastModified());
+        assertTrue(1000000002000L != targetFile.lastModified());
+        FileUtils.deleteDirectory(target);
+
+        // Test with preserveFileDate enabled
+        FileUtils.copyDirectory(source, target, true);
+        assertEquals(1000000000000L, target.lastModified());
+        assertEquals(1000000001000L, targetDirectory.lastModified());
+        assertEquals(1000000002000L, targetFile.lastModified());
+        FileUtils.deleteDirectory(target);
+
+        // also if the target directory already exists (IO-190)
+        target.mkdirs();
+        FileUtils.copyDirectory(source, target, true);
+        assertEquals(1000000000000L, target.lastModified());
+        assertEquals(1000000001000L, targetDirectory.lastModified());
+        assertEquals(1000000002000L, targetFile.lastModified());
+        FileUtils.deleteDirectory(target);
+
+        // also if the target subdirectory already exists (IO-190)
+        targetDirectory.mkdirs();
+        FileUtils.copyDirectory(source, target, true);
+        assertEquals(1000000000000L, target.lastModified());
+        assertEquals(1000000001000L, targetDirectory.lastModified());
+        assertEquals(1000000002000L, targetFile.lastModified());
+        FileUtils.deleteDirectory(target);
+    }
+
     /** Test for IO-141 */
     public void testCopyDirectoryToChild() throws Exception {
         File grandParentDir = new File(getTestDirectory(), "grandparent");
