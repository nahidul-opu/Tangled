From 4a759eadd1825dd7345df06500251c7f5c17623f Mon Sep 17 00:00:00 2001
From: Rahul Akolkar <rahul@apache.org>
Date: Fri, 21 Nov 2008 21:56:21 +0000
Subject: [PATCH] Porting r719725 from trunk. Support initial attribute of
 <state> SCXML-86

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/scxml/branches/J6@719728 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/scxml/io/SCXMLParser.java  |  4 ++-
 .../org/apache/commons/scxml/model/State.java | 27 +++++++++++++++++
 .../apache/commons/scxml/model/StateTest.java | 30 ++++++++++++++++---
 .../apache/commons/scxml/model/state-01.xml   | 24 +++++++++++++++
 4 files changed, 80 insertions(+), 5 deletions(-)
 create mode 100644 src/test/java/org/apache/commons/scxml/model/state-01.xml

diff --git a/src/main/java/org/apache/commons/scxml/io/SCXMLParser.java b/src/main/java/org/apache/commons/scxml/io/SCXMLParser.java
index 9d1b62667..80d1d650a 100644
--- a/src/main/java/org/apache/commons/scxml/io/SCXMLParser.java
+++ b/src/main/java/org/apache/commons/scxml/io/SCXMLParser.java
@@ -854,7 +854,9 @@ private static void addFinalRules(final String xp,
     private static void addStatePropertiesRules(final String xp,
             final ExtendedBaseRules scxmlRules, final List<CustomAction> customActions,
             final PathResolver pr, final SCXML scxml) {
-        scxmlRules.add(xp, new SetPropertiesRule());
+        scxmlRules.add(xp, new SetPropertiesRule(
+                new String[] {"id", "final", "initial"},
+                new String[] {"id", "final", "first"}));
         scxmlRules.add(xp, new DigestSrcAttributeRule(scxml,
             customActions, pr));
     }
diff --git a/src/main/java/org/apache/commons/scxml/model/State.java b/src/main/java/org/apache/commons/scxml/model/State.java
index a6deda28c..7c24e59ec 100644
--- a/src/main/java/org/apache/commons/scxml/model/State.java
+++ b/src/main/java/org/apache/commons/scxml/model/State.java
@@ -190,6 +190,33 @@ public final void setInitial(final Initial target) {
         target.setParent(this);
     }
 
+    /**
+     * Get the initial state's ID.
+     *
+     * @return The initial state's string ID.
+     */
+    public final String getFirst() {
+        if (initial != null) {
+            return initial.getTransition().getNext();
+        }
+        return null;
+    }
+
+    /**
+     * Set the initial state by its ID string.
+     *
+     * @param target
+     *            The initial target's ID to set.
+     */
+    public final void setFirst(final String target) {
+        Transition t = new Transition();
+        t.setNext(target);
+        Initial ini = new Initial();
+        ini.setTransition(t);
+        ini.setParent(this);
+        this.initial = ini;
+    }
+
     /**
      * Get the map of child states (may be empty).
      *
diff --git a/src/test/java/org/apache/commons/scxml/model/StateTest.java b/src/test/java/org/apache/commons/scxml/model/StateTest.java
index eaa87c8c8..4f407accc 100644
--- a/src/test/java/org/apache/commons/scxml/model/StateTest.java
+++ b/src/test/java/org/apache/commons/scxml/model/StateTest.java
@@ -16,8 +16,12 @@
  */
 package org.apache.commons.scxml.model;
 
+import java.net.URL;
 import java.util.List;
 
+import org.apache.commons.scxml.SCXMLExecutor;
+import org.apache.commons.scxml.SCXMLTestHelper;
+
 import junit.framework.Test;
 import junit.framework.TestCase;
 import junit.framework.TestSuite;
@@ -36,13 +40,23 @@ public static void main(String args[]) {
         String[] testCaseName = { StateTest.class.getName()};
         junit.textui.TestRunner.main(testCaseName);
     }
-    
+
+    // Test data
     private State state;
-    
+    private URL state01;
+    private SCXMLExecutor exec;
+
     public void setUp() {
         state = new State();
+        state01 = this.getClass().getClassLoader().
+            getResource("org/apache/commons/scxml/model/state-01.xml");
     }
-    
+
+    public void tearDown() {
+        state01 = null;
+        exec = null;
+    }
+
     public void testGetTransitionsListNull() {
         assertNull(state.getTransitionsList("event"));
     }
@@ -155,5 +169,13 @@ public void testIsRegionNotParallel() {
         
         assertFalse(state.isRegion());
     }
-    
+
+    public void testInitialAttribute() {
+        SCXML scxml = SCXMLTestHelper.parse(state01);
+        assertNotNull(scxml);
+        exec = SCXMLTestHelper.getExecutor(scxml);
+        assertNotNull(exec);
+        assertEquals("s11", exec.getCurrentStatus().getStates().iterator().next().getId());
+    }
+
 }
diff --git a/src/test/java/org/apache/commons/scxml/model/state-01.xml b/src/test/java/org/apache/commons/scxml/model/state-01.xml
new file mode 100644
index 000000000..22a9018fc
--- /dev/null
+++ b/src/test/java/org/apache/commons/scxml/model/state-01.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0"?>
+<!--
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+-->
+<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" initial="s1">
+
+    <state id="s1" initial="s11">
+        <final id="s11"/>
+    </state>
+
+</scxml>
