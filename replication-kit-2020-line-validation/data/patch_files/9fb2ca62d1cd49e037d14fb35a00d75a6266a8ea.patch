From 9fb2ca62d1cd49e037d14fb35a00d75a6266a8ea Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 8 Jan 2015 23:29:40 +0000
Subject: [PATCH] NET-552 SocketTimeoutException connecting a FTP server via an
 HTTP Proxy

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1650420 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                            |  5 ++++-
 src/main/java/org/apache/commons/net/ftp/FTP.java  | 14 ++++++++++++--
 .../java/org/apache/commons/net/ftp/FTPClient.java | 10 +++++++++-
 .../org/apache/commons/net/ftp/FTPHTTPClient.java  |  9 ++++++---
 4 files changed, 31 insertions(+), 7 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 74bf0e5b0..f27b4f0a3 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -62,12 +62,15 @@ The <action> type attribute can be add,update,fix,remove.
      -->
 
     <body>
-        <release version="3.4" date="2014-01-??" description="
+        <release version="3.4" date="2015-01-??" description="
 This is mainly a bug-fix release. See further details below.
   Notable additions:
   IMAPExportMbox (example app) allows IMAP folders to be exported into an mbox file.
   This is the inverse of the IMAPImportMbox example added previously
         ">
+            <action issue="NET-552" type="fix" dev="sebb" due-to="Quentin Devriendt">
+            SocketTimeoutException connecting a FTP server via an HTTP Proxy
+            </action>
             <action issue="NET-528" type="add" dev="sebb">
             FTPListParseEngine does not provide access to raw responses
             </action>
diff --git a/src/main/java/org/apache/commons/net/ftp/FTP.java b/src/main/java/org/apache/commons/net/ftp/FTP.java
index 764c2ed9d..ef3705040 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTP.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTP.java
@@ -21,6 +21,7 @@
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.OutputStreamWriter;
+import java.io.Reader;
 import java.net.Inet4Address;
 import java.net.Inet6Address;
 import java.net.InetAddress;
@@ -377,9 +378,18 @@ private void __getReply(boolean reportReply) throws IOException
     @Override
     protected void _connectAction_() throws IOException
     {
+        _connectAction_(null);
+    }
+
+
+    protected void _connectAction_(Reader socketIsReader) throws IOException {
         super._connectAction_(); // sets up _input_ and _output_
-        _controlInput_ =
-            new CRLFLineReader(new InputStreamReader(_input_, getControlEncoding()));
+        if(socketIsReader == null) {
+            _controlInput_ =
+                    new CRLFLineReader(new InputStreamReader(_input_, getControlEncoding()));
+        } else {
+            _controlInput_ = new CRLFLineReader(socketIsReader);
+        }
         _controlOutput_ =
             new BufferedWriter(new OutputStreamWriter(_output_, getControlEncoding()));
         if (connectTimeout > 0) { // NET-385
diff --git a/src/main/java/org/apache/commons/net/ftp/FTPClient.java b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
index 039587b10..82d15861d 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPClient.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPClient.java
@@ -24,6 +24,7 @@
 import java.io.InputStreamReader;
 import java.io.OutputStream;
 import java.io.OutputStreamWriter;
+import java.io.Reader;
 import java.net.Inet6Address;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
@@ -939,7 +940,14 @@ protected Socket _openDataConnection_(String command, String arg)
     @Override
     protected void _connectAction_() throws IOException
     {
-        super._connectAction_(); // sets up _input_ and _output_
+        _connectAction_(null);
+    }
+
+
+    @Override
+    protected void _connectAction_(Reader socketIsReader) throws IOException
+    {
+    	super._connectAction_(socketIsReader); // sets up _input_ and _output_
         __initDefaults();
         // must be after super._connectAction_(), because otherwise we get an
         // Exception claiming we're not connected
diff --git a/src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java b/src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java
index 70ab0258e..837f67779 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPHTTPClient.java
@@ -22,6 +22,7 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.OutputStream;
+import java.io.Reader;
 import java.io.UnsupportedEncodingException;
 import java.net.Inet6Address;
 import java.net.Socket;
@@ -131,18 +132,19 @@ public void connect(String host, int port) throws SocketException, IOException {
         _socket_ = new Socket(proxyHost, proxyPort);
         _input_ = _socket_.getInputStream();
         _output_ = _socket_.getOutputStream();
+        Reader socketIsReader;
         try {
-            tunnelHandshake(host, port, _input_, _output_);
+            socketIsReader = tunnelHandshake(host, port, _input_, _output_);
         }
         catch (Exception e) {
             IOException ioe = new IOException("Could not connect to " + host+ " using port " + port);
             ioe.initCause(e);
             throw ioe;
         }
-        super._connectAction_();
+        super._connectAction_(socketIsReader);
     }
 
-    private void tunnelHandshake(String host, int port, InputStream input, OutputStream output) throws IOException,
+    private BufferedReader tunnelHandshake(String host, int port, InputStream input, OutputStream output) throws IOException,
     UnsupportedEncodingException {
         final String connectString = "CONNECT "  + host + ":" + port  + " HTTP/1.1";
         final String hostString = "Host: " + host + ":" + port;
@@ -193,6 +195,7 @@ private void tunnelHandshake(String host, int port, InputStream input, OutputStr
             }
             throw new IOException(msg.toString());
         }
+        return reader;
     }
 }
 
