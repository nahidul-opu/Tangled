From b08c6b0a2ca43ff00b859a2e7aaa0ccf1febbed9 Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Mon, 24 Mar 2008 18:58:53 +0000
Subject: [PATCH] Attempt to fix IVY-773 (Extra Attributes are not available to
 resolver after resolve if cache was empty)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@640519 13f79535-47bb-0310-9956-ffa450edef68
---
 .../ivy/plugins/resolver/BasicResolver.java   | 34 +++++++++++--------
 1 file changed, 19 insertions(+), 15 deletions(-)

diff --git a/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java b/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java
index 73a4163b0..e7cf5dcec 100644
--- a/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java
+++ b/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java
@@ -397,25 +397,29 @@ private void checkRevision(ModuleRevisionId systemMrid) {
     }
 
     private void resolveAndCheckRevision(ModuleDescriptor systemMd,
-            ModuleRevisionId systemMrid, ResolvedResource ivyRef, boolean isDynamic) {
-        ModuleRevisionId resolvedMrid = systemMrid;
-        if (isDynamic) {
-            resolvedMrid = systemMd.getResolvedModuleRevisionId();
-            if (resolvedMrid.getRevision() == null 
-                    || resolvedMrid.getRevision().length() == 0) {
-                if (ivyRef.getRevision() == null || ivyRef.getRevision().length() == 0) {
-                    resolvedMrid = ModuleRevisionId.newInstance(resolvedMrid, "working@"
-                        + getName());
-                } else {
-                    resolvedMrid = ModuleRevisionId.newInstance(resolvedMrid, ivyRef
-                        .getRevision());
-                }
+            ModuleRevisionId dependencyConstraint, ResolvedResource ivyRef, boolean isDynamic) {
+        // we get the resolved module revision id from the descriptor: it may contain extra
+        // attributes that were not included in the dependency constraint
+        ModuleRevisionId resolvedMrid = systemMd.getResolvedModuleRevisionId();
+        if (resolvedMrid.getRevision() == null 
+                || resolvedMrid.getRevision().length() == 0) {
+            if (!isDynamic) {
+                resolvedMrid = ModuleRevisionId.newInstance(
+                    resolvedMrid, dependencyConstraint.getRevision());
+            } else if (ivyRef.getRevision() == null || ivyRef.getRevision().length() == 0) {
+                resolvedMrid = ModuleRevisionId.newInstance(resolvedMrid, "working@"
+                    + getName());
+            } else {
+                resolvedMrid = ModuleRevisionId.newInstance(resolvedMrid, ivyRef
+                    .getRevision());
             }
+        }
+        if (isDynamic) {
             Message.verbose("\t\t[" + toSystem(resolvedMrid).getRevision() + "] " 
-                + systemMrid.getModuleId());
+                + dependencyConstraint.getModuleId());
         }
         systemMd.setResolvedModuleRevisionId(resolvedMrid); 
-        checkModuleDescriptorRevision(systemMd, systemMrid);
+        checkModuleDescriptorRevision(systemMd, dependencyConstraint);
     }
 
     private String getRevision(ResolvedResource ivyRef, ModuleRevisionId askedMrid,
