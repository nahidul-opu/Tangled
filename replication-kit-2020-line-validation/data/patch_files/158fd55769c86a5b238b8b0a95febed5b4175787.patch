From 158fd55769c86a5b238b8b0a95febed5b4175787 Mon Sep 17 00:00:00 2001
From: Avery Ching <aching@apache.org>
Date: Tue, 30 Aug 2011 16:14:45 +0000
Subject: [PATCH] GIRAPH-17 - Giraph doesn't give up properly after the maximum
 connect attempts to ZooKeeper (aching).

git-svn-id: https://svn.apache.org/repos/asf/incubator/giraph/trunk@1163272 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/giraph/zk/ZooKeeperManager.java    | 19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

diff --git a/src/main/java/org/apache/giraph/zk/ZooKeeperManager.java b/src/main/java/org/apache/giraph/zk/ZooKeeperManager.java
index 75dc66151..d0f9713c8 100644
--- a/src/main/java/org/apache/giraph/zk/ZooKeeperManager.java
+++ b/src/main/java/org/apache/giraph/zk/ZooKeeperManager.java
@@ -476,7 +476,8 @@ private void generateZooKeeperConfigFile(List<String> serverList) {
                     configFile.getName());
             }
             OutputStreamWriter writer = new FileWriter(configFilePath);
-            writer.write("tickTime=" + GiraphJob.DEFAULT_ZOOKEEPER_TICK_TIME + "\n");
+            writer.write("tickTime=" +
+                         GiraphJob.DEFAULT_ZOOKEEPER_TICK_TIME + "\n");
             writer.write("dataDir=" + this.zkDir + "\n");
             writer.write("clientPort=" + zkBasePort + "\n");
             writer.write("maxClientCnxns=" +
@@ -590,10 +591,8 @@ public void run() {
                 throw new RuntimeException(e);
             }
 
-            /*
-             * Once the server is up and running, notify that this server is up
-             * and running by dropping a ready stamp.
-             */
+            // Once the server is up and running, notify that this server is up
+            // and running by dropping a ready stamp.
             int connectAttempts = 0;
             final int maxConnectAttempts = 10;
             while (connectAttempts < maxConnectAttempts) {
@@ -610,7 +609,10 @@ public void run() {
                         new InetSocketAddress(myHostname, zkBasePort);
                     Socket testServerSock = new Socket();
                     testServerSock.connect(zkServerAddress, 5000);
-                    LOG.info("onlineZooKeeperServers: Connected!");
+                    if (LOG.isInfoEnabled()) {
+                        LOG.info("onlineZooKeeperServers: Connected to " +
+                                 zkServerAddress + "!");
+                    }
                     break;
                 } catch (SocketTimeoutException e) {
                     LOG.warn("onlineZooKeeperServers: Got " +
@@ -631,9 +633,10 @@ public void run() {
                              " interrupted - " + e.getMessage());
                 }
             }
-            if (connectAttempts == 5) {
+            if (connectAttempts == maxConnectAttempts) {
                 throw new IllegalStateException(
-                    "onlineZooKeeperServers: Failed to connect in 5 tries!");
+                    "onlineZooKeeperServers: Failed to connect in " +
+                    connectAttempts + " tries!");
             }
             Path myReadyPath = new Path(
                     serverDirectory, myHostname +
