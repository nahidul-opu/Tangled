From 41dfac731ef973b03f70d8f9c01afc67bc5f311d Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Thu, 7 Jun 2012 23:23:48 +0000
Subject: [PATCH] IO-335 - Tailer#readLines - incorrect CR handling

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1347829 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  3 ++
 .../org/apache/commons/io/input/Tailer.java   | 12 ++++++--
 .../apache/commons/io/input/TailerTest.java   | 29 +++++++++++++++++++
 3 files changed, 41 insertions(+), 3 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index ff42198c780..953ebf4c39a 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -47,6 +47,9 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
     <!-- The release date is the date RC is cut -->
     <release version="2.4" date="2012-TDB-TDB" description="">
+      <action issue="IO-335" dev="sebb" type="fix">
+        Tailer#readLines - incorrect CR handling.
+      </action>            
       <action issue="IO-334" dev="sebb" type="fix">
         FileUtils.toURLs throws NPE for null parameter.
         Documented the behaviour.
diff --git a/src/main/java/org/apache/commons/io/input/Tailer.java b/src/main/java/org/apache/commons/io/input/Tailer.java
index 79af306b4d0..4f9594772fe 100644
--- a/src/main/java/org/apache/commons/io/input/Tailer.java
+++ b/src/main/java/org/apache/commons/io/input/Tailer.java
@@ -385,17 +385,23 @@ private long readLines(RandomAccessFile reader) throws IOException {
                 byte ch = inbuf[i];
                 switch (ch) {
                 case '\n':
+                    seenCR = false; // swallow CR before LF
                     listener.handle(sb.toString());
-                    sb = new StringBuilder();
+                    sb.setLength(0);
                     rePos = pos + i + 1;
                     break;
                 case '\r':
+                    if (seenCR) {
+                        sb.append('\r');
+                    }
                     seenCR = true;
                     break;
                 default:
                     if (seenCR) {
-                        sb.append('\r');
-                        seenCR = false;
+                        seenCR = false; // swallow final CR
+                        listener.handle(sb.toString());
+                        sb.setLength(0);
+                        rePos = pos + i + 1;
                     }
                     sb.append((char) ch); // add character, not its ascii value
                 }
diff --git a/src/test/java/org/apache/commons/io/input/TailerTest.java b/src/test/java/org/apache/commons/io/input/TailerTest.java
index 7713bdb1639..487ae085974 100644
--- a/src/test/java/org/apache/commons/io/input/TailerTest.java
+++ b/src/test/java/org/apache/commons/io/input/TailerTest.java
@@ -290,6 +290,35 @@ public void testStopWithNoFileUsingExecutor() throws Exception {
         assertEquals("fileRotated should be not be called", 0 , listener.rotated);
     }
 
+    public void testIO335() throws Exception { // test CR behaviour
+        // Create & start the Tailer
+        long delayMillis = 50;
+        final File file = new File(getTestDirectory(), "tailer-testio334.txt");
+        createFile(file, 0);
+        final TestTailerListener listener = new TestTailerListener();
+        tailer = new Tailer(file, listener, delayMillis, false);
+        final Thread thread = new Thread(tailer);
+        thread.start();
+
+        // Write some lines to the file
+        writeString(file, "CRLF\r\nLF\nCR\rCRCR\r\rtrail");
+        //                 1       2   3   4    
+        final long testDelayMillis = delayMillis * 10;
+        Thread.sleep(testDelayMillis);
+        List<String> lines = listener.getLines();
+        assertEquals("line count", 4, lines.size());
+        assertEquals("line 1", "CRLF", lines.get(0));
+        assertEquals("line 2", "LF", lines.get(1));
+        assertEquals("line 3", "CR", lines.get(2));
+        assertEquals("line 4", "CRCR\r", lines.get(3));
+
+        // Stop
+        tailer.stop();
+        tailer=null;
+        thread.interrupt();
+        Thread.sleep(testDelayMillis);
+    }
+
     /**
      * Test {@link TailerListener} implementation.
      */
