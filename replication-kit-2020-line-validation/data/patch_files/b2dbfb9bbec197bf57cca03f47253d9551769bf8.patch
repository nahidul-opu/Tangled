From b2dbfb9bbec197bf57cca03f47253d9551769bf8 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Mon, 22 Apr 2013 17:52:02 +0000
Subject: [PATCH] IO-299  getPrefixLength returns null if filename has leading
 slashes         Javadoc: add examples to show correct behaviour; add unit
 tests

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1470636 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                                    | 4 ++++
 src/main/java/org/apache/commons/io/FilenameUtils.java     | 7 +++++++
 .../java/org/apache/commons/io/FilenameUtilsTestCase.java  | 6 +++++-
 3 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 35e5fd8d73a..ae26875e0fb 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -48,6 +48,10 @@ The <action> type attribute can be add,update,fix,remove.
     <!-- The release date is the date RC is cut -->
     <release version="2.5" date="2013-??-??" description="New features and bug fixes.">    
       <action issue="IO-328" dev="sebb" type="update">
+        getPrefixLength returns null if filename has leading slashes
+        Javadoc: add examples to show correct behaviour; add unit tests
+      </action>            
+      <action issue="IO-299" dev="sebb" type="update">
         FileUtils.listFilesAndDirs includes original dir in results even when it doesn't match filter
         Javadoc: clarify that original dir is included in the results
       </action>            
diff --git a/src/main/java/org/apache/commons/io/FilenameUtils.java b/src/main/java/org/apache/commons/io/FilenameUtils.java
index 113149ca0f5..685c3f1055c 100644
--- a/src/main/java/org/apache/commons/io/FilenameUtils.java
+++ b/src/main/java/org/apache/commons/io/FilenameUtils.java
@@ -603,6 +603,7 @@ public static String separatorsToSystem(final String path) {
      * C:a\b\c.txt         --> "C:"        --> drive relative
      * C:\a\b\c.txt        --> "C:\"       --> absolute
      * \\server\a\b\c.txt  --> "\\server\" --> UNC
+     * \\\a\b\c.txt        -->  error, length = -1
      *
      * Unix:
      * a/b/c.txt           --> ""          --> relative
@@ -611,11 +612,17 @@ public static String separatorsToSystem(final String path) {
      * ~                   --> "~/"        --> current user (slash added)
      * ~user/a/b/c.txt     --> "~user/"    --> named user
      * ~user               --> "~user/"    --> named user (slash added)
+     * //server/a/b/c.txt  --> "//server/"
+     * ///a/b/c.txt        --> error, length = -1
      * </pre>
      * <p>
      * The output will be the same irrespective of the machine that the code is running on.
      * ie. both Unix and Windows prefixes are matched regardless.
      *
+     * Note that a leading // (or \\) is used to indicate a UNC name on Windows.
+     * These must be followed by a server name, so double-slashes are not collapsed
+     * to a single slash at the start of the filename.
+     *
      * @param filename  the filename to find the prefix in, null returns -1
      * @return the length of the prefix, -1 if invalid or null
      */
diff --git a/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java b/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java
index 7ef3edfe057..d7ecb62d4f9 100644
--- a/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java
+++ b/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java
@@ -503,7 +503,11 @@ public void testGetPrefixLength() {
         assertEquals(1, FilenameUtils.getPrefixLength("\\a\\b\\c.txt"));
         assertEquals(2, FilenameUtils.getPrefixLength("~\\a\\b\\c.txt"));
         assertEquals(6, FilenameUtils.getPrefixLength("~user\\a\\b\\c.txt"));
-    }
+
+        assertEquals(9, FilenameUtils.getPrefixLength("//server/a/b/c.txt"));
+        assertEquals(-1, FilenameUtils.getPrefixLength("\\\\\\a\\b\\c.txt"));
+        assertEquals(-1, FilenameUtils.getPrefixLength("///a/b/c.txt"));
+}
     
     public void testIndexOfLastSeparator() {
         assertEquals(-1, FilenameUtils.indexOfLastSeparator(null));
