From b4d4d168b6077c8c6a35257dee0967fbb85398c5 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Fri, 14 Aug 2015 22:22:47 +0000
Subject: [PATCH] BCEL-79 - Add test to show the problem, and re-fix it

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1695997 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/bcel6/generic/MethodGen.java      | 17 -----------------
 .../apache/commons/bcel6/PLSETestCase.java    | 19 +++++++++++++++++++
 .../commons/bcel6/data/PLSETestClass.java     |  8 ++++++++
 3 files changed, 27 insertions(+), 17 deletions(-)

diff --git a/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java b/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java
index 311e9eccc1..8055a67fd0 100644
--- a/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java
+++ b/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java
@@ -35,7 +35,6 @@
 import org.apache.commons.bcel6.classfile.LineNumberTable;
 import org.apache.commons.bcel6.classfile.LocalVariable;
 import org.apache.commons.bcel6.classfile.LocalVariableTable;
-import org.apache.commons.bcel6.classfile.LocalVariableTypeTable;
 import org.apache.commons.bcel6.classfile.Method;
 import org.apache.commons.bcel6.classfile.ParameterAnnotationEntry;
 import org.apache.commons.bcel6.classfile.ParameterAnnotations;
@@ -239,22 +238,6 @@ public MethodGen(Method m, String class_name, ConstantPoolGen cp) {
                             addLocalVariable(l.getName(), Type.getType(l.getSignature()), l
                                     .getIndex(), start, end);
                         }
-                    } else if (a instanceof LocalVariableTypeTable) {
-                        LocalVariable[] lv = ((LocalVariableTypeTable) a).getLocalVariableTypeTable();
-                        removeLocalVariables();
-                        for (LocalVariable l : lv) {
-                            InstructionHandle start = il.findHandle(l.getStartPC());
-                            InstructionHandle end = il.findHandle(l.getStartPC() + l.getLength());
-                            // Repair malformed handles
-                            if (null == start) {
-                                start = il.getStart();
-                            }
-                            if (null == end) {
-                                end = il.getEnd();
-                            }
-                            addLocalVariable(l.getName(), Type.getType(l.getSignature()), l
-                                    .getIndex(), start, end);
-                        }
                     } else {
                         addCodeAttribute(a);
                     }
diff --git a/src/test/java/org/apache/commons/bcel6/PLSETestCase.java b/src/test/java/org/apache/commons/bcel6/PLSETestCase.java
index 17303cac9b..06fa79371d 100644
--- a/src/test/java/org/apache/commons/bcel6/PLSETestCase.java
+++ b/src/test/java/org/apache/commons/bcel6/PLSETestCase.java
@@ -19,6 +19,7 @@
 package org.apache.commons.bcel6;
 
 import org.apache.commons.bcel6.classfile.JavaClass;
+import org.apache.commons.bcel6.classfile.LocalVariableTable;
 import org.apache.commons.bcel6.classfile.Method;
 import org.apache.commons.bcel6.generic.ClassGen;
 import org.apache.commons.bcel6.generic.ConstantPoolGen;
@@ -43,4 +44,22 @@ public void testB208() throws ClassNotFoundException
         // currently, this will cause null pointer exception
         mg.getLocalVariableTable(pool);
     }
+
+    /**
+     * BCEL-79: 
+     */
+    public void testB79() throws ClassNotFoundException
+    {
+        JavaClass clazz = getTestClass("org.apache.commons.bcel6.data.PLSETestClass");
+        ClassGen gen = new ClassGen(clazz);
+        ConstantPoolGen pool = gen.getConstantPool();
+        Method m = gen.getMethodAt(2);
+        LocalVariableTable lvt = m.getLocalVariableTable();
+        //System.out.println(lvt);
+        //System.out.println(lvt.getTableLength());
+        MethodGen mg = new MethodGen(m, gen.getClassName(), pool);
+        LocalVariableTable new_lvt = mg.getLocalVariableTable(mg.getConstantPool());
+        //System.out.println(new_lvt);
+        assertEquals("number of locals", lvt.getTableLength(), new_lvt.getTableLength());
+    }
 }
diff --git a/src/test/java/org/apache/commons/bcel6/data/PLSETestClass.java b/src/test/java/org/apache/commons/bcel6/data/PLSETestClass.java
index 1f1a79b445..73ca9dfb6e 100644
--- a/src/test/java/org/apache/commons/bcel6/data/PLSETestClass.java
+++ b/src/test/java/org/apache/commons/bcel6/data/PLSETestClass.java
@@ -18,6 +18,8 @@
 
 package org.apache.commons.bcel6.data;
 
+import java.util.ArrayList;
+
 public class PLSETestClass
 {
     public void meth1(int arg1)
@@ -25,4 +27,10 @@ public void meth1(int arg1)
         @SuppressWarnings("unused")
         int local1 = arg1;
     }
+
+    public void meth2(int arg1, ArrayList<String> arg2, int arg3)
+    {
+        @SuppressWarnings("unused")
+        int local1 = arg1;
+    }
 }
