From 01c89ddda86bb854e09c68e0811cc762e4adb715 Mon Sep 17 00:00:00 2001
From: Thomas Vandahl <tv@apache.org>
Date: Sat, 31 Mar 2012 18:43:16 +0000
Subject: [PATCH] Confirm fix of JCS-88

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/jcs/branches/generics-interface@1307869 13f79535-47bb-0310-9956-ffa450edef68
---
 .../jcs/auxiliary/disk/block/BlockDiskUnitTest.java | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskUnitTest.java b/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskUnitTest.java
index 4dbb524d2..6c04dce1c 100644
--- a/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskUnitTest.java
+++ b/src/test/org/apache/jcs/auxiliary/disk/block/BlockDiskUnitTest.java
@@ -20,6 +20,7 @@
  */
 
 import java.io.File;
+import java.util.Random;
 
 import junit.framework.TestCase;
 
@@ -271,14 +272,22 @@ public void testWriteAndReadMultipleMultiBlockElement_setSize()
         int bytes = getBytesForBlocksOfByteArrays( disk.getBlockSizeBytes(), numBlocksPerElement );
 
         int numElements = 100;
+        Random r = new Random(System.currentTimeMillis());
+        final byte[] src = new byte[bytes];
         for ( int i = 0; i < numElements; i++ )
         {
-            int[] blocks = disk.write( new byte[bytes] );
+            r.nextBytes(src);  // Ensure we don't just write zeros out
+            int[] blocks = disk.write( src );
             byte[] result = (byte[]) disk.read( blocks );
 
             // VERIFY
-            assertEquals( "Wrong item retured.", new byte[bytes].length, result.length );
+            assertEquals( "Wrong item length retured.", src.length, result.length );
             assertEquals( "Wrong number of blocks returned.", numBlocksPerElement, blocks.length );
+
+            // We check the array contents, too, to ensure we read back what we wrote out
+            for (int j = 0 ; j < src.length ; j++) {
+                assertEquals( "Mismatch at offset " + j + " in attempt # " + (i + 1), src[j], result[j] );
+            }
         }
         System.out.println( "testWriteAndReadMultipleMultiBlockElement_setSize " + disk );
         assertEquals( "Wrong number of elements.", numBlocksPerElement * numElements, disk.getNumberOfBlocks() );
