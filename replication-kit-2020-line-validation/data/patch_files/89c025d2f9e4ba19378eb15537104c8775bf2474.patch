From 89c025d2f9e4ba19378eb15537104c8775bf2474 Mon Sep 17 00:00:00 2001
From: Lewis John McGibbney <lewis.j.mcgibbney@jpl.nasa.gov>
Date: Tue, 5 Aug 2014 17:41:44 -0700
Subject: [PATCH] GORA-364 MemStore.get fails with NPE when key is not set

---
 CHANGES.txt                                   |  2 ++
 .../apache/gora/memory/store/MemStore.java    |  3 ++
 .../gora/memory/store/MemStoreTest.java       | 31 +++++++++++++++++++
 3 files changed, 36 insertions(+)
 create mode 100644 gora-core/src/test/java/org/apache/gora/memory/store/MemStoreTest.java

diff --git a/CHANGES.txt b/CHANGES.txt
index 4fdb83b4d..01e14f976 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -4,6 +4,8 @@
 
 Current Development 0.5-SNAPSHOT
 
+* GORA-364 MemStore.get fails with NPE when key is not set (Gerhard Gossen via lewismc)
+
 * GORA-189 Embrace all text-like parameters in generated Persistent subclasses by Compiler CharSequence (lewismc)
 
 * GORA-361 AvroUtils.deepClonePersistent needs to flush BinaryEncoder (Gerhard Gossen via hsaputra)
diff --git a/gora-core/src/main/java/org/apache/gora/memory/store/MemStore.java b/gora-core/src/main/java/org/apache/gora/memory/store/MemStore.java
index bc0d59fc0..56ba4e3b2 100644
--- a/gora-core/src/main/java/org/apache/gora/memory/store/MemStore.java
+++ b/gora-core/src/main/java/org/apache/gora/memory/store/MemStore.java
@@ -139,6 +139,9 @@ public Result<K, T> execute(Query<K, T> query) {
   @Override
   public T get(K key, String[] fields) {
     T obj = map.get(key);
+    if (obj == null) {
+      return null;
+    }
     return getPersistent(obj, getFieldsToQuery(fields));
   }
 
diff --git a/gora-core/src/test/java/org/apache/gora/memory/store/MemStoreTest.java b/gora-core/src/test/java/org/apache/gora/memory/store/MemStoreTest.java
new file mode 100644
index 000000000..f715280fa
--- /dev/null
+++ b/gora-core/src/test/java/org/apache/gora/memory/store/MemStoreTest.java
@@ -0,0 +1,31 @@
+package org.apache.gora.memory.store;
+
+import org.apache.gora.examples.generated.WebPage;
+import org.apache.gora.store.DataStore;
+import org.junit.Test;
+
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assume.assumeTrue;
+
+public class MemStoreTest {
+
+  @Test
+  public void testGetMissingValue() {
+    DataStore<String, WebPage> store = new MemStore<String, WebPage>();
+    WebPage nullWebPage = store.get("missing", new String[0]);
+    assertNull(nullWebPage);
+    store.close();
+  }
+
+  @Test
+  public void testPutGet() throws Exception {
+    String key = "org.apache.gora:http:/";
+    DataStore<String, WebPage> store = new MemStore<String, WebPage>();
+    assumeTrue(store.get(key, new String[0]) == null);
+    store.put(key, WebPage.newBuilder().build());
+    assertNotNull(store.get(key, new String[0]));
+    store.close();
+  }
+
+}
