From 50a124bf76c36d47d797306ccadcb3d97c43caca Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Sat, 17 Jan 2015 23:13:51 +0000
Subject: [PATCH] NET-566 UnixFTPEntryParser Drops Leading Spaces from File
 Names

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1652696 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                              |  3 +++
 .../org/apache/commons/net/ftp/FTPClientConfig.java  |  8 ++++++++
 .../ftp/parser/DefaultFTPFileEntryParserFactory.java | 12 +++++++++---
 .../commons/net/ftp/parser/UnixFTPEntryParser.java   |  2 +-
 .../net/ftp/parser/UnixFTPEntryParserTest.java       |  6 +++---
 5 files changed, 24 insertions(+), 7 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index b38493e06..44b22de82 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -68,6 +68,9 @@ This is mainly a bug-fix release. See further details below.
   IMAPExportMbox (example app) allows IMAP folders to be exported into an mbox file.
   This is the inverse of the IMAPImportMbox example added previously
         ">
+            <action issue="NET-566" type="fix" dev="sebb" due-to="Gary Russell">
+            UnixFTPEntryParser Drops Leading Spaces from File Names
+            </action>
             <action type="update" dev="sebb">
             examples/Main now uses a property file to define aliases instead of scanning class files
             </action>
diff --git a/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java b/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
index ae14a6013..22164cd24 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
@@ -144,6 +144,14 @@ public class FTPClientConfig
      */
     public static final String SYST_UNIX  = "UNIX";
 
+    /**
+     * Identifier for alternate UNIX parser; same as {@link SYST_UNIX} but leading spaces are
+     * trimmed from file names. This is to maintain backwards compatibility with
+     * the original behaviour of the parser which ignored multiple spaces between the date
+     * and the start of the file name.
+     */
+    public static final String SYST_UNIX_TRIM_LEADING  = "UNIX_LTRIM";
+
     /**
      * Identifier by which a vms-based ftp server is known throughout
      * the commons-net ftp system.
diff --git a/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java b/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
index b9a2b39ad..046d7a4ec 100644
--- a/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
+++ b/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
@@ -124,7 +124,11 @@ private FTPFileEntryParser createFileEntryParser(String key, FTPClientConfig con
             String ukey = key.toUpperCase(java.util.Locale.ENGLISH);
             if (ukey.indexOf(FTPClientConfig.SYST_UNIX) >= 0)
             {
-                parser = new UnixFTPEntryParser(config);
+                parser = new UnixFTPEntryParser(config, false);
+            }
+            else if (ukey.indexOf(FTPClientConfig.SYST_UNIX_TRIM_LEADING) >= 0)
+            {
+                parser = new UnixFTPEntryParser(config, true);
             }
             else if (ukey.indexOf(FTPClientConfig.SYST_VMS) >= 0)
             {
@@ -239,7 +243,8 @@ private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config)
             return new CompositeFileEntryParser(new FTPFileEntryParser[]
                    {
                        new NTFTPEntryParser(config),
-                       new UnixFTPEntryParser(config)
+                       new UnixFTPEntryParser(config, 
+                               config != null && FTPClientConfig.SYST_UNIX_TRIM_LEADING.equals(config.getServerSystemKey()))
                    });
         }
     }
@@ -271,7 +276,8 @@ private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config)
             return new CompositeFileEntryParser(new FTPFileEntryParser[]
                 {
                     new OS400FTPEntryParser(config),
-                    new UnixFTPEntryParser(config)
+                    new UnixFTPEntryParser(config,
+                            config != null && FTPClientConfig.SYST_UNIX_TRIM_LEADING.equals(config.getServerSystemKey()))
                 });
         }
     }
diff --git a/src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java b/src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java
index a476cd0c7..b5b114f33 100644
--- a/src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java
+++ b/src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java
@@ -158,7 +158,7 @@ public UnixFTPEntryParser()
      */
     public UnixFTPEntryParser(FTPClientConfig config)
     {
-        this(config, true); // retain original behaviour (for now)
+        this(config, false);
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParserTest.java b/src/test/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParserTest.java
index 2c53e74b9..c703aad21 100644
--- a/src/test/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParserTest.java
+++ b/src/test/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParserTest.java
@@ -166,10 +166,10 @@ public void testTrailingSpaces() {
         assertEquals("zxbox     ", f.getName());
     }
 
-    public void testLeadingSpacesOriginal() { // this is the original (non-ideal) behaviour
+    public void testLeadingSpacesDefault() { // the default has been changed to keep spaces
         FTPFile f = getParser().parseFTPEntry("drwxr-xr-x   2 john smith     group         4096 Mar  2 15:13   zxbox");
         assertNotNull(f);
-        assertEquals("zxbox", f.getName() ); // leading spaces dropped
+        assertEquals("  zxbox", f.getName() ); // leading spaces retained
     }
 
     public void testLeadingSpacesNET566() { // check new behaviour
@@ -178,7 +178,7 @@ public void testLeadingSpacesNET566() { // check new behaviour
         assertEquals("  zxbox", f.getName() ); // leading spaces retained
     }
 
-    public void testTrimLeadingSpacesNET566() { // check new behaviour alternate setting
+    public void testTrimLeadingSpacesNET566() { // check can trim spaces as before
         FTPFile f = new UnixFTPEntryParser(null, true).parseFTPEntry("drwxr-xr-x   2 john smith     group         4096 Mar  2 15:13   zxbox");
         assertNotNull(f);
         assertEquals("zxbox", f.getName() ); // leading spaces trimmed
