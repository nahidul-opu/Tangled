From 463ced0f32cc6cfa40268d14ab303d5022dbd7cb Mon Sep 17 00:00:00 2001
From: James Kosin <jkosin@apache.org>
Date: Thu, 17 Nov 2011 03:16:00 +0000
Subject: [PATCH] OPENNLP-367: ConllX is UTF-8 always and is handled by the
 factory, Conll02 is UTF-8, Conll03 is ISO-8859-1, setup to set a System.out()
 to the same encoding as the input.  Should provide warning that the encoding
 may make the output non-legible by native system and the output needs to be
 piped or redirected to a file in all cases.

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1203036 13f79535-47bb-0310-9956-ffa450edef68
---
 .../tools/formats/BioNLP2004NameSampleStream.java        | 2 ++
 .../opennlp/tools/formats/Conll02NameSampleStream.java   | 2 ++
 .../opennlp/tools/formats/Conll03NameSampleStream.java   | 2 ++
 .../opennlp/tools/formats/ConllXPOSSampleStream.java     | 1 +
 .../tools/formats/ConllXPOSSampleStreamFactory.java      | 9 ++++-----
 5 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java b/opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java
index 28236131a..2c2cf23fb 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java
@@ -19,6 +19,7 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.PrintStream;
 import java.io.UnsupportedEncodingException;
 import java.util.ArrayList;
 import java.util.List;
@@ -54,6 +55,7 @@ public class BioNLP2004NameSampleStream implements ObjectStream<NameSample> {
   public BioNLP2004NameSampleStream(InputStream in, int types) {
     try {
       this.lineStream = new PlainTextByLineStream(in, "UTF-8");
+      System.setOut(new PrintStream(System.out, true, "UTF-8"));
     } catch (UnsupportedEncodingException e) {
       // UTF-8 is available on all JVMs, will never happen
       throw new IllegalStateException(e);
diff --git a/opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java b/opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java
index aaa731f2b..158308b46 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java
@@ -19,6 +19,7 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.PrintStream;
 import java.io.UnsupportedEncodingException;
 import java.util.ArrayList;
 import java.util.List;
@@ -80,6 +81,7 @@ public Conll02NameSampleStream(LANGUAGE lang, InputStream in, int types) {
     this.lang = lang;
     try {
       this.lineStream = new PlainTextByLineStream(in, "UTF-8");
+      System.setOut(new PrintStream(System.out, true, "UTF-8"));
     } catch (UnsupportedEncodingException e) {
       // UTF-8 is available on all JVMs, will never happen
       throw new IllegalStateException(e);
diff --git a/opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java b/opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java
index 41186757a..b4f6c8328 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java
@@ -19,6 +19,7 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.PrintStream;
 import java.io.UnsupportedEncodingException;
 import java.util.ArrayList;
 import java.util.List;
@@ -67,6 +68,7 @@ public Conll03NameSampleStream(LANGUAGE lang, InputStream in, int types) {
     this.lang = lang;
     try {
       this.lineStream = new PlainTextByLineStream(in, "ISO-8859-1");
+      System.setOut(new PrintStream(System.out, true, "ISO-8859-1"));
     } catch (UnsupportedEncodingException e) {
       // UTF-8 is available on all JVMs, will never happen
       throw new IllegalStateException(e);
diff --git a/opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStream.java b/opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStream.java
index 984a0c0b4..a36fb0c88 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStream.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStream.java
@@ -46,6 +46,7 @@ public ConllXPOSSampleStream(ObjectStream<String> lineStream) {
   }
   
   ConllXPOSSampleStream(Reader in) throws IOException {
+    // encoding is handled by the factory...
     super(new ParagraphStream(new PlainTextByLineStream(in)));
   }
 
diff --git a/opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStreamFactory.java b/opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStreamFactory.java
index 4e3e21bcb..86ddb5440 100644
--- a/opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStreamFactory.java
+++ b/opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStreamFactory.java
@@ -19,6 +19,7 @@
 
 import java.io.File;
 import java.io.InputStreamReader;
+import java.io.PrintStream;
 import java.io.UnsupportedEncodingException;
 
 import opennlp.tools.cmdline.ArgumentParser;
@@ -38,9 +39,6 @@ public class ConllXPOSSampleStreamFactory implements ObjectStreamFactory<POSSamp
   interface Parameters {
     @ParameterDescription(valueName = "sampleData")
     String getData();
-    
-    @ParameterDescription(valueName = "charsetName")
-    String getEncoding();
   }
   
   public String getUsage() {
@@ -55,11 +53,12 @@ ObjectStream<POSSample> create(Parameters params) {
     ObjectStream<String> lineStream;
     try {
       lineStream = new PlainTextByLineStream(new InputStreamReader(
-          CmdLineUtil.openInFile(new File(params.getData())), params.getEncoding()));
+          CmdLineUtil.openInFile(new File(params.getData())), "UTF-8"));
+      System.setOut(new PrintStream(System.out, true, "UTF-8"));
       
       return new ConllXPOSSampleStream(lineStream);
     } catch (UnsupportedEncodingException e) {
-      System.err.println("Encoding not supported: " + params.getEncoding());
+      // this shouldn't happen
       throw new TerminateToolException(-1);
     }
   }
