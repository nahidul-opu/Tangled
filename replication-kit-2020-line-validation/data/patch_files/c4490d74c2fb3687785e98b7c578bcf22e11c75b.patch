From c4490d74c2fb3687785e98b7c578bcf22e11c75b Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Sat, 8 Nov 2008 15:29:56 +0000
Subject: [PATCH] CONFIGURATION-344: Reduced synchronization in
 CombinedConfiguration when accessing and constructing the combined root node.
 This fixes a potential deadlock related to reload operations in child
 configurations.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@712401 13f79535-47bb-0310-9956-ffa450edef68
---
 .../AbstractFileConfiguration.java            |  7 ++-
 .../configuration/CombinedConfiguration.java  | 16 ++----
 .../TestCombinedConfiguration.java            | 49 +++++++++++++++++++
 xdocs/changes.xml                             |  6 +++
 4 files changed, 65 insertions(+), 13 deletions(-)

diff --git a/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java b/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
index e418b32b5e..fe01feb70f 100644
--- a/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
+++ b/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
@@ -920,8 +920,11 @@ protected void fireEvent(int type, String propName, Object propValue, boolean be
 
     public Object getProperty(String key)
     {
-        reload();
-        return super.getProperty(key);
+        synchronized (reloadLock)
+        {
+            reload();
+            return super.getProperty(key);
+        }
     }
 
     public boolean isEmpty()
diff --git a/src/java/org/apache/commons/configuration/CombinedConfiguration.java b/src/java/org/apache/commons/configuration/CombinedConfiguration.java
index 4e0e83fbc2..6d47bf8de5 100644
--- a/src/java/org/apache/commons/configuration/CombinedConfiguration.java
+++ b/src/java/org/apache/commons/configuration/CombinedConfiguration.java
@@ -193,7 +193,7 @@ public class CombinedConfiguration extends HierarchicalConfiguration implements
     private NodeCombiner nodeCombiner;
 
     /** Stores the combined root node. */
-    private ConfigurationNode combinedRoot;
+    private volatile ConfigurationNode combinedRoot;
 
     /** Stores a list with the contained configurations. */
     private List configurations;
@@ -509,10 +509,7 @@ public Set getConfigurationNames()
      */
     public void invalidate()
     {
-        synchronized (getNodeCombiner()) // use combiner as lock
-        {
-            combinedRoot = null;
-        }
+        combinedRoot = null;
         fireEvent(EVENT_COMBINED_INVALIDATE, null, null, false);
     }
 
@@ -540,14 +537,11 @@ public void configurationChanged(ConfigurationEvent event)
      */
     public ConfigurationNode getRootNode()
     {
-        synchronized (getNodeCombiner())
+        if (combinedRoot == null)
         {
-            if (combinedRoot == null)
-            {
-                combinedRoot = constructCombinedNode();
-            }
-            return combinedRoot;
+            combinedRoot = constructCombinedNode();
         }
+        return combinedRoot;
     }
 
     /**
diff --git a/src/test/org/apache/commons/configuration/TestCombinedConfiguration.java b/src/test/org/apache/commons/configuration/TestCombinedConfiguration.java
index f0f99c27ea..475a36ae39 100644
--- a/src/test/org/apache/commons/configuration/TestCombinedConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestCombinedConfiguration.java
@@ -24,6 +24,7 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Iterator;
+import java.util.NoSuchElementException;
 import java.util.Set;
 
 import junit.framework.Assert;
@@ -660,6 +661,54 @@ public void testConversionExpressionEngine()
         assertEquals("Wrong property 3", "3", config.getString("test(a)<2>"));
     }
 
+    /**
+     * Tests whether reload operations can cause a deadlock when the combined
+     * configuration is accessed concurrently. This test is related to
+     * CONFIGURATION-344.
+     */
+    public void testDeadlockWithReload() throws ConfigurationException,
+            InterruptedException
+    {
+        final PropertiesConfiguration child = new PropertiesConfiguration(
+                "test.properties");
+        child.setReloadingStrategy(new FileAlwaysReloadingStrategy());
+        config.addConfiguration(child);
+        final int count = 1000;
+
+        class ReloadThread extends Thread
+        {
+            boolean error = false;
+
+            public void run()
+            {
+                for (int i = 0; i < count && !error; i++)
+                {
+                    try
+                    {
+                        if (!child.getBoolean("configuration.loaded"))
+                        {
+                            error = true;
+                        }
+                    }
+                    catch (NoSuchElementException nsex)
+                    {
+                        error = true;
+                    }
+                }
+            }
+        }
+
+        ReloadThread reloadThread = new ReloadThread();
+        reloadThread.start();
+        for (int i = 0; i < count; i++)
+        {
+            assertEquals("Wrong value of combined property", 10, config
+                    .getInt("test.integer"));
+        }
+        reloadThread.join();
+        assertFalse("Failure in thread", reloadThread.error);
+    }
+
     /**
      * Helper method for writing a file. The file is also added to a list and
      * will be deleted in teadDown() automatically.
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index a14ae2bce2..82f0c598a7 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -34,6 +34,12 @@
         configuration nodes for properties with multiple values. This
         improves compatibility with queries.
       </action>
+      <action dev="oheger" type="fix" issue="CONFIGURATION-344">
+        CombinedConfiguration could cause a deadlock when it was accessed while
+        concurrently a reload of one of its child configuration happened. This
+        was fixed by reducing synchronization where it is not strictly
+        necessary.
+      </action>
       <action dev="oheger" type="fix" issue="CONFIGURATION-341">
         The "force reload check" mechanism of CombinedConfiguration now also
         works with sub configurations created by configurationAt().
