From 4740a19f6c6b3c2a96d08879abe6773885086758 Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Tue, 6 Nov 2012 17:02:39 +0000
Subject: [PATCH] IO-356 CharSequenceInputStream#reset() behaves incorrectly in
 case when buffer size is not dividable by data size Add test case showing the
 issue

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1406222 13f79535-47bb-0310-9956-ffa450edef68
---
 .../io/input/CharSequenceInputStreamTest.java | 26 +++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java b/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java
index 823039bb23f..ace5ac2940e 100644
--- a/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java
+++ b/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java
@@ -16,6 +16,7 @@
  */
 package org.apache.commons.io.input;
 
+import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
@@ -39,6 +40,8 @@ public class CharSequenceInputStreamTest {
         LARGE_TEST_STRING = buffer.toString();
     }
     
+    private static final String ALPHABET = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
+
     private Random random = new Random();
     
     private void testWithSingleByteRead(String testString, String charsetName) throws IOException {
@@ -164,4 +167,27 @@ public void testMarkSupported() throws Exception {
         assertTrue(r.markSupported());
     }
 
+    private void testIO_356(int bufferSize, int dataSize) throws Exception {
+        CharSequenceInputStream is = new CharSequenceInputStream(ALPHABET, "UTF-8", bufferSize);
+
+        is.mark(dataSize);
+
+        byte[] data1 = new byte[dataSize];
+        is.read(data1);
+
+        is.reset(); // should allow data to be re-read
+
+        byte[] data2 = new byte[dataSize];
+        is.read(data2);
+
+        is.close();
+        assertArrayEquals("bufferSize="+bufferSize+" dataSize="+dataSize, data1, data2); // data buffers should be identical
+    }
+    
+    @Test
+    public void testIO_356() throws Exception {
+        testIO_356(10, 10); // OK
+        testIO_356(10, 20); // OK
+        testIO_356(10, 13); // fails
+    }
 }
