From 3d6d908468f40a1839f5494d4bcec2c5b59d496f Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Fri, 13 Jul 2007 14:30:03 +0000
Subject: [PATCH] Test for BEANUTILS-142 - create a ResultSetMetaData
 implementation that returns "java.sql.Timestamp" as the column class name
 instead of "java.sql.Date" - and test that RowSetDynaClass converts the value
 returned from the ResultSet

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/beanutils/trunk@556013 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/beanutils/DynaRowSetTestCase.java | 46 +++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/src/test/org/apache/commons/beanutils/DynaRowSetTestCase.java b/src/test/org/apache/commons/beanutils/DynaRowSetTestCase.java
index 6de89af44..4fb22f328 100644
--- a/src/test/org/apache/commons/beanutils/DynaRowSetTestCase.java
+++ b/src/test/org/apache/commons/beanutils/DynaRowSetTestCase.java
@@ -20,6 +20,9 @@
 
 
 import java.math.BigDecimal;
+import java.sql.ResultSet;
+import java.sql.ResultSetMetaData;
+import java.sql.SQLException;
 import java.util.List;
 
 import junit.framework.TestCase;
@@ -240,4 +243,47 @@ public void testLimitedRows() throws Exception {
         assertEquals("limited row count", 3, rows.size());
         
     }
+
+    public void testInconsistent() throws Exception {
+
+        ResultSetMetaData metaData = TestResultSetMetaData.createProxy(new TestResultSetMetaDataInconsistent());
+        ResultSet resultSet = TestResultSet.createProxy(metaData);
+        
+        int dateColIdx = 4;
+        assertEquals("Meta Column Name",       "dateProperty",       metaData.getColumnName(dateColIdx));
+        assertEquals("Meta Column Class Name", "java.sql.Timestamp", metaData.getColumnClassName(dateColIdx));
+        assertEquals("ResultSet Value",        java.sql.Date.class,  resultSet.getObject("dateproperty").getClass());
+
+        RowSetDynaClass inconsistentDynaClass = new RowSetDynaClass(resultSet);
+        DynaBean firstRow = (DynaBean)inconsistentDynaClass.getRows().get(0);
+        DynaProperty dynaProperty = firstRow.getDynaClass().getDynaProperty("dateproperty");
+        assertEquals("DynaProperty Class", java.sql.Timestamp.class, dynaProperty.getType());
+        assertEquals("DynaBean Value",     java.sql.Timestamp.class, firstRow.get("dateproperty").getClass());
+    }
+
+    /**
+     * A proxy ResultSetMetaData implementation that returns a class name that
+     * is inconsistent with the type returned by the ResultSet.getObject() method.
+     *
+     * See issue# https://issues.apache.org/jira/browse/BEANUTILS-142 
+     */
+    private static class TestResultSetMetaDataInconsistent extends  TestResultSetMetaData {
+
+        /**
+         * This method substitues class names of "java.sql.Timestamp" with
+         * "java.sql.Date" to test inconsistent JDBC drivers.
+         *
+         * @param columnIndex The column index
+         * @return The column class name
+         * @throws SQLException if an error occurs
+         */
+        public String getColumnClassName(int columnIndex) throws SQLException {
+            String columnClassName = super.getColumnClassName(columnIndex);
+            if (java.sql.Date.class.getName().equals(columnClassName)) {
+                return java.sql.Timestamp.class.getName();
+            } else {
+                return columnClassName;
+            }
+        }
+    }
 }
