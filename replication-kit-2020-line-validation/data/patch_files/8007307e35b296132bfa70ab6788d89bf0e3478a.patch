From 8007307e35b296132bfa70ab6788d89bf0e3478a Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Wed, 7 Oct 2009 15:23:23 +0000
Subject: [PATCH] BEANUTILS-349 JDK 1.3 & 1.4 throw NullPointerException if
 null value for a primitive parameter (JDK 1.5+ throws
 IllegalArgumentException)

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@822777 13f79535-47bb-0310-9956-ffa450edef68
---
 .../commons/beanutils/PropertyUtilsBean.java  | 48 +++++++++++++++++--
 1 file changed, 44 insertions(+), 4 deletions(-)

diff --git a/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java b/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java
index 2609db5ad..d8e5e1d72 100644
--- a/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java
+++ b/src/java/org/apache/commons/beanutils/PropertyUtilsBean.java
@@ -2160,15 +2160,55 @@ private Object invokeMethod(
                             throws
                                 IllegalAccessException,
                                 InvocationTargetException {
+        if(bean == null) {
+            throw new IllegalArgumentException("No bean specified " +
+                "- this should have been checked before reaching this method");
+        }
+
         try {
             
             return method.invoke(bean, values);
         
-        } catch (IllegalArgumentException cause) {
-            if(bean == null) {
-                throw new IllegalArgumentException("No bean specified " +
-                    "- this should have been checked before reaching this method");
+        } catch (NullPointerException cause) {
+            // JDK 1.3 and JDK 1.4 throw NullPointerException if an argument is
+            // null for a primitive value (JDK 1.5+ throw IllegalArgumentException)
+            String valueString = "";
+            if (values != null) {
+                for (int i = 0; i < values.length; i++) {
+                    if (i>0) {
+                        valueString += ", " ;
+                    }
+                    if (values[i] == null) {
+                        valueString += "<null>";
+                    } else {
+                        valueString += (values[i]).getClass().getName();
+                    }
+                }
             }
+            String expectedString = "";
+            Class[] parTypes = method.getParameterTypes();
+            if (parTypes != null) {
+                for (int i = 0; i < parTypes.length; i++) {
+                    if (i > 0) {
+                        expectedString += ", ";
+                    }
+                    expectedString += parTypes[i].getName();
+                }
+            }
+            IllegalArgumentException e = new IllegalArgumentException(
+                "Cannot invoke " + method.getDeclaringClass().getName() + "." 
+                + method.getName() + " on bean class '" + bean.getClass() +
+                "' - " + cause.getMessage()
+                // as per https://issues.apache.org/jira/browse/BEANUTILS-224
+                + " - had objects of type \"" + valueString
+                + "\" but expected signature \""
+                +   expectedString + "\""
+                );
+            if (!BeanUtils.initCause(e, cause)) {
+                log.error("Method invocation failed", cause);
+            }
+            throw e;
+        } catch (IllegalArgumentException cause) {
             String valueString = "";
             if (values != null) {
                 for (int i = 0; i < values.length; i++) {
