From a9e8b82ae1b840f2f38be59b38a9df9ee8abfbc2 Mon Sep 17 00:00:00 2001
From: Oliver Heger <oheger@apache.org>
Date: Sat, 3 Feb 2007 16:19:15 +0000
Subject: [PATCH] CONFIGURATION-252: ConfigurationUtils.getFile() now always
 checks first whether the passed in file name is absolute.

git-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/configuration/trunk@503227 13f79535-47bb-0310-9956-ffa450edef68
---
 .../configuration/ConfigurationUtils.java     | 24 ++++++++++++++++++-
 .../configuration/TestConfigurationUtils.java |  5 +++-
 xdocs/changes.xml                             |  6 +++++
 3 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/src/java/org/apache/commons/configuration/ConfigurationUtils.java b/src/java/org/apache/commons/configuration/ConfigurationUtils.java
index a06691ae35..294dab54eb 100644
--- a/src/java/org/apache/commons/configuration/ConfigurationUtils.java
+++ b/src/java/org/apache/commons/configuration/ConfigurationUtils.java
@@ -595,7 +595,22 @@ static String getFileName(URL url)
      * Tries to convert the specified base path and file name into a file object.
      * This method is called e.g. by the save() methods of file based
      * configurations. The parameter strings can be relative files, absolute
-     * files and URLs as well.
+     * files and URLs as well. This implementation checks first whether the passed in
+     * file name is absolute. If this is the case, it is returned. Otherwise
+     * further checks are performed whether the base path and file name can be
+     * combined to a valid URL or a valid file name. <em>Note:</em> The test
+     * if the passed in file name is absolute is performed using
+     * <code>java.io.File.isAbsolute()</code>. If the file name starts with a
+     * slash, this method will return <b>true</b> on Unix, but <b>false</b> on
+     * Windows. So to ensure correct behavior for relative file names on all
+     * platforms you should never let relative paths start with a slash. E.g.
+     * in a configuration definition file do not use something like that:
+     * <pre>
+     * &lt;properties fileName="/subdir/my.properties"/&gt;
+     * </pre>
+     * Under Windows this path would be resolved relative to the configuration
+     * definition file. Under Unix this would be treated as an absolute path
+     * name.
      *
      * @param basePath the base path
      * @param fileName the file name
@@ -603,6 +618,13 @@ static String getFileName(URL url)
      */
     public static File getFile(String basePath, String fileName)
     {
+        // Check if the file name is absolute
+        File f = new File(fileName);
+        if (f.isAbsolute())
+        {
+            return f;
+        }
+
         // Check if URLs are involved
         URL url;
         try
diff --git a/src/test/org/apache/commons/configuration/TestConfigurationUtils.java b/src/test/org/apache/commons/configuration/TestConfigurationUtils.java
index fdc834ede1..dd42076e23 100644
--- a/src/test/org/apache/commons/configuration/TestConfigurationUtils.java
+++ b/src/test/org/apache/commons/configuration/TestConfigurationUtils.java
@@ -175,7 +175,7 @@ public void testAppend()
         expected.add("value2");
         ListAssert.assertEquals("'key2' property", expected, conf2.getList("key2"));
     }
-    
+
     public void testGetFile() throws Exception
     {
         File directory = new File("target");
@@ -186,6 +186,9 @@ public void testGetFile() throws Exception
         assertEquals(reference, ConfigurationUtils.getFile(directory.getAbsolutePath(), reference.getName()));        
         assertEquals(reference, ConfigurationUtils.getFile(directory.toURL().toString(), reference.getName()));
         assertEquals(reference, ConfigurationUtils.getFile("invalid", reference.toURL().toString()));
+        assertEquals(reference, ConfigurationUtils.getFile(
+                "jar:file:/C:/myjar.jar!/my-config.xml/someprops.properties",
+                reference.getAbsolutePath()));
     }
 
     public void testLocateWithNullTCCL() throws Exception
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 4879160e60..cd77f162f2 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -26,6 +26,12 @@
       <action dev="oheger" type="add">
         A pom for maven 2 was added.
       </action>
+      <action dev="oheger" type="update" issue="CONFIGURATION-252">
+        ConfigurationUtils.getFile() now always checks first whether the passed
+        in file name is absolute. If it is, this file will be returned. This
+        prevents that on Unix under certain circumstances absolute file names
+        are interpreted as relative ones.
+      </action>
       <action dev="oheger" type="update" issue="CONFIGURATION-251">
         The dependency to xml-apis was changed to the version 1.0.b2. The so
         far used version 2.0.2 is reported to be bogus.
