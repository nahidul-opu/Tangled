From 09fe956a62e19c160d0093f8fecf254c2bb6f0cb Mon Sep 17 00:00:00 2001
From: Phil Steitz <phil.steitz@gmail.com>
Date: Thu, 23 Jul 2015 20:35:25 -0400
Subject: [PATCH] Changed data size check to be positive length, not > 1 to fix
 ResizableDoubleArray constructor failure on input array of length 1.

JIRA: MATH-1252
Thanks to John Bay
---
 src/changes/changes.xml                                    | 5 ++++-
 .../apache/commons/math4/util/ResizableDoubleArray.java    | 2 +-
 .../commons/math4/util/ResizableDoubleArrayTest.java       | 7 +++++++
 3 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index b81ddcb10e..7d165a3fe1 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -54,6 +54,9 @@ If the output is not quite correct, check for invisible trailing spaces!
     </release>
 
     <release version="4.0" date="XXXX-XX-XX" description="">
+      <action dev="psteitz" type="fix" issue="MATH-1252 due-to="John Bay"> <!-- backported to 3.6 -->
+        ResizableDoubleArray constructor does not work with double array of size 1.
+      </action>
       <action dev="erans" type="fix" issue="MATH-1251"> <!-- backported to 3.6 -->
         Fixed initial value of "number of calls" counter in class "KohonenUpdateAction"
         (package "o.a.c.m.ml.neuralnet.sofm").
@@ -65,7 +68,7 @@ If the output is not quite correct, check for invisible trailing spaces!
       <action dev="erans" type="fix" issue="MATH-1248" due-to="Chris Popp"> <!-- backported to 3.6 -->
         Removed unnecessary allocations in "BigFraction" (package "o.a.c.m.fraction").
       </action>
-      <action dev="psteitz" type="fix" issue="MATH-1245">
+      <action dev="psteitz" type="fix" issue="MATH-1245"> <!-- backported to 3.6 -->
         Fixed error in computing discrete distribution of D statistics for small-sample
         2-sample Kolmogorov-Smirnov tests. Error was causing incorrect p-values returned 
         by exactP and monteCarloP methods (used by default for small, mid-size samples).
diff --git a/src/main/java/org/apache/commons/math4/util/ResizableDoubleArray.java b/src/main/java/org/apache/commons/math4/util/ResizableDoubleArray.java
index 6377141a09..7d9547c0f4 100644
--- a/src/main/java/org/apache/commons/math4/util/ResizableDoubleArray.java
+++ b/src/main/java/org/apache/commons/math4/util/ResizableDoubleArray.java
@@ -287,7 +287,7 @@ public ResizableDoubleArray(int initialCapacity,
         numElements = 0;
         startIndex = 0;
 
-        if (data != null && data.length > 1) {
+        if (data != null && data.length > 0) {
             addElements(data);
         }
     }
diff --git a/src/test/java/org/apache/commons/math4/util/ResizableDoubleArrayTest.java b/src/test/java/org/apache/commons/math4/util/ResizableDoubleArrayTest.java
index c7be6ea1f0..88392e1082 100644
--- a/src/test/java/org/apache/commons/math4/util/ResizableDoubleArrayTest.java
+++ b/src/test/java/org/apache/commons/math4/util/ResizableDoubleArrayTest.java
@@ -124,6 +124,13 @@ public void testConstructors() {
         ResizableDoubleArray copyDa = new ResizableDoubleArray(testDa);
         Assert.assertEquals(copyDa, testDa);
         Assert.assertEquals(testDa, copyDa);
+        
+        // JIRA: MATH-1252
+        final double[] values = {1};
+        testDa = new ResizableDoubleArray(values);
+        Assert.assertArrayEquals(values, testDa.getElements(), 0);
+        Assert.assertEquals(1, testDa.getNumElements());
+        Assert.assertEquals(1, testDa.getElement(0), 0);
     }
 
     @Test
