From 4576857e33fc0aa9682ba77a6e464213ec15b829 Mon Sep 17 00:00:00 2001
From: Niall Pemberton <niallp@apache.org>
Date: Tue, 20 Nov 2007 12:13:31 +0000
Subject: [PATCH] IO-136 HexDump's use of static StringBuffers isn't
 thread-safe

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@596642 13f79535-47bb-0310-9956-ffa450edef68
---
 src/java/org/apache/commons/io/HexDump.java | 12 ++++--------
 1 file changed, 4 insertions(+), 8 deletions(-)

diff --git a/src/java/org/apache/commons/io/HexDump.java b/src/java/org/apache/commons/io/HexDump.java
index a6a84abb52c..0759f663f8c 100644
--- a/src/java/org/apache/commons/io/HexDump.java
+++ b/src/java/org/apache/commons/io/HexDump.java
@@ -78,10 +78,10 @@ public static void dump(byte[] data, long offset,
             if (chars_read > 16) {
                 chars_read = 16;
             }
-            buffer.append(dump(display_offset)).append(' ');
+            dump(buffer, display_offset).append(' ');
             for (int k = 0; k < 16; k++) {
                 if (k < chars_read) {
-                    buffer.append(dump(data[k + j]));
+                    dump(buffer, data[k + j]);
                 } else {
                     buffer.append("  ");
                 }
@@ -107,8 +107,6 @@ public static void dump(byte[] data, long offset,
      */
     public static final String EOL =
             System.getProperty("line.separator");
-    private static final StringBuffer _lbuffer = new StringBuffer(8);
-    private static final StringBuffer _cbuffer = new StringBuffer(2);
     private static final char[] _hexcodes =
             {
                 '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
@@ -125,8 +123,7 @@ public static void dump(byte[] data, long offset,
      * @param value  the long value to be dumped
      * @return StringBuffer containing the dumped value.
      */
-    private static StringBuffer dump(long value) {
-        _lbuffer.setLength(0);
+    private static StringBuffer dump(StringBuffer _lbuffer, long value) {
         for (int j = 0; j < 8; j++) {
             _lbuffer
                     .append(_hexcodes[((int) (value >> _shifts[j])) & 15]);
@@ -140,8 +137,7 @@ private static StringBuffer dump(long value) {
      * @param value  the byte value to be dumped
      * @return StringBuffer containing the dumped value.
      */
-    private static StringBuffer dump(byte value) {
-        _cbuffer.setLength(0);
+    private static StringBuffer dump(StringBuffer _cbuffer, byte value) {
         for (int j = 0; j < 2; j++) {
             _cbuffer.append(_hexcodes[(value >> _shifts[j + 6]) & 15]);
         }
