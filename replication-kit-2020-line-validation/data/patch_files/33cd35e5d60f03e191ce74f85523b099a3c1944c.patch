From 33cd35e5d60f03e191ce74f85523b099a3c1944c Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Sun, 9 May 2010 20:38:20 +0000
Subject: [PATCH] COMPRESS-110 Support "ustar" prefix field Add support for
 identifying Pax headers

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@942617 13f79535-47bb-0310-9956-ffa450edef68
---
 .../archivers/tar/TarArchiveEntry.java        | 14 +++++++++
 .../compress/archivers/tar/TarConstants.java  | 29 ++++++++++++++++---
 2 files changed, 39 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
index e225651ed7b..8f4229e70fa 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
@@ -536,6 +536,15 @@ public boolean isGNULongNameEntry() {
             && name.toString().equals(GNU_LONGLINK);
     }
 
+    /**
+     * Check if this is a Pax header.
+     * 
+     * @return <code>true</code> if this is a Pax header.
+     */
+    public boolean isPaxHeader(){
+        return linkFlag == LF_PAX_EXTENDED_HEADER || linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER;
+    }
+
     /**
      * Return whether or not this entry represents a directory.
      *
@@ -652,6 +661,11 @@ public void parseTarHeader(byte[] header) {
         devMajor = (int) TarUtils.parseOctal(header, offset, DEVLEN);
         offset += DEVLEN;
         devMinor = (int) TarUtils.parseOctal(header, offset, DEVLEN);
+        offset += DEVLEN;
+        String prefix = TarUtils.parseName(header, offset, PREFIXLEN);
+        if (prefix.length() >0){
+            name = prefix + "/" + name;
+        }
     }
 
     /**
diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java
index 8abf3d3a9d3..cb8309fd516 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java
@@ -146,6 +146,23 @@ public interface TarConstants {
      */
     byte   LF_CONTIG = (byte) '7';
 
+    /**
+     * Identifies the *next* file on the tape as having a long name.
+     */
+    byte LF_GNUTYPE_LONGNAME = (byte) 'L';
+
+    // See "http://www.opengroup.org/onlinepubs/009695399/utilities/pax.html#tag_04_100_13_02"
+
+    /**
+     * Identifies the entry as a Pax extended header.
+     */
+    byte LF_PAX_EXTENDED_HEADER = (byte) 'x';
+    
+    /**
+     * Identifies the entry as a Pax global extended header.
+     */
+    byte LF_PAX_GLOBAL_EXTENDED_HEADER = (byte) 'g';
+    
     /**
      * The magic tag representing a POSIX tar archive.
      */
@@ -161,12 +178,16 @@ public interface TarConstants {
     String VERSION_GNU_ZERO  = "0\0";
 
     /**
-     * The name of the GNU tar entry which contains a long name.
+     * The magic tag representing an Ant tar archive.
      */
-    String GNU_LONGLINK = "././@LongLink"; // TODO rename as LONGLINK_GNU ?
+    String MAGIC_ANT = "ustar\0";
+    // Does not appear to have a version, however Ant does write 8 bytes,
+    // so assume the version is 2 nulls
+    String VERSION_ANT = "\0\0";
 
     /**
-     * Identifies the *next* file on the tape as having a long name.
+     * The name of the GNU tar entry which contains a long name.
      */
-    byte LF_GNUTYPE_LONGNAME = (byte) 'L';
+    String GNU_LONGLINK = "././@LongLink"; // TODO rename as LONGLINK_GNU ?
+
 }
