From 7930b8cf42e1aa1b5958268dc3383bd966e28b29 Mon Sep 17 00:00:00 2001
From: Xavier Hanin <xavier@apache.org>
Date: Tue, 13 Nov 2007 11:11:12 +0000
Subject: [PATCH] FIX: Bad IvyContext scope causing memory leak and bad
 handling of subproject builds (IVY-639) -> fix a bug in the way problems were
 handled: consolidating problems from the stack doesn't work since the stack
 may have been cleared before sumupProblems is called

git-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/core/trunk@594484 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/ivy/util/MessageLoggerEngine.java  | 46 ++++++++-----------
 1 file changed, 20 insertions(+), 26 deletions(-)

diff --git a/src/java/org/apache/ivy/util/MessageLoggerEngine.java b/src/java/org/apache/ivy/util/MessageLoggerEngine.java
index 4a9728b04..4e1481733 100644
--- a/src/java/org/apache/ivy/util/MessageLoggerEngine.java
+++ b/src/java/org/apache/ivy/util/MessageLoggerEngine.java
@@ -37,6 +37,12 @@ public class MessageLoggerEngine implements MessageLogger {
     private final Stack/*<MessageLogger>*/ loggerStack = new Stack();
     
     private MessageLogger defaultLogger = Message.getDefaultLogger();
+
+    private List problems = new ArrayList();
+
+    private List warns = new ArrayList();
+
+    private List errors = new ArrayList();
     
     public MessageLoggerEngine() {
     }
@@ -87,34 +93,27 @@ private MessageLogger peekLogger() {
     }
 
     // consolidated methods
+    public void warn(String msg) {
+        peekLogger().warn(msg);
+        problems.add("WARN:  " + msg);
+        warns.add(msg);
+    }
     
+    public void error(String msg) {
+        peekLogger().error(msg);
+        problems.add("\tERROR: " + msg);
+        errors.add(msg);
+    }
+
     public List getErrors() {
-        List errors = new ArrayList();
-        errors.addAll(defaultLogger.getErrors());
-        for (Iterator iter = loggerStack.iterator(); iter.hasNext();) {
-            MessageLogger l = (MessageLogger) iter.next();
-            errors.addAll(l.getErrors());
-        }
         return errors;
     }
 
     public List getProblems() {
-        List problems = new ArrayList();
-        problems.addAll(defaultLogger.getProblems());
-        for (Iterator iter = loggerStack.iterator(); iter.hasNext();) {
-            MessageLogger l = (MessageLogger) iter.next();
-            problems.addAll(l.getProblems());
-        }
         return problems;
     }
 
     public List getWarns() {
-        List warns = new ArrayList();
-        warns.addAll(defaultLogger.getWarns());
-        for (Iterator iter = loggerStack.iterator(); iter.hasNext();) {
-            MessageLogger l = (MessageLogger) iter.next();
-            warns.addAll(l.getWarns());
-        }
         return warns;
     }
 
@@ -129,6 +128,9 @@ public void clearProblems() {
             MessageLogger l = (MessageLogger) iter.next();
             l.clearProblems();
         }
+        problems.clear();
+        errors.clear();
+        warns.clear();
     }
 
     public void setShowProgress(boolean progress) {
@@ -163,10 +165,6 @@ public void endProgress(String msg) {
         peekLogger().endProgress(msg);
     }
 
-    public void error(String msg) {
-        peekLogger().error(msg);
-    }
-
     public void info(String msg) {
         peekLogger().info(msg);
     }
@@ -191,9 +189,5 @@ public void verbose(String msg) {
         peekLogger().verbose(msg);
     }
 
-    public void warn(String msg) {
-        peekLogger().warn(msg);
-    }
-
     
 }
