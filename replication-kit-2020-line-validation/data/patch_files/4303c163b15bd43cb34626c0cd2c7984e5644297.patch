From 4303c163b15bd43cb34626c0cd2c7984e5644297 Mon Sep 17 00:00:00 2001
From: Thomas Neidhart <tn@apache.org>
Date: Thu, 26 Jul 2012 20:50:27 +0000
Subject: [PATCH] Add change for 3.2.2 also for 4.0 release, fix javadoc for
 COLLECTIONS-331.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366195 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                        | 18 ++++++++++++++++++
 .../iterators/CollatingIterator.java           |  4 ++--
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 1a5eec56cd..f3ab46c975 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -35,6 +35,24 @@
       Changed behavior of "CaseInsensitiveMap" constructor to be compliant with "HashMap"
       in case the initial capacity is set to zero.
     </action>
+    <action dev="jochen" issue="COLLECTIONS-334" type="fix" due-to="sebb">
+      Synchronized access to lock in "StaticBucketMap#size()".
+    </action>
+    <action dev="jochen" issue="COLLECTIONS-335" type="fix" due-to="sebb">
+      Fixed cache assignment for "TreeBidiMap#entrySet".
+    </action>
+    <action dev="jochen" issue="COLLECTIONS-332" type="fix" due-to="Tom Parker">
+      Added clarification to javadoc of "ListOrderedMap" that "IdentityMap" and
+      "CaseInsensitiveMap" are not supported.
+    </action>
+    <action dev="jochen" issue="COLLECTIONS-360" type="fix" due-to="Sai Zhang">
+      "FilterListIterator#hasNext" does not throw a NullPointerException anymore
+      to comply to the Java iterator specification.
+    </action>
+    <action dev="jochen" issue="COLLECTIONS-331" type="fix" due-to="Michael Krkoska">
+      Improve javadoc of "CollatingIterator" wrt the used "Comparator" and throw a
+      NullPointerException in "CollatingIterator#least" if no comparator is set.
+    </action>
   </release>
   </body>
 </document>
diff --git a/src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java b/src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java
index 84353d750b..4bcb55c881 100644
--- a/src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java
+++ b/src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java
@@ -346,7 +346,7 @@ private void checkNotStarted() throws IllegalStateException {
      * Returns the index of the least element in {@link #values},
      * {@link #set(int) setting} any uninitialized values.
      * 
-     * @throws IllegalStateException
+     * @throws NullPointerException if no comparator is set
      */
     private int least() {
         int leastIndex = -1;
@@ -362,7 +362,7 @@ private int least() {
                 } else {
                     E curObject = values.get(i);
                     if (comparator == null) {
-                        throw new NullPointerException("You must invoke setComparator() to set a compator first.");
+                        throw new NullPointerException("You must invoke setComparator() to set a comparator first.");
                     }
                     if (comparator.compare(curObject, leastObject) < 0) {
                         leastObject = curObject;
