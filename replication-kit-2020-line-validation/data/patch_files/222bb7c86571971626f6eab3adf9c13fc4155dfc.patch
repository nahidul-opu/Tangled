From 222bb7c86571971626f6eab3adf9c13fc4155dfc Mon Sep 17 00:00:00 2001
From: Sebastian Bazley <sebb@apache.org>
Date: Mon, 5 Jan 2015 00:42:07 +0000
Subject: [PATCH] VALIDATOR-339 - URLValidator fails validating domain names
 with a trailing period, which are valid.

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/validator/trunk@1649450 13f79535-47bb-0310-9956-ffa450edef68
---
 RELEASE-NOTES.txt                                     |  2 ++
 src/changes/changes.xml                               |  3 +++
 .../commons/validator/routines/DomainValidator.java   |  3 ++-
 .../commons/validator/routines/UrlValidatorTest.java  | 11 ++++++++++-
 4 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index d8ebb5d06..95f485423 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -79,6 +79,8 @@ BUGS FROM PREVIOUS RELEASE
                      Also "um" and "yu" as they are currently "Not assigned"
  * [VALIDATOR-306] - DomainValidator accepts labels longer than 63 chars and domain name lengths exceeding 255 chars
                      Thanks to Jukka Timonen
+ * [VALIDATOR-339] - URLValidator fails validating domain names with a trailing period, which are valid.
+                     Thanks to Alex Blume
 
 IMPROVEMENTS OVER PREVIOUS RELEASE
 ===================================
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 3130fb251..a9ff34592 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -43,6 +43,9 @@ The <action> type attribute can be add,update,fix,remove.
   <body>
 
   <release version="1.4.1" date="tba" description="1.4 Maintenance release">
+    <action issue="VALIDATOR-339" dev="sebb" type="fix" due-to="Alex Blume">
+     URLValidator fails validating domain names with a trailing period, which are valid.
+    </action>
     <action issue="VALIDATOR-306" dev="sebb" type="fix" due-to="Jukka Timonen">
      DomainValidator accepts labels longer than 63 chars and domain name lengths exceeding 255 chars
     </action>
diff --git a/src/main/java/org/apache/commons/validator/routines/DomainValidator.java b/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
index 17198013d..d811f41ee 100644
--- a/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
+++ b/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
@@ -74,8 +74,9 @@ public class DomainValidator implements Serializable {
     // Max 63 characters
     private static final String TOP_LABEL_REGEX = "\\p{Alpha}(?>[\\p{Alnum}-]{0,61}\\p{Alnum})?";
 
+    // RFC2396 hostname = *( domainlabel "." ) toplabel [ "." ]
     private static final String DOMAIN_NAME_REGEX =
-            "^(?:" + DOMAIN_LABEL_REGEX + "\\.)+" + "(" + TOP_LABEL_REGEX + ")$";
+            "^(?:" + DOMAIN_LABEL_REGEX + "\\.)+" + "(" + TOP_LABEL_REGEX + ")\\.?$";
 
     private final boolean allowLocal;
 
diff --git a/src/test/java/org/apache/commons/validator/routines/UrlValidatorTest.java b/src/test/java/org/apache/commons/validator/routines/UrlValidatorTest.java
index 743f382cf..5eb16722e 100644
--- a/src/test/java/org/apache/commons/validator/routines/UrlValidatorTest.java
+++ b/src/test/java/org/apache/commons/validator/routines/UrlValidatorTest.java
@@ -271,7 +271,16 @@ public void testValidator309() {
         assertTrue(urlValidator.isValid("httpS://SAMPLE.ONEMAND.COM/"));
     }
 
-   static boolean incrementTestPartsIndex(int[] testPartsIndex, Object[] testParts) {
+    public void testValidator339(){
+        UrlValidator urlValidator = new UrlValidator();
+        assertTrue(urlValidator.isValid("http://www.cnn.com/WORLD/?hpt=sitenav")); // without
+        assertTrue(urlValidator.isValid("http://www.cnn.com./WORLD/?hpt=sitenav")); // with
+        assertFalse(urlValidator.isValid("http://www.cnn.com../")); // doubly dotty
+        assertFalse(urlValidator.isValid("http://www.cnn.invalid/"));
+        assertFalse(urlValidator.isValid("http://www.cnn.invalid./")); // check . does not affect invalid domains
+    }
+
+    static boolean incrementTestPartsIndex(int[] testPartsIndex, Object[] testParts) {
       boolean carry = true;  //add 1 to lowest order part.
       boolean maxIndex = true;
       for (int testPartsIndexIndex = testPartsIndex.length - 1; testPartsIndexIndex >= 0; --testPartsIndexIndex) {
