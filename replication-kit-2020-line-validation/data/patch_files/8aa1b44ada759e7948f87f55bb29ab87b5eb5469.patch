From 8aa1b44ada759e7948f87f55bb29ab87b5eb5469 Mon Sep 17 00:00:00 2001
From: Benedikt Ritter <britter@apache.org>
Date: Fri, 13 Mar 2015 20:29:06 +0000
Subject: [PATCH] LANG-1092: Wrong formating of time zones with daylight saving
 time in FastDatePrinter

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1666568 13f79535-47bb-0310-9956-ffa450edef68
---
 src/changes/changes.xml                       |  1 +
 .../commons/lang3/time/FastDatePrinter.java   |  3 +--
 .../lang3/time/FastDatePrinterTest.java       | 25 +++++++++----------
 3 files changed, 14 insertions(+), 15 deletions(-)

diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index dff9fccc9f3..70d54dc59bd 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,7 @@
   <body>
 
   <release version="3.4" date="tba" description="tba">
+    <action issue="LANG-1092" type="add" dev="britter">Wrong formating of time zones with daylight saving time in FastDatePrinter</action>
     <action issue="LANG-877" type="add" dev="britter" due-to="Fabian Lange">Performance improvements for StringEscapeUtils</action>
     <action issue="LANG-1093" type="add" dev="britter" due-to="Fabian Lange">Add ClassUtils.getAbbreviatedName()</action>
     <action issue="LANG-1090" type="fix" dev="sebb">FastDateParser does not set error indication in ParsePosition</action>
diff --git a/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java b/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
index 31c14bfe611..0a15016ef14 100644
--- a/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
+++ b/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
@@ -1162,8 +1162,7 @@ public int estimateLength() {
         @Override
         public void appendTo(final StringBuffer buffer, final Calendar calendar) {
             final TimeZone zone = calendar.getTimeZone();
-            if (zone.useDaylightTime()
-                    && calendar.get(Calendar.DST_OFFSET) != 0) {
+            if (calendar.get(Calendar.DST_OFFSET) != 0) {
                 buffer.append(getTimeZoneDisplay(zone, true, mStyle, mLocale));
             } else {
                 buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));
diff --git a/src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java b/src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
index 5b7fc257de6..291591344f3 100644
--- a/src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
+++ b/src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java
@@ -265,23 +265,22 @@ public void testCalendarTimezoneRespected() {
         final String[] availableZones = TimeZone.getAvailableIDs();
         final TimeZone currentZone = TimeZone.getDefault();
         
-        TimeZone anotherZone = null;
         for (final String zone : availableZones) {
             if (!zone.equals(currentZone.getID())) {
-                anotherZone = TimeZone.getTimeZone(zone);
+                TimeZone anotherZone = TimeZone.getTimeZone(zone);
+
+                assertNotNull("Cannot find another timezone", anotherZone);
+                
+                final String pattern = "h:mma z";
+                final Calendar cal = Calendar.getInstance(anotherZone);
+                
+                final SimpleDateFormat sdf = new SimpleDateFormat(pattern);
+                sdf.setTimeZone(anotherZone);
+                final String expectedValue = sdf.format(cal.getTime());
+                final String actualValue = FastDateFormat.getInstance(pattern).format(cal);
+                assertEquals(expectedValue, actualValue);
             }
         }
-        
-        assertNotNull("Cannot find another timezone", anotherZone);
-        
-        final String pattern = "h:mma z";
-        final Calendar cal = Calendar.getInstance(anotherZone);
-        
-        final SimpleDateFormat sdf = new SimpleDateFormat(pattern);
-        sdf.setTimeZone(anotherZone);
-        final String expectedValue = sdf.format(cal.getTime());
-        final String actualValue = FastDateFormat.getInstance(pattern).format(cal);
-        assertEquals(expectedValue, actualValue);
     }
     
     @Test
