From 73c4065d785fd25e363077e735b96b02fa64b810 Mon Sep 17 00:00:00 2001
From: Maarten Coene <maartenc@apache.org>
Date: Mon, 20 Oct 2008 22:45:13 +0000
Subject: [PATCH] FIX: Correctly set ivy.resolved.configurations property when
 the conf string includes a negation operator (IVY-951) (thanks to Patrick
 Woodworth)

git-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@706440 13f79535-47bb-0310-9956-ffa450edef68
---
 CHANGES.txt                                   |  1 +
 src/java/org/apache/ivy/ant/IvyResolve.java   | 26 +++++--------------
 .../org/apache/ivy/ant/IvyResolveTest.java    |  4 +++
 3 files changed, 12 insertions(+), 19 deletions(-)

diff --git a/CHANGES.txt b/CHANGES.txt
index b7e319aa0..330c781ec 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -109,6 +109,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br
 - FIX: cachefileset produces an empty fileset when the cache refers to libs in directories that only have the root directory in common (IVY-948) (thanks to Chris Wood)
 - FIX: Extra Attributes specified in the Dependency's Module Descriptor are not available to resolvers (IVY-929) (thanks to Scott Hebert)
 - FIX: Support for passing arbitrary arguments to the -main invoked class when using the standalone mode is severely limited (IVY-952) (thanks to Patrick Woodworth)
+- FIX: Correctly set ivy.resolved.configurations property when the conf string includes a negation operator (IVY-951) (thanks to Patrick Woodworth)
 
    2.0.0-rc1
 =====================================
diff --git a/src/java/org/apache/ivy/ant/IvyResolve.java b/src/java/org/apache/ivy/ant/IvyResolve.java
index e2dbf1348..52caf6bd5 100644
--- a/src/java/org/apache/ivy/ant/IvyResolve.java
+++ b/src/java/org/apache/ivy/ant/IvyResolve.java
@@ -242,6 +242,7 @@ public void doExecute() throws BuildException {
                 }
             }
             setResolved(report, resolveId, isKeep());
+            confs = report.getConfigurations();
 
             if (isKeep()) {
                 ModuleDescriptor md = report.getModuleDescriptor();
@@ -264,15 +265,8 @@ public void doExecute() throws BuildException {
                     getProject().setProperty("ivy.deps.changed", hasChanged.toString());
                     settings.setVariable("ivy.deps.changed", hasChanged.toString());
                 }
-                if (conf.trim().equals("*")) {
-                    getProject().setProperty("ivy.resolved.configurations",
-                        mergeConfs(md.getConfigurationsNames()));
-                    settings.setVariable("ivy.resolved.configurations", mergeConfs(md
-                            .getConfigurationsNames()));
-                } else {
-                    getProject().setProperty("ivy.resolved.configurations", conf);
-                    settings.setVariable("ivy.resolved.configurations", conf);
-                }
+                getProject().setProperty("ivy.resolved.configurations", mergeConfs(confs));
+                settings.setVariable("ivy.resolved.configurations", mergeConfs(confs));
                 if (file != null) {
                     getProject().setProperty("ivy.resolved.file", file.getAbsolutePath());
                     settings.setVariable("ivy.resolved.file", file.getAbsolutePath());
@@ -297,16 +291,10 @@ public void doExecute() throws BuildException {
                         settings.setVariable("ivy.deps.changed." + resolveId, 
                             hasChanged.toString());
                     }
-                    if (conf.trim().equals("*")) {
-                        getProject().setProperty("ivy.resolved.configurations." + resolveId,
-                            mergeConfs(md.getConfigurationsNames()));
-                        settings.setVariable("ivy.resolved.configurations." + resolveId,
-                            mergeConfs(md.getConfigurationsNames()));
-                    } else {
-                        getProject()
-                                .setProperty("ivy.resolved.configurations." + resolveId, conf);
-                        settings.setVariable("ivy.resolved.configurations." + resolveId, conf);
-                    }
+                    getProject().setProperty("ivy.resolved.configurations." + resolveId,
+                        mergeConfs(confs));
+                    settings.setVariable("ivy.resolved.configurations." + resolveId,
+                        mergeConfs(confs));
                     if (file != null) {
                         getProject().setProperty("ivy.resolved.file." + resolveId,
                             file.getAbsolutePath());
diff --git a/test/java/org/apache/ivy/ant/IvyResolveTest.java b/test/java/org/apache/ivy/ant/IvyResolveTest.java
index 3246f96e7..96b64b8a0 100644
--- a/test/java/org/apache/ivy/ant/IvyResolveTest.java
+++ b/test/java/org/apache/ivy/ant/IvyResolveTest.java
@@ -397,6 +397,10 @@ public void testExcludedConf() throws Exception {
             ModuleRevisionId.newInstance("org1", "mod1.1", "2.0")).exists());
         assertFalse(getIvyFileInCache(
             ModuleRevisionId.newInstance("org1", "mod1.2", "2.0")).exists());
+
+        // test the properties
+        Project project = resolve.getProject();
+        assertFalse(project.getProperty("ivy.resolved.configurations").indexOf("default") > -1);
     }
 
     public void testResolveWithAbsoluteFile() {
