From b88b065aa955d7a7d8f74c427b05d2243eda0779 Mon Sep 17 00:00:00 2001
From: Stephan Fuhrmann <s@sfuhrm.de>
Date: Tue, 12 Jun 2018 15:43:42 -0600
Subject: [PATCH] [COLLECTIONS-673] ListUtils.partition potential integer
 overflow. Applied patch with reformatting.

---
 src/main/java/org/apache/commons/collections4/ListUtils.java  | 2 +-
 .../java/org/apache/commons/collections4/ListUtilsTest.java   | 4 ++++
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/main/java/org/apache/commons/collections4/ListUtils.java b/src/main/java/org/apache/commons/collections4/ListUtils.java
index 12201a6b6f..4d528473f6 100644
--- a/src/main/java/org/apache/commons/collections4/ListUtils.java
+++ b/src/main/java/org/apache/commons/collections4/ListUtils.java
@@ -688,7 +688,7 @@ public List<T> get(final int index) {
 
         @Override
         public int size() {
-            return (list.size() + size - 1) / size;
+            return (int) Math.ceil((double) list.size() / (double) size);
         }
 
         @Override
diff --git a/src/test/java/org/apache/commons/collections4/ListUtilsTest.java b/src/test/java/org/apache/commons/collections4/ListUtilsTest.java
index 69747b7cf4..8a23039d82 100644
--- a/src/test/java/org/apache/commons/collections4/ListUtilsTest.java
+++ b/src/test/java/org/apache/commons/collections4/ListUtilsTest.java
@@ -425,6 +425,10 @@ public void testPartition() {
             fail("failed to check for size argument");
         } catch (final IllegalArgumentException e) {}
 
+        List<List<Integer>> partitionMax = ListUtils.partition(strings, Integer.MAX_VALUE);
+        assertEquals(1, partitionMax.size());
+        assertEquals(strings.size(), partitionMax.get(0).size());
+        assertEquals(strings, partitionMax.get(0));
     }
 
     private static Predicate<Number> EQUALS_TWO = new Predicate<Number>() {
