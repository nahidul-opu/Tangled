From 5f029f691332139ea0bb0e938b90799d74806a93 Mon Sep 17 00:00:00 2001
From: Emmanuel Bourg <ebourg@apache.org>
Date: Sat, 7 Mar 2015 00:23:06 +0000
Subject: [PATCH] =?UTF-8?q?The=20verifier=20now=20checks=20if=20methods=20?=
 =?UTF-8?q?with=20a=20void=20return=20type=20attempt=20to=20return=20an=20?=
 =?UTF-8?q?object.=20Thanks=20to=20J=C3=A9r=C3=B4me=20Leroux=20(BCEL-184)?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1664767 13f79535-47bb-0310-9956-ffa450edef68
---
 RELEASE-NOTES.txt                             |   2 +-
 src/changes/changes.xml                       |   3 +
 .../structurals/InstConstraintVisitor.java    |   3 +
 .../verifier/AbstractVerifierTestCase.java    |  94 ++++++++++++++++++
 .../bcel/verifier/VerifierReturnTestCase.java |  26 +++++
 .../bcel/verifier/tests/TestReturn01.class    | Bin 0 -> 423 bytes
 6 files changed, 127 insertions(+), 1 deletion(-)
 create mode 100644 src/test/java/org/apache/bcel/verifier/AbstractVerifierTestCase.java
 create mode 100644 src/test/java/org/apache/bcel/verifier/VerifierReturnTestCase.java
 create mode 100644 src/test/resources/org/apache/bcel/verifier/tests/TestReturn01.class

diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index 8c2f51c521..32fbbe7ee2 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -99,11 +99,11 @@ Bug fixes from 5.2
 [BCEL-174] Verification of interfaces with default methods fails with Java 8
 [BCEL-177] MethodParameters should read 1 byte not two for parameter count
 [BCEL-181] ClassLoaderRepository.loadClass(String) leaks input streams
+[BCEL-184] JustIce verifier does not check correctly the returned value of a method
 [BCEL-194] LocalVariableGen hashCode() function is incorrrect
 [BCEL-197] Add support for TypeVariables to Utility.signatureToString()
 [BCEL-207] MethodGen.removeLocalVariable(s) doesn't remove the associated Targetters
 
-
 Feedback
 --------
 
diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 59efe6400b..2b78212921 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -63,6 +63,9 @@ The <action> type attribute can be add,update,fix,remove.
 
   <body>
     <release version="6.0" date="TBA" description="Major release with Java 7 and 8 support">
+      <action issue="BCEL-184" type="fix" due-to="Jérôme Leroux">
+        The verifier now checks if methods with a void return type attempt to return an object.
+      </action>
       <action issue="BCEL-207" type="fix" due-to="Mark Roberts">
         MethodGen.removeLocalVariable now properly unreference the removed variable
         from the targetters of the instruction handlers delimiting the scope of the variable.
diff --git a/src/main/java/org/apache/bcel/verifier/structurals/InstConstraintVisitor.java b/src/main/java/org/apache/bcel/verifier/structurals/InstConstraintVisitor.java
index 84ecf30fef..dd9249025f 100644
--- a/src/main/java/org/apache/bcel/verifier/structurals/InstConstraintVisitor.java
+++ b/src/main/java/org/apache/bcel/verifier/structurals/InstConstraintVisitor.java
@@ -413,6 +413,9 @@ public void visitReturnInstruction(ReturnInstruction o){
             }
         }
         if (o instanceof ARETURN){
+            if (method_type == Type.VOID){
+                constraintViolated(o, "ARETURN instruction in void method.");
+            }
             if (stack().peek() == Type.NULL){
                 return;
             }
diff --git a/src/test/java/org/apache/bcel/verifier/AbstractVerifierTestCase.java b/src/test/java/org/apache/bcel/verifier/AbstractVerifierTestCase.java
new file mode 100644
index 0000000000..9eab88d9d7
--- /dev/null
+++ b/src/test/java/org/apache/bcel/verifier/AbstractVerifierTestCase.java
@@ -0,0 +1,94 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * 
+ */
+
+package org.apache.bcel.verifier;
+
+import junit.framework.TestCase;
+
+import org.apache.bcel.Repository;
+import org.apache.bcel.classfile.JavaClass;
+
+public abstract class AbstractVerifierTestCase extends TestCase {
+
+    public static final String TEST_PACKAGE = "org.apache.bcel.verifier.tests.";
+
+    /**
+     * Asserts that the verification of the given class is OK. If it isn't it throws an AssertionFailedError with the given message.
+     *
+     * @param classname simple classname of the class to verify
+     * @param message   message displayed if assertion fails
+     */
+    public void assertVerifyOK(String classname, String message) {
+        final String testClassname = TEST_PACKAGE + classname;
+        assertTrue(message, doAllPasses(testClassname));
+    }
+
+    /**
+     * Asserts that the verification of the given class is rejected. If it isn't it throws an AssertionFailedError with the given message.
+     *
+     * @param classname simple classname of the class to verify
+     * @param message   message displayed if assertion fails
+     */
+    public void assertVerifyRejected(String classname, String message) {
+        final String testClassname = TEST_PACKAGE + classname;
+        assertFalse(message, doAllPasses(testClassname));
+    }
+
+    /**
+     * Executes all the verification on the given class.
+     *
+     * @param classname name of the class to verify
+     * @return false if the verification fails, true otherwise
+     */
+    public boolean doAllPasses(String classname) {
+        int nbMethods = 0;
+
+        try {
+            JavaClass jc = Repository.lookupClass(classname);
+            nbMethods = jc.getMethods().length;
+        } catch (ClassNotFoundException e) {
+            fail(e.getMessage());
+            return false;
+        }
+
+        Verifier verifier = VerifierFactory.getVerifier(classname);
+        VerificationResult result = verifier.doPass1();
+        if (result.getStatus() != VerificationResult.VERIFIED_OK) {
+            return false;
+        }
+
+        result = verifier.doPass2();
+        if (result.getStatus() != VerificationResult.VERIFIED_OK) {
+            return false;
+        }
+
+        for (int i = nbMethods; --i >= 0; ) {
+            result = verifier.doPass3a(i);
+            if (result.getStatus() != VerificationResult.VERIFIED_OK) {
+                return false;
+            }
+            result = verifier.doPass3b(i);
+            if (result.getStatus() != VerificationResult.VERIFIED_OK) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+}
diff --git a/src/test/java/org/apache/bcel/verifier/VerifierReturnTestCase.java b/src/test/java/org/apache/bcel/verifier/VerifierReturnTestCase.java
new file mode 100644
index 0000000000..190c03ed54
--- /dev/null
+++ b/src/test/java/org/apache/bcel/verifier/VerifierReturnTestCase.java
@@ -0,0 +1,26 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.bcel.verifier;
+
+public class VerifierReturnTestCase extends AbstractVerifierTestCase {
+
+    public void testInvalidReturn() {
+        assertVerifyRejected("TestReturn01", "Verification of a void method that returns an object must fail.");
+    }
+
+}
diff --git a/src/test/resources/org/apache/bcel/verifier/tests/TestReturn01.class b/src/test/resources/org/apache/bcel/verifier/tests/TestReturn01.class
new file mode 100644
index 0000000000000000000000000000000000000000..33020b263b11dd2fd8e5c76cbe300e1baae65f95
GIT binary patch
literal 423
zcmb7A%TB{E5F96IlZHY|_yTS`1O{>F0mKD~Qv?!Jl{h-VZC!-~IZ3|@PDmi}0elo<
z5*|X_IC#gqJ3Bk}+xzn?fFo@9a0GS>JCo{OrE@KlRA+Ljt(h8aWu?oilw-y#UDY-}
zIP~EO3>RvtWTx_&yi684tpvI!CO6fofV;Il5%A86TOGnhua6G80)yD(`l7x|v>mG?
z(*jXkq$-;zYnuG4=v8x53hc%Iuyo9&)1nX%JW>4D8{6S^QQK6Xn`ZC&@8|3{Y;1xO
z{1Cw5jeZ$@W|Am~ot-BHk8L|-Y}(+!3S<A1KwM?k!`jdAs1;-F1?~;!@j!xuMj#}D
T8v+h|iv$!JV8}Wxw#?`Q6a7}f

literal 0
HcmV?d00001

