From ce0400b710925754e6f7b3fde6419bbc401a62bf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rn=20Kottmann?= <joern@apache.org>
Date: Mon, 21 Nov 2011 13:20:21 +0000
Subject: [PATCH] OPENNLP-395 Clear adaptive data flag is now set correctly for
 every new document

git-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1204485 13f79535-47bb-0310-9956-ffa450edef68
---
 .../opennlp/uima/namefind/NameFinderTrainer.java    | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinderTrainer.java b/opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinderTrainer.java
index 79938e9b3..5b8c9e3b6 100644
--- a/opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinderTrainer.java
+++ b/opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinderTrainer.java
@@ -296,12 +296,17 @@ private static Span[] createNames(List<AnnotationFS> tokenList, List<AnnotationF
     return nameList.toArray(new Span[nameList.size()]);
   }
   
+  /**
+   * Process the given CAS object.
+   */
   /**
    * Process the given CAS object.
    */
   public void processCas(CAS cas) {
     FSIndex<AnnotationFS> sentenceIndex = cas.getAnnotationIndex(sentenceType);
-
+    
+    boolean isClearAdaptiveData = true;
+    
     for (AnnotationFS sentenceAnnotation : sentenceIndex) {
       ContainingConstraint sentenceContainingConstraint = new ContainingConstraint(
           sentenceAnnotation);
@@ -327,10 +332,14 @@ public void processCas(CAS cas) {
         tokenArray[i] = tokenList.get(i).getCoveredText();
       }
 
-      NameSample trainingSentence = new NameSample(tokenArray, names, null, false);
+      NameSample trainingSentence = new NameSample(tokenArray, names, null, isClearAdaptiveData);
 
       if (trainingSentence.getSentence().length != 0) {
         nameFinderSamples.add(trainingSentence);
+        
+        if (isClearAdaptiveData) {
+          isClearAdaptiveData = false;
+        }
       } else {
         if (logger.isLoggable(Level.INFO)) {
           logger.log(Level.INFO, "Sentence without tokens: " +
