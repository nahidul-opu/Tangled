From 70101ee3ca37b56a471b3731667c75c447da90cb Mon Sep 17 00:00:00 2001
From: Gilles Sadowski <erans@apache.org>
Date: Tue, 15 Apr 2014 12:22:31 +0000
Subject: [PATCH] MATH-1118 Equality of double values in accordance with the
 semantics of "java.lang.Double".

git-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1587548 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/commons/math3/util/MathUtils.java  | 12 ++++++++++++
 .../commons/math3/util/MathUtilsTest.java     | 19 ++++++++++++++++++-
 2 files changed, 30 insertions(+), 1 deletion(-)

diff --git a/src/main/java/org/apache/commons/math3/util/MathUtils.java b/src/main/java/org/apache/commons/math3/util/MathUtils.java
index 494d2ef1e1..047cd3fe68 100644
--- a/src/main/java/org/apache/commons/math3/util/MathUtils.java
+++ b/src/main/java/org/apache/commons/math3/util/MathUtils.java
@@ -57,6 +57,18 @@ public static int hash(double value) {
         return new Double(value).hashCode();
     }
 
+    /**
+     * Returns {@code true} if the values are equal according to semantics of
+     * {@link Double#equals(Object)}.
+     *
+     * @param x Value
+     * @param y Value
+     * @return {@code new Double(x).equals(new Double(y))}
+     */
+    public static boolean equals(double x, double y) {
+        return new Double(x).equals(new Double(y));
+    }
+
     /**
      * Returns an integer hash code representing the given double array.
      *
diff --git a/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java b/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
index a85825e308..2f99dedd72 100644
--- a/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
+++ b/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
@@ -25,10 +25,27 @@
 
 /**
  * Test cases for the MathUtils class.
+ *
  * @version $Id$
- *          2007) $
  */
 public final class MathUtilsTest {
+    @Test
+    public void testEqualsDouble() {
+        final double x = 1234.5678;
+        Assert.assertTrue(MathUtils.equals(x, x));
+        Assert.assertFalse(MathUtils.equals(x, -x));
+
+        // Special cases (cf. semantics of JDK's "Double").
+        // 1. NaN
+        Assert.assertTrue(MathUtils.equals(Double.NaN, Double.NaN));
+        // 2. Negative zero
+        final double mZero = -0d;
+        final double zero = 0d;
+        Assert.assertTrue(MathUtils.equals(zero, zero));
+        Assert.assertTrue(MathUtils.equals(mZero, mZero));
+        Assert.assertFalse(MathUtils.equals(mZero, zero));
+    }
+
     @Test
     public void testHash() {
         double[] testArray = {
