[
    {
        "Message": "Fix transactional bug in mysql--transaction must be committed.",
        "Diff": "\n@@ -1,58 +1,59 @@\n     public void put(ByteArray key, Versioned<byte[]> value) throws PersistenceFailureException {\n         StoreUtils.assertValidKey(key);\n         boolean doCommit = false;\n         Connection conn = null;\n         PreparedStatement insert = null;\n         PreparedStatement select = null;\n         ResultSet results = null;\n         String insertSql = \"insert into \" + name + \" (key_, version_, value_) values (?, ?, ?)\";\n         String selectSql = \"select key_, version_ from \" + name + \" where key_ = ?\";\n         try {\n             conn = datasource.getConnection();\n             conn.setAutoCommit(false);\n \n             // check for superior versions\n             select = conn.prepareStatement(selectSql);\n             select.setBytes(1, key.get());\n             results = select.executeQuery();\n             while(results.next()) {\n                 byte[] thisKey = results.getBytes(\"key_\");\n                 VectorClock version = new VectorClock(results.getBytes(\"version_\"));\n                 Occured occured = value.getVersion().compare(version);\n                 if(occured == Occured.BEFORE)\n                     throw new ObsoleteVersionException(\"Attempt to put version \"\n                                                        + value.getVersion()\n                                                        + \" which is superceeded by \" + version\n                                                        + \".\");\n                 else if(occured == Occured.AFTER)\n                     delete(conn, thisKey, version.toBytes());\n             }\n \n             // Okay, cool, now put the value\n             insert = conn.prepareStatement(insertSql);\n             insert.setBytes(1, key.get());\n             VectorClock clock = (VectorClock) value.getVersion();\n             insert.setBytes(2, clock.toBytes());\n             insert.setBytes(3, value.getValue());\n             insert.executeUpdate();\n+            doCommit = true;\n         } catch(SQLException e) {\n             if(e.getErrorCode() == MYSQL_ERR_DUP_KEY || e.getErrorCode() == MYSQL_ERR_DUP_ENTRY) {\n                 throw new ObsoleteVersionException(\"Key or value already used.\");\n             } else {\n                 throw new PersistenceFailureException(\"Fix me!\", e);\n             }\n         } finally {\n             if(conn != null) {\n                 try {\n                     if(doCommit)\n                         conn.commit();\n                     else\n                         conn.rollback();\n                 } catch(SQLException e) {}\n             }\n             tryClose(results);\n             tryClose(insert);\n             tryClose(select);\n             tryClose(conn);\n         }\n     }\n",
        "Explanation": "",
        "Answer": "Buggy"
    },
    {
        "Message": "Fix transactional bug in mysql--transaction must be committed.",
        "Diff": "\n@@ -1,5 +1,5 @@\n     public void create() {\n-        execute(\"create table \"\n-                + getName()\n-                + \" (key_ varbinary(200) not null, version_ varbinary(200) not null, value_ blob, primary key(key_, version_))\");\n+        execute(\"create table \" + getName()\n+                + \" (key_ varbinary(200) not null, version_ varbinary(200) not null, \"\n+                + \" value_ blob, primary key(key_, version_)) engine = InnoDB\");\n     }\n",
        "Explanation": "",
        "Answer": "NotBuggy"
    },
    {
        "Message": "fixed bug in CPD directory scanning\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@660 51baf565-9d33-0410-a72c-fc3788e3496d",
        "Diff": "\n@@ -1,12 +1,14 @@\n     private void scanDirectory(File dir, List list, boolean recurse) {\n      FilenameFilter filter = new JavaFileOrDirectoryFilter();\n      String[] possibles = dir.list(filter);\n      for (int i=0; i<possibles.length; i++) {\n         File tmp = new File(dir + System.getProperty(\"file.separator\") + possibles[i]);\n-        if (recurse && tmp.isDirectory()) {\n-           scanDirectory(tmp, list, true);\n+        if (tmp.isDirectory()) {\n+            if (recurse) {\n+                scanDirectory(tmp, list, true);\n+            }\n         } else {\n            list.add(new File(dir + System.getProperty(\"file.separator\") + possibles[i]));\n         }\n      }\n     }\n",
        "Explanation": "",
        "Answer": "Buggy"
    },
    {
        "Message": "fixed bug in CPD directory scanning\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@660 51baf565-9d33-0410-a72c-fc3788e3496d",
        "Diff": "\n@@ -1,23 +1,24 @@\n     private void go() {\n         try {\n             CPD cpd = new CPD();\n             cpd.setListener(this);\n             cpd.setMinimumTileSize(Integer.parseInt(minimumLengthField.getText()));\n             addingTokensBar.setStringPainted(true);\n             if (rootDirectoryField.getText().endsWith(\".java\")) {\n                 cpd.add(new File(rootDirectoryField.getText()));\n             } else {\n                 if (recurseCheckbox.isSelected()) {\n                     cpd.addRecursively(rootDirectoryField.getText());\n                 } else {\n                     cpd.addAllInDirectory(rootDirectoryField.getText());\n                 }\n             }\n             cpd.go();\n             CPDRenderer renderer = new TextRenderer();\n             resultsTextArea.setText(\"\");\n             resultsTextArea.append(renderer.render(cpd));\n         } catch (IOException ioe) {\n             ioe.printStackTrace();\n+            JOptionPane.showMessageDialog(null, \"Halted due to \" + ioe.getClass().getName() + \"; \" + ioe.getMessage());\n         }\n     }\n",
        "Explanation": "",
        "Answer": "NotBuggy"
    },
    {
        "Message": "Fixed a bug so it can be used without setting any options.\n\n\ngit-svn-id: https://svn.cms.waikato.ac.nz/svn/weka/trunk@1855 e0a1b77d-ad91-4216-81b1-defd5f83fa92\n",
        "Diff": "\n@@ -1,7 +1,8 @@\n     public void setOptions(String[] options) throws Exception {\n         \n         setNormalizeWordWeights(Utils.getFlag('N', options));\n         \n         String val = Utils.getOption('S', options);\n-        setSmoothingParameter(Double.parseDouble(val));\n+        if(val.length()!=0)\n+          setSmoothingParameter(Double.parseDouble(val));\n     }\n",
        "Explanation": "",
        "Answer": "Buggy"
    },
    {
        "Message": "Add support for custom ProtocolResolver with Devtools\n\nPrior to this commit, custom `ProtocolResolvers` set on the\n`ApplicationContext` were lost when Devtools is used as the customized\n`ResourceLoader` did not copy any customization made to the default\nresource loader.\n\nThis commit makes sure to copy any `ProtocolResolver` set on the context.\n\nCloses gh-9331\n",
        "Diff": "\n@@ -1,10 +1,9 @@\n \t\tpublic ResourcePatternResolver getResourcePatternResolver(\n \t\t\t\tApplicationContext applicationContext, ResourceLoader resourceLoader) {\n \t\t\tif (applicationContext instanceof WebApplicationContext) {\n \t\t\t\treturn new ServletContextResourcePatternResolver(resourceLoader == null\n-\t\t\t\t\t\t? new WebApplicationContextResourceLoader(\n-\t\t\t\t\t\t\t\t(WebApplicationContext) applicationContext)\n+\t\t\t\t\t\t? createResourceLoader((WebApplicationContext) applicationContext)\n \t\t\t\t\t\t: resourceLoader);\n \t\t\t}\n \t\t\treturn super.getResourcePatternResolver(applicationContext, resourceLoader);\n \t\t}\n",
        "Explanation": "",
        "Answer": "NotBuggy"
    }
]